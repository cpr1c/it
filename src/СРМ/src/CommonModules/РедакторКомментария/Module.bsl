#Область ПрограммныйИнтерфейс

#Область СобытияФормы
Процедура ПриСозданииНаСервере(Форма, ГруппаЭлементовТекста, ПутьКДанным, ФорматТекста = Неопределено) Экспорт
	ФорматТекстаРедактирования=ФорматТекстаРедактирования(ФорматТекста);

	Если ФорматТекстаРедактирования = Перечисления.ФорматыТекстаКомментариев.Markdown Тогда
		РМ_MarkdownСервер.ВставитьПолеРедактированияТекстаНаФорму(Форма, ГруппаЭлементовТекста, ПутьКДанным);
	Иначе
		РВ_РедакторWysiwygHTML.ВставитьПолеРедактированияТекстаНаФорму(Форма, ГруппаЭлементовТекста, ПутьКДанным);
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписьюНаСервере(Форма, ТекущийОбъект, ПутьКДанным, ФорматТекста = Неопределено) Экспорт

	ТекущийОбъект.ДополнительныеСвойства.Вставить("ДанныеПрисоединенныхФайлов",
		РедакторКомментарияКлиентСервер.ДанныеПрисоединенныхФайлов(Форма, ПутьКДанным, ФорматТекста));

КонецПроцедуры

Процедура ПриЗаписиНаСервере(Форма, ТекущийОбъект, ВладелецФайлов, ПутьКДанным, ФорматТекста = Неопределено, Предмет = Неопределено) Экспорт
	ФорматТекстаРедактирования=ФорматТекстаРедактирования(ФорматТекста);
	
	ПутьКДаннымБезЛишнего = РедакторКомментарияКлиентСервер.ПолучитьПутьКДаннымБезЛишнего(ПутьКДанным,
		ФорматТекстаРедактирования);
	ИмяТаблицыПрисоединенныхФайлов = РедакторКомментарияКлиентСервер.ИмяТаблицыПрисоединенныхФайлов(
		ПутьКДаннымБезЛишнего, ФорматТекстаРедактирования);

	ДанныеПрисоединенныхФайлов = ТекущийОбъект.ДополнительныеСвойства.ДанныеПрисоединенныхФайлов;

	Для Каждого СтрокаФайлов Из Форма[ИмяТаблицыПрисоединенныхФайлов] Цикл
		Если ЗначениеЗаполнено(СтрокаФайлов.Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого ТекФайл ИЗ ДанныеПрисоединенныхФайлов Цикл
			Если ТекФайл.Адрес = СтрокаФайлов.Адрес Тогда
				СтрокаФайлов.Ссылка = ТекФайл.Ссылка;
				СтрокаФайлов.ЭтоНовый = Ложь;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;

//	Если ФорматТекстаРедактирования = Перечисления.ФорматыТекстаКомментариев.Markdown Тогда
//		РМ_MarkdownСервер.ЗаписатьНовыеПрисоединенныеФайлы(Форма, ВладелецФайлов, ПутьКДанным, Предмет);
//	Иначе
//		РВ_РедакторWysiwygHTML.ЗаписатьНовыеПрисоединенныеФайлы(Форма, ВладелецФайлов, ПутьКДанным, Предмет);
//	КонецЕсли;

КонецПроцедуры

Процедура ПослеЗаписиНаСервере(Форма, ПутьКДанным, ФорматТекста = Неопределено) Экспорт
	ФорматТекстаРедактирования=ФорматТекстаРедактирования(ФорматТекста);

	Если ФорматТекстаРедактирования = Перечисления.ФорматыТекстаКомментариев.Markdown Тогда
		РМ_MarkdownСервер.УдалитьНовыеПрисоединенныеФайлыСФормыПослеЗаписи(Форма, ПутьКДанным);
	Иначе
		РВ_РедакторWysiwygHTML.УдалитьНовыеПрисоединенныеФайлыСФормыПослеЗаписи(Форма, ПутьКДанным);
	КонецЕсли;

КонецПроцедуры

Процедура ПрочитатьПрисоединенныеФайлы(Форма, ВладелецФайлов, ПутьКДанным, ФорматТекста = Неопределено) Экспорт
	ФорматТекстаРедактирования=ФорматТекстаРедактирования(ФорматТекста);

	ПутьКДаннымБезЛишнего=РедакторКомментарияКлиентСервер.ПолучитьПутьКДаннымБезЛишнего(ПутьКДанным, ФорматТекстаРедактирования);
	ИмяТаблицыПрисоединенныхФайлов=РедакторКомментарияКлиентСервер.ИмяТаблицыПрисоединенныхФайлов(ПутьКДаннымБезЛишнего, ФорматТекстаРедактирования);
	
	ТекущаяТаблицаПрисоединенныхФайлов = Форма[ИмяТаблицыПрисоединенныхФайлов].Выгрузить();
	Форма[ИмяТаблицыПрисоединенныхФайлов].Очистить();
	
	ВсеПрисоединенныеФайлы = Новый Массив;
	РВ_РедакторWysiwygHTMLПереопределяемый.ЗаполнитьПрисоединенныеФайлыКОбъекту(ВсеПрисоединенныеФайлы,ВладелецФайлов,Форма,ПутьКДанным);
	
	Если ВсеПрисоединенныеФайлы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	УникальныйИдентификатор = Форма.УникальныйИдентификатор;
	
	Для Каждого Файл Из ВсеПрисоединенныеФайлы Цикл
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Ссылка", Файл);
			
		НайденныеСтроки = ТекущаяТаблицаПрисоединенныхФайлов.НайтиСтроки(СтруктураПоиска);
		Если НайденныеСтроки.Количество() > 0 Тогда
			ДанныеФайла = Новый Структура;
			ДанныеФайла.Вставить("ИмяФайла", НайденныеСтроки[0].ИмяФайла);
			ДанныеФайла.Вставить("СсылкаНаДвоичныеДанныеФайла", НайденныеСтроки[0].Адрес);
		Иначе
			ДанныеФайла = Неопределено;
			РедакторКомментарияПереопределяемый.ПриПолученииДанныхФайла(ДанныеФайла, Файл, УникальныйИдентификатор,
				Форма, ВладелецФайлов, ПутьКДанным);

			Если ДанныеФайла = Неопределено Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		СтрокаФайла = Форма[ИмяТаблицыПрисоединенныхФайлов].Добавить();
		СтрокаФайла.ИмяФайла = ДанныеФайла.ИмяФайла;
		СтрокаФайла.Адрес = ДанныеФайла.СсылкаНаДвоичныеДанныеФайла;
		СтрокаФайла.ЭтоНовый = Ложь;
		СтрокаФайла.Ссылка = Файл;
		
	КонецЦикла;

КонецПроцедуры
#КонецОбласти

#Область СобытияОбъекта

Процедура ПриЗаписиОбъекта(ТекущийОбъект, Задача) Экспорт
	//Запишем присоединенныые файлы
	Если ТекущийОбъект.ДополнительныеСвойства.Свойство("ДанныеПрисоединенныхФайлов") Тогда
		УправлениеЗадачами.ЗаписатьПрисоединенныеФайлыПоДаннымПрисоединенныхФайловРедакторов(
			Задача, ТекущийОбъект.ДополнительныеСвойства.ДанныеПрисоединенныхФайлов,
			ТекущийОбъект.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

Функция ВидРедактораКомментарияПользователя(ИмяПользователя = Неопределено) Экспорт
	УстановитьПривилегированныйРежим(Истина);

	ВидПоУмолчанию=Константы.ВидРедактораКомментария.Получить();
	Если Не ЗначениеЗаполнено(ВидПоУмолчанию) Тогда
		ВидПоУмолчанию=Перечисления.ФорматыТекстаКомментариев.HTML;
	КонецЕсли;

	ВидРедактора = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НастройкиЗадач", "ВидРедактораКомментария",
		ВидПоУмолчанию, , ИмяПользователя);

	Возврат ВидРедактора;

КонецФункции

Процедура УстановитьВидРедактораКомментарияПользователя(ВидРедактора, ИмяПользователя = Неопределено) Экспорт
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("НастройкиЗадач", "ВидРедактораКомментария", ВидРедактора, ,
		ИмяПользователя, Истина);
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ФорматТекстаРедактирования(ФорматТекста = Неопределено) Экспорт
	Если ФорматТекста = Неопределено Тогда
		ФорматТекстаРедактирования=Константы.ВидРедактораКомментария.Получить();
	Иначе
		ФорматТекстаРедактирования=ФорматТекста;
	КонецЕсли;

	Если Не ЗначениеЗаполнено(ФорматТекстаРедактирования) Тогда
		ФорматТекстаРедактирования=ВидРедактораКомментарияПользователя();
	КонецЕсли;

	Возврат ФорматТекстаРедактирования;
КонецФункции

Функция ВариантыОформленияТекстаКомментария() Экспорт
	Варианты=Новый Структура;

	Для Каждого ТекЗначение Из Метаданные.Перечисления.ФорматыТекстаКомментариев.ЗначенияПеречисления Цикл
		Варианты.Вставить(ТекЗначение.Имя, Перечисления.ФорматыТекстаКомментариев[ТекЗначение.Имя]);
	КонецЦикла;

	Возврат Варианты;
КонецФункции

#КонецОбласти