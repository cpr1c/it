////////////////////////////////////////////////////////////////////////////////
// Работа с таймерами учета трудозатрат
//  
////////////////////////////////////////////////////////////////////////////////
#Область ПрограммныйИнтерфейс

#Область ОповещенияФорм
Процедура ОповеститьОбИзмененииТаймера(ИдентификаторТаймера) Экспорт

	ДанныеТаймеровДляПоляHTML=ТаймерыСервер.ДанныеТаймеровДляВыводаВПолеHTML();
	Оповестить("ИзмененТаймер", ИдентификаторТаймера, ДанныеТаймеровДляПоляHTML);
КонецПроцедуры
Процедура ОповеститьОДобавленииТаймера(ИдентификаторТаймера) Экспорт
	ДанныеТаймеровДляПоляHTML=ТаймерыСервер.ДанныеТаймеровДляВыводаВПолеHTML();
	Оповестить("ДобавленТаймер", ИдентификаторТаймера, ДанныеТаймеровДляПоляHTML);
КонецПроцедуры
Процедура ОповеститьОбУдаленииТаймера(ИдентификаторТаймера) Экспорт

	ДанныеТаймеровДляПоляHTML=ТаймерыСервер.ДанныеТаймеровДляВыводаВПолеHTML();
	Оповестить("УдаленТаймер", ИдентификаторТаймера, ДанныеТаймеровДляПоляHTML);
КонецПроцедуры

Процедура ОповеститьОФиксацииВремениПоТаймеру(ИдентификаторТаймера) Экспорт
	Оповестить("ЗафиксироватьТрудозатратыПоТаймеру", ИдентификаторТаймера);
КонецПроцедуры

#КонецОбласти

#Область УправлениеТаймерами
Процедура СоздатьИСтартоватьТаймерПоПредмету(Предмет) Экспорт
	ИдентфикаторТаймера=ТаймерыСервер.СоздатьИСтартоватьТаймер(Предмет);
	ОповеститьОДобавленииТаймера(ИдентфикаторТаймера);
КонецПроцедуры

Процедура УдалитьТаймер(Идентификатор) Экспорт
	Если Идентификатор = Неопределено Или Не ЗначениеЗаполнено(Идентификатор) Тогда
		Возврат;
	КонецЕсли;

	ДополнительныеПараметры = Новый Структура("Идентификатор", Идентификатор);
	Оповещение = Новый ОписаниеОповещения("УдалитьТаймерЗавершение", ЭтотОбъект, ДополнительныеПараметры);

	ПоказатьВопрос(Оповещение, "Удалить выбранный таймер безвозвратно?", РежимДиалогаВопрос.ДаНет);

КонецПроцедуры

Процедура СтартоватьТаймер(Идентификатор) Экспорт
	Если Идентификатор = Неопределено Или Не ЗначениеЗаполнено(Идентификатор) Тогда
		Возврат;
	КонецЕсли;

	ТаймерыСервер.СтартоватьТаймер(Идентификатор);
	ОповеститьОбИзмененииТаймера(Идентификатор);
КонецПроцедуры

Процедура ОстановитьТаймер(Идентификатор) Экспорт
	Если Идентификатор = Неопределено Или Не ЗначениеЗаполнено(Идентификатор) Тогда
		Возврат;
	КонецЕсли;

	ТаймерыСервер.ОстановитьТаймер(Идентификатор);
	ОповеститьОбИзмененииТаймера(Идентификатор);
КонецПроцедуры

Процедура ЗафиксироватьТрудозатратыПоТаймеру(Идентификатор) Экспорт
	Если Идентификатор = Неопределено Или Не ЗначениеЗаполнено(Идентификатор) Тогда
		Возврат;
	КонецЕсли;

	ПараметрыФормы = Новый Структура("ИдентификаторТаймера", Идентификатор);
	ОткрытьФорму("Документ.Трудозатраты.ФормаОбъекта", ПараметрыФормы, ЭтотОбъект);
КонецПроцедуры
#КонецОбласти

#Область СобытияФормы

Процедура ОбработкаОповещенияФормы(Форма, ИмяСобытия, Параметр, Источник) Экспорт
	Если Не Форма.Открыта() Тогда
		Возврат;
	КонецЕсли;

	Если ИмяСобытия = "ИзмененТаймер"
		Или ИмяСобытия="ДобавленТаймер"
		Или ИмяСобытия="УдаленТаймер" Тогда
			
		ЭлементФормы=Форма.Элементы.ПолеHTMLТаймеров;
		Если ЭлементФормы.Документ = Неопределено Тогда
			Возврат;
		КонецЕсли;
		ДокументHTMLView = ЭлементФормы.Документ.defaultView;
		УстановитьТекущиеТаймерыВПолеHTML(ДокументHTMLView, Источник);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти
#Область СобытияПоляHTMLТаймеров
Процедура ПолеHTMLТаймеровДокументСформирован(Форма, Элемент, Предмет = Неопределено) Экспорт
	ДокументHTMLView = Элемент.Документ.defaultView;
	
    //Устанавливаем правильную ссылку на базу
	НавигационнаяСсылкаБазы=ПолучитьНавигационнуюСсылкуИнформационнойБазы() + "/";
	ДокументHTMLView.appTo1C.setBaseURL(НавигационнаяСсылкаБазы);

    // регистрация обработчика события поля HTML
	Кнопка=Элемент.Документ.getElementById("interactionButton");
	ДобавитьОбработчик Кнопка.onclick, ПолеHTMLТаймеровОбработчикСобытия;

	Если Предмет <> Неопределено Тогда
		ДокументHTMLView.appTo1C.setContextMode(ПолучитьНавигационнуюСсылку(Предмет),
			ТаймерыСервер.СсылкаПредметаВСтроку(Предмет));
	КонецЕсли;

	УстановитьТекущиеТаймерыВПолеHTML(ДокументHTMLView);
КонецПроцедуры

//@skip-warning
Процедура ПолеHTMLТаймеровОбработчикСобытия(Событие)
	ИмяСобытия=Событие.detail.name;
	ДанныеСобытия=Событие.detail.data;

	Если ИмяСобытия = "OPEN_CONTEXT_URL" Тогда
		ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку(ДанныеСобытия);
	ИначеЕсли ИмяСобытия = "START_TIMER" Тогда
		Если ЗначениеЗаполнено(ДанныеСобытия) Тогда
			СтартоватьТаймер(ДанныеСобытия);
		Иначе
			ДокументView=Событие.target.ownerDocument.defaultView;
			СсылкаВоВнутреннемФормате=ДокументView.appTo1C.getContextRef();
			СсылкаНаПредмет=ТаймерыСервер.СтрокаСсылкиПредметаВЗначение(СсылкаВоВнутреннемФормате);
			Если ЗначениеЗаполнено(СсылкаНаПредмет) Тогда
				СоздатьИСтартоватьТаймерПоПредмету(СсылкаНаПредмет);
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ИмяСобытия = "PAUSE_TIMER" Тогда
		ОстановитьТаймер(ДанныеСобытия);
	ИначеЕсли ИмяСобытия = "FINISH_TIMER" Тогда
		ОстановитьТаймер(ДанныеСобытия);
			
		ДокументView=Событие.target.ownerDocument.defaultView;
		РежимТаймераПредмета=ДокументView.appTo1C.getContextMode();
		Если РежимТаймераПредмета Тогда
			ОповеститьОФиксацииВремениПоТаймеру(ДанныеСобытия);
		Иначе
			ЗафиксироватьТрудозатратыПоТаймеру(ДанныеСобытия);
		КонецЕсли;
	ИначеЕсли ИмяСобытия = "COMMENT_CHANGE" Тогда
		СтруктураСобытия=ОбщегоНазначенияКлиентСервер.ПрочитатьДанныеJSON(ДанныеСобытия);
		ТаймерыСервер.ОтразитьИзменениеТаймераУчетаВремени(СтруктураСобытия.id, Новый Структура("Комментарий",
			СтруктураСобытия.comment));
		ОповеститьОбИзмененииТаймера(СтруктураСобытия.id);
	ИначеЕсли ИмяСобытия = "CANCEL_TIMER" Тогда
		УдалитьТаймер(ДанныеСобытия);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура УдалитьТаймерЗавершение(РезультатДиалога, ДополнительныеПараметры) Экспорт
	Если РезультатДиалога = Неопределено Или РезультатДиалога = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	Идентификатор = ДополнительныеПараметры.Идентификатор;

	ТаймерыСервер.УдалитьТаймер(Идентификатор);
	ОповеститьОбУдаленииТаймера(Идентификатор);
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Процедура УстановитьТекущиеТаймерыВПолеHTML(ДокументHTMLView, ДанныеДляПоля = Неопределено)
	Если ДанныеДляПоля = Неопределено Тогда
		ДанныеТаймеровДляПоляHTML=ТаймерыСервер.ДанныеТаймеровДляВыводаВПолеHTML();
	Иначе
		ДанныеТаймеровДляПоляHTML=ДанныеДляПоля;
	КонецЕсли;

	ДокументHTMLView.appTo1C.setActions(ДанныеТаймеровДляПоляHTML.ВидыДеятельности);
	ДокументHTMLView.appTo1C.setTimers(ДанныеТаймеровДляПоляHTML.Таймеры);
КонецПроцедуры

#КонецОбласти