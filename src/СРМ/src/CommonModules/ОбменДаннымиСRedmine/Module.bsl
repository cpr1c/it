
Процедура ЗагрузкаИзRedmine() Экспорт
	
	НачалоЗагрузки = ТекущаяДата();
			
	//ОбновитьСправочникиНаСервере();
	ЗагрузитьЗадачи();
	ЗагрузитьТрудозатраты();
	
	Константы.RA_ДатаПоследнейЗагрузкиИзRedmine.Установить(НачалоЗагрузки);
		
КонецПроцедуры


Процедура ОбновитьСправочники(НастройкаПодключения = Неопределено) Экспорт
	
	ЗаписьЖурналаРегистрации(СобытиеОбменаСRedmine(), УровеньЖурналаРегистрации.Информация, , , 
		СтрШаблон("Начало загрузки справочников: %1", ТекущаяДата()));
	
	Если НастройкаПодключения = Неопределено Тогда
		НастройкаПодключения = RA_RedmineПротоколПодключенияПовтИсп.ПолучитьНастройкуПодключенияПоУмолчанию();
	КонецЕсли;
	
	МассивДанных=RA_RedmineПротоколПодключения.ПолучитьМассивПроектов(НастройкаПодключения);
	RA_RedmineСервер.ОбновитьСправочникПроектов(МассивДанных);
	
	МассивДанных=RA_RedmineПротоколПодключения.ПолучитьМассивВерсий(НастройкаПодключения);
	RA_RedmineСервер.ОбновитьСправочникВерсий(МассивДанных);
	
	МассивДанных=RA_RedmineПротоколПодключения.ПолучитьМассивСтатусовЗадач(НастройкаПодключения);
	RA_RedmineСервер.ОбновитьСправочникСтатусовЗадач(МассивДанных);
	
	МассивДанных=RA_RedmineПротоколПодключения.ПолучитьМассивПользователей(НастройкаПодключения);
	RA_RedmineСервер.ОбновитьСправочникПользователей(МассивДанных);
	
	МассивДанных=RA_RedmineПротоколПодключения.ПолучитьМассивВидовАктивности(НастройкаПодключения);
	RA_RedmineСервер.ОбновитьСправочникВидовАктивности(МассивДанных);
	
	МассивДанных=RA_RedmineПротоколПодключения.ПолучитьМассивПриоритетов(НастройкаПодключения);
	RA_RedmineСервер.ОбновитьСправочникПриоритетов(МассивДанных);
	
	МассивДанных=RA_RedmineПротоколПодключения.ПолучитьМассивКатегорийЗадач(НастройкаПодключения);
	RA_RedmineСервер.ОбновитьСправочникКатегорииЗадач(МассивДанных);		
	
	МассивДанных=RA_RedmineПротоколПодключения.ПолучитьМассивТрекеров(НастройкаПодключения);
	RA_RedmineСервер.ОбновитьСправочникТрекеров(МассивДанных);		
	
	ЗаписьЖурналаРегистрации(СобытиеОбменаСRedmine(), УровеньЖурналаРегистрации.Информация, , , 
		СтрШаблон("Окончание загрузки справочников: %1", ТекущаяДата()));
	
КонецПроцедуры

Процедура ЗагрузитьЗадачи(НастройкаПодключения = Неопределено) Экспорт
	
	ЗаписьЖурналаРегистрации(СобытиеОбменаСRedmine(), УровеньЖурналаРегистрации.Информация, , , 
		СтрШаблон("Начало загрузки задач: %1", ТекущаяДата()));
		
	ДатаПоследнейЗагрузки = Константы.RA_ДатаПоследнейЗагрузкиИзRedmine.Получить();
		
	//To fetch issues updated after a certain timestamp (uncrypted filter is ">=2014-01-02T08:12:32Z") :
	//GET /issues.xml?updated_on=%3E%3D2014-01-02T08:12:32Z

	Фильтры=Новый Структура;
	Фильтры.Вставить("updated_on",">="+Формат(ДатаПоследнейЗагрузки,"ДФ=yyyy-MM-dd"));
	
	Если НастройкаПодключения = Неопределено Тогда
		НастройкаПодключения = RA_RedmineПротоколПодключенияПовтИсп.ПолучитьНастройкуПодключенияПоУмолчанию();
	КонецЕсли;
		
	МассивЗадач=RA_RedmineПротоколПодключения.ПолучитьМассивЗадачПоФильтрам(НастройкаПодключения,Фильтры);
	RA_RedmineСервер.ОбновитьСправочникЗадач(МассивЗадач);
	
	ЗаписьЖурналаРегистрации(СобытиеОбменаСRedmine(), УровеньЖурналаРегистрации.Информация, , , 
		СтрШаблон("Окончание загрузки задач: %1", ТекущаяДата()));
	
КонецПроцедуры

Процедура ЗагрузитьТрудозатраты(НастройкаПодключения = Неопределено) Экспорт
	
	ЗаписьЖурналаРегистрации(СобытиеОбменаСRedmine(), УровеньЖурналаРегистрации.Информация, , , 
		СтрШаблон("Начало загрузки трудозатрат: %1", ТекущаяДата()));
		
	ДатаПоследнейЗагрузки = Константы.RA_ДатаПоследнейЗагрузкиИзRedmine.Получить();
		
	//GET /time_entries.xml

	Фильтры=Новый Структура;
	// в трудозатратах фильтр по дате обновления не работает, поэтому получим по дате отбивки
	// наши правила позволяют отбиваться за вчера, поэтому получим за 2 предыдущих дня
	Фильтры.Вставить("spent_on",">="+Формат(НачалоДня(ДатаПоследнейЗагрузки)-5*24*60*60,"ДФ=yyyy-MM-dd"));
	
	Если НастройкаПодключения = Неопределено Тогда
		НастройкаПодключения = RA_RedmineПротоколПодключенияПовтИсп.ПолучитьНастройкуПодключенияПоУмолчанию();
	КонецЕсли;
		
	МассивЗадач=RA_RedmineПротоколПодключения.ПолучитьТрудозатратыПоФильтрам(НастройкаПодключения,Фильтры);
	RA_RedmineСервер.ОбновитьСправочникТрудозатрат(МассивЗадач);
	
	ЗаписьЖурналаРегистрации(СобытиеОбменаСRedmine(), УровеньЖурналаРегистрации.Информация, , , 
		СтрШаблон("Окончание загрузки трудозатрат: %1", ТекущаяДата()));
	
КонецПроцедуры

Функция СобытиеОбменаСRedmine() Экспорт
	
	Возврат "Обмен с Redmine";
	
КонецФункции
