#Область ПодключениеПоНастрйоке
Процедура ВыполнитьПодключение(Подключение,Логин,Пароль) Экспорт 
	СтруктураПараметровПодключения=ЦПР_ПодключенияСервер.ПолучитьСтруктуруНастройкиПодключения(Подключение,Логин,Пароль);
	
	Если СтруктураПараметровПодключения.ТипСтрокой="RDP" Тогда
		ВыполнитьПодключениеКУдаленномуРабочемуСтолу(СтруктураПараметровПодключения);
	ИначеЕсли СтруктураПараметровПодключения.ТипСтрокой="AmmyAdmin" Тогда
		ВыполнитьПодключениеЧерезАммиАдмин(СтруктураПараметровПодключения);
	ИначеЕсли СтруктураПараметровПодключения.ТипСтрокой="Email" Тогда
		ВыполнитьПодключениеКЭлектроннойПочте(СтруктураПараметровПодключения);
	ИначеЕсли СтруктураПараметровПодключения.ТипСтрокой="HTTP" Тогда
		ВыполнитьПодключениеКИнтернетРесурсу(СтруктураПараметровПодключения);
	ИначеЕсли СтруктураПараметровПодключения.ТипСтрокой="TeamViewer" Тогда
		ВыполнитьПодключениеЧерезТимВьювер(СтруктураПараметровПодключения);
	ИначеЕсли СтруктураПараметровПодключения.ТипСтрокой="AnyDesk" Тогда
		ВыполнитьПодключениеЧерезAnyDesk(СтруктураПараметровПодключения);
	ИначеЕсли СтруктураПараметровПодключения.ТипСтрокой="VNC" Тогда
		ВыполнитьПодключениеЧерезVNC(СтруктураПараметровПодключения);
	ИначеЕсли СтруктураПараметровПодключения.ТипСтрокой="UltraVNC" Тогда
		ВыполнитьПодключениеЧерезUltraVNC(СтруктураПараметровПодключения);
	ИначеЕсли СтруктураПараметровПодключения.ТипСтрокой="VPN" Тогда
		ВыполнитьПодключениеКVPN(СтруктураПараметровПодключения);
	ИначеЕсли СтруктураПараметровПодключения.ТипСтрокой="SSH" Тогда	
		ВыполнитьПодключениеКSSH(СтруктураПараметровПодключения);
	КонецЕсли;

КонецПроцедуры
	
Процедура ВыполнитьПодключениеКУдаленномуРабочемуСтолу(СтруктураНастройки) 
	
	Если ОбщегоНазначенияКлиентСервер.ЭтоWindowsКлиент() Тогда
		//1. добавляем пароль в хранилище паролей
		СтрокаКоманды="cmdkey /add:"+СокрЛП(СтруктураНастройки.Адрес)+" /user:"+СокрЛП(СтруктураНастройки.Логин)+" /pass:"+СокрЛП(СтруктураНастройки.Пароль);
		ЗапуститьПриложение(СтрокаКоманды,,Истина);
		
		ИмяВременногоФайла=ПолучитьИмяВременногоФайла("rdp");
		
		ДД=ЦПР_ПодключенияСервер.ПолучитьДвоичныеДанныеФайлаПодключениеКУдаленнымРабочимСтолам(СтруктураНастройки);
		ДД.Записать(ИмяВременногоФайла);
		
		СтрокаКоманды="mstsc """+ИмяВременногоФайла+""" /f";
		
	иначе
		//Сначала пробуем ремину оживить
		ЗашифрованныйПароль=ЗашифроватьПарольДляRemmina(СокрЛП(СтруктураНастройки.Пароль));
		СтрокаКоманды="export DIR=/tmp/remmina ; mkdir -p $DIR ; chmod 700 $DIR ; export FILE=$(mktemp -p $DIR XXXXXXXXXX --suffix=.remmina) ; echo '[remmina]\nname="+СтруктураНастройки.ПартнерНаименование+"|"+СтруктураНастройки.НаименованиеВладельца+"|"+СтруктураНастройки.Логин+"\nprotocol=RDP\nserver="+СокрЛП(СтруктураНастройки.Адрес)+?(ЗначениеЗаполнено(СтруктураНастройки.Порт),":"+Формат(СтруктураНастройки.Порт,"ЧГ=0"),"")+"\nscale=1\nwindow_maximize=1\nviewmode=1\nusername="+СокрЛП(СтруктураНастройки.Логин)+"\npassword="+ЗашифрованныйПароль+"' > $FILE ; remmina -c $FILE ; rm -f $FILE";
		
	
	КонецЕсли;
	КомандаСистемы(СтрокаКоманды);
	
	Попытка
		//УдалитьФайлы(ИмяВременногоФайла);
	Исключение
	КонецПопытки;
	
КонецПроцедуры

Процедура ВыполнитьПодключениеЧерезАммиАдмин(СтруктураНастройки) 
	Файл=Новый Файл(СтруктураНастройки.ИмяФайлаПрограммы);
	
	Если НЕ Файл.Существует() Тогда
		Предупреждение("Не указан путь к файлу амми админа");
		Возврат;
	КонецЕсли;
	
	ПутькКПрограмме = """"+СтруктураНастройки.ИмяФайлаПрограммы+"""";
	
	СтрокаЗапуска = ПутькКПрограмме +" -connect "+ СокрЛП(СтруктураНастройки.Адрес)+ ?(ЗначениеЗаполнено(СтруктураНастройки.Пароль)," -password " + СтруктураНастройки.Пароль,"");
	ЗапуститьПриложение(СтрокаЗапуска);
КонецПроцедуры

Процедура ВыполнитьПодключениеКЭлектроннойПочте(СтруктураНастройки) 
	
КонецПроцедуры

Процедура ВыполнитьПодключениеКИнтернетРесурсу(СтруктураНастройки) 
	ЗапуститьПриложение(СокрЛП(СтруктураНастройки.Адрес)+?(ЗначениеЗаполнено(СтруктураНастройки.Порт),":"+Формат(СтруктураНастройки.Порт,"ЧГ=0"),""));
КонецПроцедуры

Процедура ВыполнитьПодключениеЧерезТимВьювер(СтруктураНастройки) 
	
	//||teamviewer.exe -i <ID> --Password <Password>
	Если ОбщегоНазначенияКлиентСервер.ЭтоWindowsКлиент() Тогда
		Файл=Новый Файл(СтруктураНастройки.ИмяФайлаПрограммы);
		
		Если НЕ Файл.Существует() Тогда
			Предупреждение("Не указан путь к файлу Team Viewer");
			Возврат;
		КонецЕсли;
		
		ПутьКПрограмме = """"+СтруктураНастройки.ИмяФайлаПрограммы+"""";
	Иначе
		ПутьКПрограмме="teamviewer";
	КонецЕсли;
	
	
	СтрокаЗапуска = ПутьКПрограмме +" -i """+ СокрЛП(СтруктураНастройки.Адрес)+""" --Password """+СтруктураНастройки.Пароль+"""";
	ЗапуститьПриложение(СтрокаЗапуска);
КонецПроцедуры

Процедура ВыполнитьПодключениеЧерезAnyDesk(СтруктураНастройки) 
	//	Connecting with Password (only works for Windows)
	//Example script that connects to alias@ad with password. Use command line or batch script:
	
	//echo password | "C:\Program Files (x86)\AnyDesk\AnyDesk.exe" alias@ad --with-password
	Если ОбщегоНазначенияКлиентСервер.ЭтоWindowsКлиент() Тогда
		Файл=Новый Файл(СтруктураНастройки.ИмяФайлаПрограммы);
		
		Если НЕ Файл.Существует() Тогда
			Предупреждение("Не указан путь к файлу AnyDesk");
			Возврат;
		КонецЕсли;
		
		ПутьКПрограмме = """"+СтруктураНастройки.ИмяФайлаПрограммы+"""";
	Иначе
		ПутьКПрограмме="anydesk";
	КонецЕсли;
	
	
	СтрокаЗапуска = "echo "+СтруктураНастройки.Пароль+" | "+ПутьКПрограмме+" "+СокрЛП(СтруктураНастройки.Адрес)+" --with-password";
	ЗапуститьПриложение(СтрокаЗапуска);
КонецПроцедуры

Процедура ВыполнитьПодключениеЧерезVNC(СтруктураНастройки) 
	
	Если Не ЗначениеЗаполнено(СтруктураНастройки.ИмяФайлаПрограммы) Тогда
		СтруктураНастройки.ИмяФайлаПрограммы=ЦПР_ХранениеПодключенийКлиент.ПолучитьИмяВременногоФайлаСохраненияКлиентаTigthtVNC();
	КонецЕсли;
	
	Файл=Новый Файл(СтруктураНастройки.ИмяФайлаПрограммы);
	
	Если НЕ Файл.Существует() Тогда
		Предупреждение("Не указан путь к файлу TightVNC Viewer");
		Возврат;
	КонецЕсли;
	
	Если ОбщегоНазначенияКлиентСервер.ЭтоWindowsКлиент() Тогда
		ПутьКПрограмме = """"+СтруктураНастройки.ИмяФайлаПрограммы+"""";
	иначе
		ПутьКПрограмме = "java -jar "+СтруктураНастройки.ИмяФайлаПрограммы +" -showConnectionDialog=no";
	КонецЕсли;

	
	СтрокаЗапуска = ПутьКПрограмме +" -host="+ СокрЛП(СтруктураНастройки.Адрес)+?(ЗначениеЗаполнено(СтруктураНастройки.Порт)," -port="+Формат(СтруктураНастройки.Порт,"ЧГ=0"),"")+" -password="+СтруктураНастройки.Пароль;
	ЗапуститьПриложение(СтрокаЗапуска);

КонецПроцедуры

Процедура ВыполнитьПодключениеЧерезUltraVNC(СтруктураНастройки) 
	
	Если Не ЗначениеЗаполнено(СтруктураНастройки.ИмяФайлаПрограммы) Тогда
		СтруктураНастройки.ИмяФайлаПрограммы=ЦПР_ХранениеПодключенийКлиент.ПолучитьИмяВременногоФайлаСохраненияКлиентаTigthtVNC();
	КонецЕсли;

	Файл=Новый Файл(СтруктураНастройки.ИмяФайлаПрограммы);
	
	Если НЕ Файл.Существует() Тогда
		Предупреждение("Не указан путь к файлу UltraVNC Viewer");
		Возврат;
	КонецЕсли;
	
	Если ОбщегоНазначенияКлиентСервер.ЭтоWindowsКлиент() Тогда
		ПутьКПрограмме = """"+СтруктураНастройки.ИмяФайлаПрограммы+"""";
		СтрокаЗапуска = ПутьКПрограмме +" -connect "+СокрЛП(СтруктураНастройки.Адрес)+?(ЗначениеЗаполнено(СтруктураНастройки.Порт),":"+Формат(СтруктураНастройки.Порт,"ЧГ=0"),"")+" -password "+СтруктураНастройки.Пароль;
		
	иначе
		ПутьКПрограмме = "java -jar "+СтруктураНастройки.ИмяФайлаПрограммы +" -showConnectionDialog=no";
		СтрокаЗапуска = ПутьКПрограмме +" -host="+ СокрЛП(СтруктураНастройки.Адрес)+?(ЗначениеЗаполнено(СтруктураНастройки.Порт)," -port="+Формат(СтруктураНастройки.Порт,"ЧГ=0"),"")+" -password="+СтруктураНастройки.Пароль;
	КонецЕсли;

	
	ЗапуститьПриложение(СтрокаЗапуска);

КонецПроцедуры

Процедура ВыполнитьПодключениеКVPN(СтруктураНастройки) 
	
КонецПроцедуры

Процедура ВыполнитьПодключениеКSSH(СтруктураНастройки) 
	Если ОбщегоНазначенияКлиентСервер.ЭтоWindowsКлиент() Тогда
		ИмяФайлаПрограммы=ЦПР_ХранениеПодключенийКлиент.ПолучитьИмяВременногоФайлаСохраненияКлиентаPutty();

		СтрокаЗапуска = """"+ИмяФайлаПрограммы +""" -ssh "+СокрЛП(СтруктураНастройки.Адрес)+" -l "+СокрЛП(СтруктураНастройки.Логин)+ ?(ЗначениеЗаполнено(СтруктураНастройки.Порт)," -P "+Формат(СтруктураНастройки.Порт,"ЧГ=0"),"")+ " -pw """+СтруктураНастройки.Пароль+"""";
	Иначе
		
		Если ЦПР_ПодключенияСервер.ПодключатьсяПоSshВLinuxЧерезPutty() Тогда
			ИмяФайлаПрограммы="putty";
			СтрокаЗапуска = ИмяФайлаПрограммы +" -ssh "+СокрЛП(СтруктураНастройки.Адрес)+" -l "+СокрЛП(СтруктураНастройки.Логин)+ ?(ЗначениеЗаполнено(СтруктураНастройки.Порт)," -P "+Формат(СтруктураНастройки.Порт,"ЧГ=0"),"")+ " -pw """+СтруктураНастройки.Пароль+"""";
			
		Иначе
			ИмяФайлаСкрипта=ПолучитьИмяВременногоФайла("sh");
			
			ТекстовыйФайл=Новый ЗаписьТекста(ИмяФайлаСкрипта,КодировкаТекста.UTF8);
			ТекстовыйФайл.ЗаписатьСтроку("#!/bin/sh");
			//ТекстовыйФайл.ЗаписатьСтроку("");
			//ТекстовыйФайл.ЗаписатьСтроку("chmod 777 "+ИмяФайлаСкрипта);
			ТекстовыйФайл.ЗаписатьСтроку("sshpass -p '"+СтруктураНастройки.Пароль+"' ssh -o StrictHostKeychecking=no"+?(ЗначениеЗаполнено(СтруктураНастройки.Порт)," -p "+Формат(СтруктураНастройки.Порт,"ЧГ=0"),"")+" "+СокрЛП(СтруктураНастройки.Логин)+"@"+СокрЛП(СтруктураНастройки.Адрес));
			ТекстовыйФайл.Закрыть();
			
			КомандаСистемы( "chmod 777 "+ИмяФайлаСкрипта);
			
			//СтрокаЗапуска = "x-terminal-emulator --command='"+ИмяФайлаСкрипта+"'";
			СтрокаЗапуска = "x-terminal-emulator -e '"+ИмяФайлаСкрипта+"'";
		КонецЕсли;
	КонецЕсли;
	
	//СтрокаЗапуска = ИмяФайлаСкрипта;
	ЗапуститьПриложение(СтрокаЗапуска);
	
	Попытка
		//УдалитьФайлы(ИмяФайлаСкрипта);
	Исключение
	КонецПопытки;
КонецПроцедуры

#КонецОбласти

Процедура ОписаниеОповещения(ДопПара) Экспорт
	
КонецПроцедуры

Функция  ЗашифроватьПарольДляRemmina(Пароль) Экспорт 
	
	ТекстСкриптаНаПитоне=
	"#!/usr/bin/python2
	|
	|import base64
	|import os
	|import re
	|import sys
	|from Crypto.Cipher import DES3
	|from os.path import expanduser
	|
	|home = expanduser(""~"")
	|REMMINA_FOLDER = home+'/'+'.config/remmina/'
	|REMMINA_PREF = 'remmina.pref'
	|REGEXP_ACCOUNTS = r'[0-9]{13}\.remmina'
	|REGEXP_PREF = r'remmina.pref'
	|
	|fs = open(REMMINA_FOLDER+REMMINA_PREF)
	|fso = fs.readlines()
	|fs.close()
	|
	|for i in fso:
	|    if re.findall(r'secret=', i):
	|          REMMINAPREF_SECRET_B64 = i[len(r'secret='):][:-1]
	|
	|plain = sys.argv[1].encode('utf-8')
	|secret = base64.b64decode(REMMINAPREF_SECRET_B64)
	|key = secret[:24]
	|iv = secret[24:]
	|plain = plain + b""\0"" * (8 - len(plain) % 8)
	|cipher = DES3.new(key, DES3.MODE_CBC, iv)
	|result = cipher.encrypt(plain)
	|result = base64.b64encode(result)
	|result = result.decode('utf-8')
	|
	|print result";
	
	ИмяФайлаСкрипта=ПолучитьИмяВременногоФайла("py");
	Текст=Новый ТекстовыйДокумент;
	Текст.УстановитьТекст(ТекстСкриптаНаПитоне);
	Текст.Записать(ИмяФайлаСкрипта,КодировкаТекста.UTF8);
	
	ИмяВременногоФайла=ПолучитьИмяВременногоФайла("txt");
	
	СтрокаКомманды="echo `python """+ИмяФайлаСкрипта+ """ "+Пароль+"` >"""+ИмяВременногоФайла+"""";
	
	ЗапуститьПриложение(СтрокаКомманды,,Истина);
	
	Текст=Новый ТекстовыйДокумент;
	Текст.Прочитать(ИмяВременногоФайла);
	
	ЗашифрованныйПароль=ТЕкст.ПолучитьСтроку(1);
	
	Попытка
		УдалитьФайлы(ИмяВременногоФайла);
	Исключение
	КонецПопытки;
	
	Попытка
		УдалитьФайлы(ИмяФайлаСкрипта);
	Исключение
	КонецПопытки;
	
	Возврат ЗашифрованныйПароль;
	
КонецФункции


#Область СохранениеПодключенияВФайлы

Процедура ВыполнитьСохранение(Подключение,Логин,Пароль) Экспорт 
	СтруктураПараметровПодключения=ЦПР_ПодключенияСервер.ПолучитьСтруктуруНастройкиПодключения(Подключение,Логин,Пароль);
	
	ДиалогФыбораФайла 	= Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогФыбораФайла.Заголовок				=	"Выберите файл:";
	ДиалогФыбораФайла.МножественныйВыбор		=	Ложь;
	ДиалогФыбораФайла.ПредварительныйПросмотр	=	Ложь;
	ДиалогФыбораФайла.ИндексФильтра			=	0;
	ДиалогФыбораФайла.ПроверятьСуществованиеФайла	=	Истина;

	
	Если СтруктураПараметровПодключения.ТипСтрокой="RDP" Тогда
		ДиалогФыбораФайла.Фильтр					=	"Файл удаленного рабочего стола (*.rdp)|*.rdp";
		ДиалогФыбораФайла.Расширение				=	"rdp";
		
		ОписаниеОповещенияВыбораФайла=Новый ОписаниеОповещения("ВыполнитьСохранениеRDPПодключенияВФайлЗавершение", ЭтотОбъект, Новый Структура("ДиалогФыбораФайла,СтруктураПараметровПодключения", ДиалогФыбораФайла,СтруктураПараметровПодключения));
	Иначе
		Сообщить("Для вида подключения "+ СтруктураПараметровПодключения.Вид+" не задана настройка сохранения");
		Возврат;
	КонецЕсли;

	ДиалогФыбораФайла.Показать(ОписаниеОповещенияВыбораФайла);
КонецПроцедуры

Процедура ВыполнитьСохранениеRDPПодключенияВФайлЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	ДиалогФыбораФайла = ДополнительныеПараметры.ДиалогФыбораФайла;
	
	
	Если (ВыбранныеФайлы <> Неопределено) Тогда
		ИмяФайла= ДиалогФыбораФайла.ПолноеИмяФайла;
	Иначе 
		Возврат;
	КонецЕсли; //когда файл ИмяФайла выбран

	СтруктураПараметровПодключения=ДополнительныеПараметры.СтруктураПараметровПодключения;
	
	ДД=ЦПР_ПодключенияСервер.ПолучитьДвоичныеДанныеФайлаПодключениеКУдаленнымРабочимСтолам(СтруктураПараметровПодключения);
	
	ДД.Записать(ИмяФайла);
КонецПроцедуры	

#КонецОбласти