////////////////////////////////////////////////////////////////////////////////
// Интеграция с Библиотекой технологий сервиса (БТС)
// Здесь размещена обработка программных событий, возникающих в подсистемах БСП,
// и в обратную сторону.
//


// Обработка программных событий, возникающих в подсистемах БСП.
// Только для вызовов из библиотеки БСП в БТС.

#Область СлужебныйПрограммныйИнтерфейс

#Область БазоваяФункциональность

// См. ОбщегоНазначенияКлиентПереопределяемый.ПриНачалеРаботыСистемы.
Процедура ПриНачалеРаботыСистемы(Параметры) Экспорт
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("ТехнологияСервиса.БазоваяФункциональность") Тогда
		МодульТехнологияСервисаИнтеграцияСБСПКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ТехнологияСервисаИнтеграцияСБСПКлиент");
		МодульТехнологияСервисаИнтеграцияСБСПКлиент.ПриНачалеРаботыСистемы(Параметры);
	КонецЕсли;
	
КонецПроцедуры

// См. ОбщегоНазначенияКлиентПереопределяемый.ПередЗавершениемРаботыСистемы.
Процедура ПередЗавершениемРаботыСистемы(Отказ, Предупреждения) Экспорт
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("ТехнологияСервиса.БазоваяФункциональность") Тогда
		МодульТехнологияСервисаИнтеграцияСБСПКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ТехнологияСервисаИнтеграцияСБСПКлиент");
		МодульТехнологияСервисаИнтеграцияСБСПКлиент.ПередЗавершениемРаботыСистемы(Отказ, Предупреждения);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ЗавершениеРаботыПользователей

// Вызывается при завершении сеанса средствами подсистемы ЗавершениеРаботыПользователей.
// 
// Параметры:
//  ФормаВладелец - УправляемаяФорма, из которой выполняется завершение сеанса,
//  НомераСеансов - Число (8,0,+) - номер сеанса, который будет завершен,
//  СтандартнаяОбработка - Булево, флаг выполнения стандартной обработки завершения сеанса
//    (подключение к агенту сервера через COM-соединение или сервер администрирования с
//    запросом параметров подключения к кластеру у текущего пользователя). Может быть
//    установлен в значение Ложь внутри обработчика события, в этом случае стандартная
//    обработка завершения сеанса выполняться не будет,
//  ОповещениеПослеЗавершенияСеанса - ОписаниеОповещения - описание оповещения, которое должно
//    быть вызвано после завершения сеанса (для автоматического обновления списка активных
//    пользователей). При установке значения параметра СтандартнаяОбработка равным Ложь,
//    после успешного завершения сеанса, для переданного описания оповещения должна быть
//    выполнена обработка с помощью метода ВыполнитьОбработкуОповещения (в качестве значения
//    параметра Результат следует передавать КодВозвратаДиалога.ОК при успешном завершении
//    сеанса). Параметр может быть опущен - в этом случае выполнять обработку оповещения не
//    следует.
//
Процедура ПриЗавершенииСеансов(ФормаВладелец, Знач НомераСеансов, СтандартнаяОбработка, Знач ОповещениеПослеЗавершенияСеанса = Неопределено) Экспорт
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("ТехнологияСервиса.БазоваяФункциональность") Тогда
		МодульТехнологияСервисаИнтеграцияСБСПКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ТехнологияСервисаИнтеграцияСБСПКлиент");
		МодульТехнологияСервисаИнтеграцияСБСПКлиент.ПриЗавершенииСеансов(ФормаВладелец, НомераСеансов, СтандартнаяОбработка, ОповещениеПослеЗавершенияСеанса);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПрофилиБезопасности

// См. РаботаВБезопасномРежимеКлиентПереопределяемый.ПриПодтвержденииЗапросовНаИспользованиеВнешнихРесурсов.
Процедура ПриПодтвержденииЗапросовНаИспользованиеВнешнихРесурсов(Знач ИдентификаторыЗапросов, ФормаВладелец, 
	ОповещениеОЗакрытии, СтандартнаяОбработка) Экспорт

	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("ТехнологияСервиса.БазоваяФункциональность") Тогда
		МодульТехнологияСервисаИнтеграцияСБСПКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ТехнологияСервисаИнтеграцияСБСПКлиент");
		МодульТехнологияСервисаИнтеграцияСБСПКлиент.ПриПодтвержденииЗапросовНаИспользованиеВнешнихРесурсов(ИдентификаторыЗапросов, 
			ФормаВладелец, ОповещениеОЗакрытии, СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
