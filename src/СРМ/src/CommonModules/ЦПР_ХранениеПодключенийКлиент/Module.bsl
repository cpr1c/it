#Область РаботаССистемнымТреем

Процедура ДобавитьСтрокиДереваВТрей(МассивПодключений,Трей,СоответствиеПодключенийТрея,НомерЭлементаМеню,ИдентификаторРодителя=0)
	ДЛя Каждого ТекПодключение ИЗ МассивПодключений Цикл
		
		//	    1. Добавляемый элемент меню является действием.1
		//2. Добавляемый элемент меню является разделителем.
		//3. Добавляемый элемент меню является подменю.
		ТипЭлемента=1;
		Если ТекПодключение.ТипЭлемента="ПОДМЕНЮ" Тогда 
			ТипЭлемента=3;
		ИначеЕсли ТекПодключение.ТипЭлемента="РАЗДЕЛИТЕЛЬ" Тогда
			ТипЭлемента=2;
		КонецЕсли;
		
		ИдентификаторЭлемента=Трей.ДобавитьПунктВМеню(ИдентификаторРодителя,ТекПодключение.Наименование,НомерЭлементаМеню,ТипЭлемента);
		
		Если ТипЭлемента=1 Тогда
			СоответствиеПодключенийТрея.Вставить(Строка(НомерЭлементаМеню),ТекПодключение.Ссылка);
		КонецЕсли;
		
		НомерЭлементаМеню=НомерЭлементаМеню+1;
		
		ДобавитьСтрокиДереваВТрей(ТекПодключение.ПодчиненныеЭлементы,Трей,СоответствиеПодключенийТрея,НомерЭлементаМеню,ИдентификаторЭлемента);
	КонецЦикла;
КонецПроцедуры

Процедура РазместитьПодменюЗапускаПриложенийВСистемномТрее() Экспорт
	
	Трей= ПараметрыПриложения["Трей.Компонента"];

	Если Трей=Неопределено Тогда
		ИмяВК="Addin.TrayIcon";
		
		Попытка
			ПодключитьВнешнююКомпоненту(ИмяВК);
		Исключение
			//Сообщить("Не удалось подключить компоненту "+ИмяВК);
		КонецПопытки;
		
		Попытка
			Трей = Новый(ИмяВК);
		Исключение
			// 28.06.2020 *** ЦПР *** Борисов Проект "Поддержка" Задача №  (начало)
			//Сообщить("Ошибка создания объекта внешней компоненты: "+ ИмяВК+ОписаниеОшибки()+Символы.ПС+"Перейдите в персональные настройки для установки необходимой компоненты");
			// 28.06.2020 *** ЦПР *** Борисов Проект "Поддержка" Задача №  (окончание)
			Трей=Неопределено;
		КонецПопытки;
		
		ПараметрыПриложения.Вставить("Трей.Компонента",Трей);
		
		Если Трей=Неопределено Тогда
			Возврат;
		КонецЕсли;
	Иначе
		Трей.УдалитьИконку();
	КонецЕсли;
	
	СоответствиеПодключенийТрея=Новый Соответствие;
	
	ДеревоПодключений=ЦПР_ПодключенияСервер.ПолучитьМассивСтруктурПодключений();
	
	//Добавялем развертывание окна в трее
	ДобавитьВДеревоПодключенийКНопкиУправленияОкномБазыПодключений(ДеревоПодключений);
	
	Трей.СоздатьИконку("База подключений ЦПР");
	ДобавитьСтрокиДереваВТрей(ДеревоПодключений,Трей,СоответствиеПодключенийТрея,1);
	
	ПараметрыПриложения.Вставить("Трей.СоответствиеПодключений",СоответствиеПодключенийТрея);
	
КонецПроцедуры


Процедура ОбработатьСобытиеТрея(Данные) 
	СсылкаПодлючения=ПараметрыПриложения["Трей.СоответствиеПодключений"][Данные];	
	
	Если СсылкаПодлючения="ПОКАЗАТЬОКНОПРИЛОЖЕНИЯ" Тогда
		
	ИначеЕсли СсылкаПодлючения="ЗАВЕРШИТЬРАБОТУ" Тогда
		ЗавершитьРаботуСистемы();
	Иначе
		Попытка
			ЦПР_ПодключенияКлиент.ВыполнитьПодключение(СсылкаПодлючения.Подключение,СсылкаПодлючения.Логин,СсылкаПодлючения.Пароль);
		Исключение
			Предупреждение(ОписаниеОшибки());
		КонецПопытки;
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьВДеревоПодключенийКНопкиУправленияОкномБазыПодключений(ДеревоПодключений) Экспорт
	ОПисаниеКнопки=ЦПР_ПодключенияСервер.ОписаниеСтруктурыПодключений();
	ОПисаниеКнопки.Наименование="";		
	ОПисаниеКнопки.ТипЭлемента="РАЗДЕЛИТЕЛЬ";
	//ОПисаниеКнопки.Ссылка=ВыборкаПартнер.Партнер;
	
	ДеревоПодключений.Добавить(ОПисаниеКнопки);
	//
	//ОПисаниеКнопки=ЦПР_ПодключенияСервер.ОписаниеСтруктурыПодключений();
	//ОПисаниеКнопки.Наименование="Показать окно приложения";		
	//ОПисаниеКнопки.ТипЭлемента="ДЕЙСТВИЕ";
	//ОПисаниеКнопки.Ссылка="ПОКАЗАТЬОКНОПРИЛОЖЕНИЯ";
	//
	//ДеревоПодключений.Добавить(ОПисаниеКнопки);
	
	ОПисаниеКнопки=ЦПР_ПодключенияСервер.ОписаниеСтруктурыПодключений();
	ОПисаниеКнопки.Наименование="Завершить работу";		
	ОПисаниеКнопки.ТипЭлемента="ДЕЙСТВИЕ";
	ОПисаниеКнопки.Ссылка="ЗАВЕРШИТЬРАБОТУ";
	
	ДеревоПодключений.Добавить(ОПисаниеКнопки);
КонецПроцедуры

#КонецОбласти

#Область СохранениеКлиентовВоВременныеКаталоги

Функция ПолучитьИмяВременногоФайлаСохраненияКлиентаTigthtVNC() Экспорт 
	Если ОбщегоНазначенияКлиентСервер.ЭтоWindowsКлиент() Тогда
		ИмяФайла="TigthtVNC.exe";
	Иначе
		ИмяФайла="TigthtVNC.jar";
	КонецЕсли;
	
	ИмяВременногоФайла=ОбщегоНазначенияКлиентСервер.ПолучитьПолноеИмяФайла(КаталогВременныхФайлов(),ИмяФайла);
	
	Возврат ИмяВременногоФайла;
КонецФункции

Процедура СохранитьКлиентTigthtVNCВоВременыйКаталогПользователя()
	Если ОбщегоНазначенияКлиентСервер.ЭтоWindowsКлиент() Тогда
		ИмяМакета="TigthtVNCx64";
	Иначе
		ИмяМакета="TightVNCJava";
	КонецЕсли;
	
	ИмяВременногоФайла=ПолучитьИмяВременногоФайлаСохраненияКлиентаTigthtVNC();
	
	Файл=Новый Файл(ИмяВременногоФайла);
	Если Не Файл.Существует() Тогда
		ДанныеМакета=ЦПР_ПодключенияСервер.ПолучитьДанныеОбщегоМакета(ИмяМакета);
		ДанныеМакета.Записать(ИмяВременногоФайла);
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьИмяВременногоФайлаСохраненияКлиентаPutty() Экспорт 
	ИмяФайла="Putty.exe";
	
	ИмяВременногоФайла=ОбщегоНазначенияКлиентСервер.ПолучитьПолноеИмяФайла(КаталогВременныхФайлов(),ИмяФайла);
	
	Возврат ИмяВременногоФайла;
КонецФункции

Процедура СохранитьКлиентPuttyВоВременыйКаталогПользователя()
	
	СистемнаяИнформация=Новый СистемнаяИнформация;
	
	Если СистемнаяИнформация.ТипПлатформы=ТипПлатформы.Windows_x86 Тогда
		ИмяМакета="Putty_x32";
	Иначе
		ИмяМакета="Putty_x64";
	КонецЕсли;
	
	ИмяВременногоФайла=ПолучитьИмяВременногоФайлаСохраненияКлиентаPutty();
	
	Файл=Новый Файл(ИмяВременногоФайла);
	Если Не Файл.Существует() Тогда
		ДанныеМакета=ЦПР_ПодключенияСервер.ПолучитьДанныеОбщегоМакета(ИмяМакета);
		ДанныеМакета.Записать(ИмяВременногоФайла);
	КонецЕсли;
КонецПроцедуры

Процедура СохранитьКлиентыПодключенийВПрограммВоВременныйКаталогПользователя()
	СохранитьКлиентTigthtVNCВоВременыйКаталогПользователя();	
	СохранитьКлиентPuttyВоВременыйКаталогПользователя();
КонецПроцедуры



#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриНачалеРаботыСистемы() Экспорт 
	Если ОбщегоНазначенияКлиентСервер.ЭтоWindowsКлиент() Тогда
		РазместитьПодменюЗапускаПриложенийВСистемномТрее();
	КонецЕсли;
	
	СохранитьКлиентыПодключенийВПрограммВоВременныйКаталогПользователя();
КонецПроцедуры

Процедура ОбработкаВнешнегоСобытия(Источник, Событие, Данные) Экспорт
	Если СтрНачинаетсяС(Источник,"TRAYICON") Тогда 
		ОбработатьСобытиеТрея(Данные);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти