Функция ПолучитьПутьКИсполняемомуФайлаАммиАдмина() Экспорт
	Путь = ХранилищеОбщихНастроек.Загрузить("НастройкиПутейФайлов", "ПутьКПрограммеАммиАдмин");
	Если Не ЗначениеЗаполнено(Путь) Тогда
		Путь= "";
	КонецЕсли;
	
	Возврат Путь;
КонецФункции

Функция ПолучитьПутьКИсполняемомуФайлаТимВьювера() Экспорт
	Путь = ХранилищеОбщихНастроек.Загрузить("НастройкиПутейФайлов", "ПутьКПрограммеTeamViewer");
	Если Не ЗначениеЗаполнено(Путь) Тогда
		Путь= "C:\Program Files (x86)\TeamViewer\teamviewer.exe";
	КонецЕсли;
	
	Возврат Путь;
КонецФункции

Функция ПолучитьПутьКИсполняемомуФайлаАниДеска() Экспорт
	Путь = ХранилищеОбщихНастроек.Загрузить("НастройкиПутейФайлов", "ПутьКПрограммеAnyDesk");
	Если Не ЗначениеЗаполнено(Путь) Тогда
		Путь= "C:\Program Files (x86)\AnyDesk\AnyDesk.exe";
	КонецЕсли;
	
	Возврат Путь;
КонецФункции

Функция ПолучитьПутьКИсполняемомуФайлаTightVNCViewer() Экспорт
	Если ОбщегоНазначенияКлиентСервер.ЭтоWindowsКлиент() Тогда
		
		Путь = ХранилищеОбщихНастроек.Загрузить("НастройкиПутейФайлов", "ПутьКПрограммеTightVNCViewer");
		Если Не ЗначениеЗаполнено(Путь) Тогда
			Путь= "C:\Program Files\TightVNC\tvnviewer.exe";
		КонецЕсли;
	Иначе 
		Путь="";
	КонецЕсли;
	
	
	Возврат Путь;
КонецФункции

Функция ПолучитьПутьКИсполняемомуФайлаUltraVNCViewer() Экспорт
	Если ОбщегоНазначенияКлиентСервер.ЭтоWindowsКлиент() Тогда
		Путь = ХранилищеОбщихНастроек.Загрузить("НастройкиПутейФайлов", "ПутьКПрограммеUltraVNCViewer");
		Если Не ЗначениеЗаполнено(Путь) Тогда
			Путь= "C:\Program Files\uvnc bvba\UltraVNC\vncviewer.exe";
		КонецЕсли;
	Иначе 
		Путь="";
	КонецЕсли;
	
	Возврат Путь;
КонецФункции

Функция ПолучитьСтруктуруНастройкиПодключения(Подключение,Логин,Пароль) Экспорт 
	СтруктураНастройки=новый Структура;
	СтруктураНастройки.Вставить("Подключение",Подключение);
	СтруктураНастройки.Вставить("НаименованиеВладельца",Подключение.Владелец.Наименование);
	СтруктураНастройки.Вставить("Наименование",Подключение.Наименование);
	СтруктураНастройки.Вставить("Партнер",Подключение.Владелец.Партнер);
	СтруктураНастройки.Вставить("ПартнерНаименование",Подключение.Владелец.Партнер.Наименование);
	СтруктураНастройки.Вставить("Тип",Подключение.ВидПодключения.ТипПодключения);
	СтруктураНастройки.Вставить("Вид",Подключение.ВидПодключения);
	Если Подключение.ВидПодключения.ТипПодключения=Перечисления.ЦПР_ТипыПодключений.RDP Тогда
		СтруктураНастройки.Вставить("ТипСтрокой","RDP");
	ИначеЕсли Подключение.ВидПодключения.ТипПодключения=Перечисления.ЦПР_ТипыПодключений.AmmyAdmin Тогда
		СтруктураНастройки.Вставить("ТипСтрокой","AmmyAdmin");
		СтруктураНастройки.Вставить("ИмяФайлаПрограммы",ПолучитьПутьКИсполняемомуФайлаАммиАдмина());
	ИначеЕсли Подключение.ВидПодключения.ТипПодключения=Перечисления.ЦПР_ТипыПодключений.Email Тогда
		СтруктураНастройки.Вставить("ТипСтрокой","Email");
	ИначеЕсли Подключение.ВидПодключения.ТипПодключения=Перечисления.ЦПР_ТипыПодключений.HTTP Тогда
		СтруктураНастройки.Вставить("ТипСтрокой","HTTP");
	ИначеЕсли Подключение.ВидПодключения.ТипПодключения=Перечисления.ЦПР_ТипыПодключений.TeamViewer Тогда
		СтруктураНастройки.Вставить("ТипСтрокой","TeamViewer");
		СтруктураНастройки.Вставить("ИмяФайлаПрограммы",ПолучитьПутьКИсполняемомуФайлаТимВьювера());
	ИначеЕсли Подключение.ВидПодключения.ТипПодключения=Перечисления.ЦПР_ТипыПодключений.AnyDesk Тогда
		СтруктураНастройки.Вставить("ТипСтрокой","AnyDesk");
		СтруктураНастройки.Вставить("ИмяФайлаПрограммы",ПолучитьПутьКИсполняемомуФайлаАниДеска());
	ИначеЕсли Подключение.ВидПодключения.ТипПодключения=Перечисления.ЦПР_ТипыПодключений.VNC Тогда
		СтруктураНастройки.Вставить("ТипСтрокой","VNC");
		СтруктураНастройки.Вставить("ИмяФайлаПрограммы",ПолучитьПутьКИсполняемомуФайлаTightVNCViewer());
	ИначеЕсли Подключение.ВидПодключения.ТипПодключения=Перечисления.ЦПР_ТипыПодключений.UltraVNC Тогда
		СтруктураНастройки.Вставить("ТипСтрокой","UltraVNC");
		СтруктураНастройки.Вставить("ИмяФайлаПрограммы",ПолучитьПутьКИсполняемомуФайлаUltraVNCViewer());
	ИначеЕсли Подключение.ВидПодключения.ТипПодключения=Перечисления.ЦПР_ТипыПодключений.VPN Тогда
		СтруктураНастройки.Вставить("ТипСтрокой","VPN");
	ИначеЕсли Подключение.ВидПодключения.ТипПодключения=Перечисления.ЦПР_ТипыПодключений.SSH Тогда	
		СтруктураНастройки.Вставить("ТипСтрокой","SSH");
	КонецЕсли;
	СтруктураНастройки.Вставить("Логин",Логин);
	СтруктураНастройки.Вставить("Пароль",Пароль);
	СтруктураНастройки.Вставить("Адрес",Подключение.Адрес);
	СтруктураНастройки.Вставить("Порт",Подключение.Порт);
	//СтруктураНастройки.Вставить("Адрес",Подключение.Адрес);
	
	Возврат СтруктураНастройки;
	
КонецФункции

Функция ОписаниеСтруктурыПодключений() Экспорт 
	СтруктураПодключений=Новый Структура;
	СтруктураПодключений.Вставить("Наименование");
	СтруктураПодключений.Вставить("ТипЭлемента");
	СтруктураПодключений.Вставить("Ссылка");
	СтруктураПодключений.Вставить("ПодчиненныеЭлементы",Новый Массив);
	
	Возврат СтруктураПодключений;
КонецФункции

Функция ПолучитьМассивСтруктурПодключений() Экспорт
	Запрос=Новый Запрос;
	Запрос.Текст=
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЦПР_Подключения.Ссылка КАК Подключение,
	|	ЦПР_Подключения.Владелец КАК ТочкаПодключения,
	|	ЦПР_Подключения.ВидПодключения.ТипПодключения КАК ТипПодключения,
	|	ЦПР_Подключения.ВидПодключения КАК ВидПодключения,
	|	ЦПР_Подключения.Владелец.Партнер КАК Партнер,
	|	ЦПР_УчетныеДанныеПодключений.Логин КАК Логин,
	|	ЦПР_УчетныеДанныеПодключений.Пароль КАК Пароль,
	|	ЦПР_УчетныеДанныеПодключений.Пользователь КАК Пользователь,
	|	ЦПР_Подключения.Владелец.Партнер.Наименование КАК ПартнерНаименование,
	|	ЦПР_Подключения.Владелец.Наименование КАК ТочкаПодключенияНаименование,
	|	ЦПР_Подключения.Наименование КАК ПодключениеНаименование,
	|	ЦПР_Подключения.ВидПодключения.БезЛогина КАК ВидПодключенияБезЛогина
	|ИЗ
	|	Справочник.ЦПР_Подключения КАК ЦПР_Подключения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦПР_УчетныеДанныеПодключений КАК ЦПР_УчетныеДанныеПодключений
	|		ПО ЦПР_Подключения.Ссылка = ЦПР_УчетныеДанныеПодключений.ТочкаПодключения
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПартнерНаименование,
	|	ТочкаПодключенияНаименование,
	|	ПодключениеНаименование
	|ИТОГИ ПО
	|	Партнер,
	|	ТочкаПодключения,
	|	Подключение";
	
	ДеревоПодключений=Новый Массив;
	
	ВыборкаПартнер=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПартнер.Следующий() Цикл
		
		СтрокаПартнер=ОписаниеСтруктурыПодключений();
		СтрокаПартнер.Наименование=Строка(ВыборкаПартнер.Партнер);		
		СтрокаПартнер.ТипЭлемента="ПОДМЕНЮ";
		СтрокаПартнер.Ссылка=ВыборкаПартнер.Партнер;
		
		ВыборкаТочка=ВыборкаПартнер.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаТочка.Следующий() Цикл
			СтрокаТочка=ОписаниеСтруктурыПодключений();
			СтрокаТочка.Наименование=Строка(ВыборкаТочка.ТочкаПодключения);		
			СтрокаТочка.ТипЭлемента="ПОДМЕНЮ";
			СтрокаТочка.Ссылка=ВыборкаТочка.ТочкаПодключения;
			
			ВыборкаПодключение=ВыборкаТочка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПодключение.Следующий() Цикл
				
				Если Не ВыборкаПодключение.ВидПодключенияБезЛогина Тогда
					
					СтрокаПодключение=ОписаниеСтруктурыПодключений();
					СтрокаПодключение.Наименование=Строка(ВыборкаПодключение.Подключение);		
					СтрокаПодключение.ТипЭлемента="ПОДМЕНЮ";
					СтрокаПодключение.Ссылка=ВыборкаПодключение.Подключение;
					СтрокаПодключение.Вставить("ТипПодключения",ВыборкаПодключение.ТипПодключения);
					СтрокаПодключение.Вставить("ВидПодключения",ВыборкаПодключение.ВидПодключения);
					
					СтрокаТочка.ПодчиненныеЭлементы.Добавить(СтрокаПодключение);

				Иначе
					СтрокаПодключение=СтрокаТочка;
				КонецЕсли;
				
				ВыборкаДетали=ВыборкаПодключение.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаДетали.Следующий() Цикл
					
					СтрокаЛогин=ОписаниеСтруктурыПодключений();
					Если ВыборкаПодключение.ВидПодключенияБезЛогина Тогда
						СтрокаЛогин.Наименование=Строка(ВыборкаПодключение.Подключение);		
					Иначе
						Если ЗначениеЗаполнено(ВыборкаДетали.Пользователь) Тогда
							СтрокаЛогин.Наименование=Строка(ВыборкаДетали.Пользователь);
						Иначе
							СтрокаЛогин.Наименование=Строка(ВыборкаДетали.Логин);		
						КонецЕсли;
					КонецЕсли;
					СтрокаЛогин.ТипЭлемента="ДЕЙСТВИЕ";
					
					СтруктураДействия=Новый Структура;
					СтруктураДействия.Вставить("Подключение",ВыборкаДетали.Подключение);
					СтруктураДействия.Вставить("Логин",ВыборкаДетали.Логин);
					СтруктураДействия.Вставить("Пароль",ВыборкаДетали.Пароль);
					
					СтрокаЛогин.Ссылка=СтруктураДействия;
					
					СтрокаПодключение.ПодчиненныеЭлементы.Добавить(СтрокаЛогин);
				КонецЦикла;
				
			КонецЦикла;
			
			СтрокаПартнер.ПодчиненныеЭлементы.Добавить(СтрокаТочка);
		КонецЦикла;
		
		ДеревоПодключений.Добавить(СтрокаПартнер);
	КонецЦикла;
	
	
	Возврат ДеревоПодключений;
КонецФункции

Функция ПолучитьДвоичныеДанныеКомпонентыРаботыСТреем() Экспорт
	Возврат ПолучитьДанныеОбщегоМакета("КомпонентаНЕТЛЕНКА_2");
КонецФункции

Функция ПолучитьДанныеОбщегоМакета(ИмяМакета) Экспорт 
	Возврат ПолучитьОбщийМакет(ИмяМакета);	
КонецФункции

Функция ПолучитьВариантНачальногоОтображенияСписка() Экспорт
	Возврат ХранилищеОбщихНастроек.Загрузить("ОбщиеНастройки", "ВариантНачальногоОтображенияТочекПодключения");
КонецФункции

Функция ПодключатьсяПоSshВLinuxЧерезPutty() Экспорт
	Значение= ХранилищеОбщихНастроек.Загрузить("ОбщиеНастройки", "ПодключатьсяПоSSHЧерезPuttyВLinux");
	Если ТипЗнч(Значение)<>Тип("Булево") Тогда
		Значение=Ложь;
	КонецЕсли;
	
	Возврат Значение;
КонецФункции

Функция ПолучитьДвоичныеДанныеФайлаПодключениеКУдаленнымРабочимСтолам(СтруктураПараметровПодключения) Экспорт
	ТекстСохранения=Новый ТекстовыйДокумент;
	
	//Значение	Расшифровка
	//1	Запуск в "оконном" режиме.
	//2	Запуск в полноэкранном режиме.
	ТекстСохранения.ДобавитьСтроку("screen mode id:i:2");
	
	//0 - запрет поддержки нескольких мониторов, 1 - разрешение поддержки нескольких мониторов. Может использоваться в Windows 7 /Windows Server 2008 и более поздних версиях.
	ТекстСохранения.ДобавитьСтроку("use multimon:i:0");
	
	ИнфаОбЭкранах=ПолучитьИнформациюЭкрановКлиента();
	
	Ширина=0;
	Высота=0;
	Для Каждого ТекМонитор Из ИнфаОбЭкранах Цикл
		Если Ширина<ТекМонитор.Ширина Тогда
			Ширина=ТекМонитор.Ширина;
			Высота=ТекМонитор.Высота;
		КонецЕсли;
	КонецЦикла;

	//ширина рабочего стола. Выбирается на вкладке ”Экран” окна ”Параметры” средства ”Подключение к удаленному рабочему столу”
	ТекстСохранения.ДобавитьСтроку("desktopwidth:i:"+Формат(Ширина,"ЧГ=0"));
	
	//высота рабочего стола. Выбирается на вкладке ”Экран” окна ”Параметры” средства ”Подключение к удаленному рабочему столу”.
	ТекстСохранения.ДобавитьСтроку("desktopwidth:i:"+Формат(Высота,"ЧГ=0"));
	
	//глубина цвета. Выбирается в группе ”Цвета” на вкладке ”Экран” окна ”Параметры” средства ”Подключение к удаленному рабочему столу”. Ставим true
	ТекстСохранения.ДобавитьСтроку("session bpp:i:32");

	//позиция и размеры окна в формате WINDOWPOS
	//	winposstr:s:0,ShowCmd,Left,Top,Right,Bottom. 
	
	//Значение первого поля всегда равно нулю. Следующее поле, ShowCmd, может принимать одно из двух значений: 
	
	//Значение	Расшифровка
	//1	Окно отображается с использованием координат, заданных значениями полей Left, Top, Right, Bottom.
	//3	Окно разворачивается на весь экран.
	
	//Поля Left, Top, Right, Bottom содержат координаты окна "Удаленного рабочего стола" на локальном "Рабочем столе" в неразвернутом состоянии. 
	
	//С настройкой winposstr тесно связан параметр "screen mode id". Он может принимать одно из двух значений: 
	ТекстСохранения.ДобавитьСтроку("winposstr:s:0,1,0,50,800,650");
	
	//0 - не использовать сжатие данных, 1 - использовать. 
	ТекстСохранения.ДобавитьСтроку("compression:i:1");

	//Определяет, как интерпретируются сочетания клавиш Windows. 
	//Значение этого параметра соответствует настройке в поле ”Клавиатура” на вкладке ”Локальные ресурсы” окна ”Параметры средства ”Подключение к удаленному рабочему столу”.
	//0 - на локальном компьютере. 1 - на удаленном компьютере. 2 - только в полноэкранном режиме.
	ТекстСохранения.ДобавитьСтроку("keyboardhook:i:2");
	
	//Определяет, где воспроизводится звук. 
	//Значение этого параметра соответствует настройкам ”Удаленный звук” на вкладке ”Локальные ресурсы” окна ”Параметры” средства ”Подключение к удаленному рабочему столу”. 
	//0 - на клиентском компьютере. 1 - на удаленном компьютере. 2 - звук не воспроизводится.
	ТекстСохранения.ДобавитьСтроку("audiocapturemode:i:0");
	
	//0 - не использовать RDP efficient multimedia streaming при воспроизведении видео. 1 - использовать.	
	ТекстСохранения.ДобавитьСтроку("videoplaybackmode:i:0");

	//тип соединения для достижения максимального быстродействия. 
	//Соответствует настройкам ”Быстродействие” на вкладке ”Дополнительно” окна ”Параметры” средства ”Подключение к удаленному рабочему столу” 
	//Определяется типом выбранной скорости соединения. 
	ТекстСохранения.ДобавитьСтроку("connection type:i:2");
	
	//Отображение панели подключений при входе в систему удаленного компьютера в полноэкранном режиме. 
	//Значение этого параметра соответствует состоянию флажка ”Отображать панель подключений при работе на полном экране” на вкладке ”Экран” окна 
	//”Параметры” средства ”Подключение к удаленному рабочему столу”. 
	//0 - не отображать панель подключений. 1 - отображать панель подключений.
	ТекстСохранения.ДобавитьСтроку("displayconnectionbar:i:1");

	//запрет отображения фонового рисунка удаленного рабочего стола. 
	//Соответствует настройкам в группе ”Быстродействие”- флажок ”Фоновый рисунок рабочего стола” на вкладке ”Дополнительно” окна 
	//”Параметры” средства ”Подключение к удаленному рабочему столу”. 
	//0 - отображать фоновый рисунок. 1 - не отображать фоновый рисунок.
	ТекстСохранения.ДобавитьСтроку("disable wallpaper:i:1");

	//разрешение сглаживания шрифтов. Соответствует настройкам в группе ”Быстродействие”- флажок ”Сглаживание шрифтов” на вкладке ”Дополнительно” окна 
	//”Параметры” средства ”Подключение к удаленному рабочему столу”.
	//0 - не использовать сглаживание. 1 - использовать.
	ТекстСохранения.ДобавитьСтроку("allow font smoothing:i:0");
	
	//Соответствует настройкам в группе ”Быстродействие”- флажок ”Сглаживание шрифтов” на вкладке ”Дополнительно” окна 
	//”Параметры” средства ”Подключение к удаленному рабочему столу”. 
	//0 - не использовать сглаживание. 1 - использовать
	ТекстСохранения.ДобавитьСтроку("allow desktop composition:i:0");
	
	//Отображение содержимого папки при перетаскивании. Значение этого параметра соответствует состоянию флажка 
	//”Отображать содержимое окна при перетаскивании” на вкладке ”Дополнительно” окна 
	//”Параметры” средства ”Подключение к удаленному рабочему столу”. 
	//0 - отображать содержимое при перетаскивании. 1 - не отображать.
	ТекстСохранения.ДобавитьСтроку("disable full window drag:i:0");

	//запрет визуальных эффектов. Значение этого параметра соответствует состоянию флажка ”Визуальные эффекты при отображении меню 
	//и окон” на вкладке ”Дополнительно” окна ”Параметры”. 
	//0 - использовать визуальные эффекты, 1 - не использовать.
	ТекстСохранения.ДобавитьСтроку("disable menu anims:i:1");
	
	//запрет использования тем. 0 - использовать темы. 1 - не использовать темы.
	ТекстСохранения.ДобавитьСтроку("disable themes:i:0");

	//запрет настроек курсора. 0 - настройка курсора разрешена. 1 - запрещена
	ТекстСохранения.ДобавитьСтроку("disable cursor setting:i:0");

	//Кэширование точечных рисунков на локальном компьютере. 
	//Значение этого параметра соответствует состоянию флажка ”Постоянное кэширование точечных рисунков” на вкладке ”Дополнительно” окна ”Параметры”. 
	//0 - не использовать кэширование. 1 - использовать кэширование.
	ТекстСохранения.ДобавитьСтроку("bitmapcachepersistenable:i:1");

	
	Адрес=	СтруктураПараметровПодключения.Адрес;
	Если ЗначениеЗаполнено(СтруктураПараметровПодключения.Порт) Тогда
		Адрес=Адрес+":"+Формат(СтруктураПараметровПодключения.Порт,"ЧГ=0");
	КонецЕсли;
	
	//имя или IP-адрес удаленного компьютера, к которому выполняется подключение по RDP. 
	//При необходимости, можно указать номер используемого TCP порта
	ТекстСохранения.ДобавитьСтроку("full address:s:"+Адрес);

	//определяет, где воспроизводится звук. 
	//Значение этого параметра соответствует записи в поле ”Удаленный звук” на вкладке ”Локальные ресурсы” окна ”Параметры”. 
	//0 - на клиентском компьютере. 1 На удаленном компьютере. 2 - звук отключен.
	ТекстСохранения.ДобавитьСтроку("audiomode:i:0");

	//использование принтеров во время удаленного сеанса. 
	//Значение этого параметра соответствует состоянию флажка ”Принтеры” на вкладке ”Локальные ресурсы” окна ”Параметры”.
	//0 - не использовать локальные принтеры во время удаленного сеанса. 1 - использовать автоматическое подключение принтеров.
	ТекстСохранения.ДобавитьСтроку("redirectprinters:i:1");

	//использование последовательных портов локального компьютера при подключении к удаленному рабочему столу. 
	//0 - не использовать. 1 - использовать.	
	ТекстСохранения.ДобавитьСтроку("redirectcomports:i:1");

	//использование смарт-карт локального компьютера при подключении к удаленному рабочему столу. 
	//0 - не использовать. 1 - использовать.
	ТекстСохранения.ДобавитьСтроку("redirectsmartcards:i:1");

	//использовать общий буфер обмена для локального и удаленного компьютера.
	//	Значение этого параметра соответствует состоянию флажка ”Буфер обмена” на вкладке ”Локальные ресурсы” окна ”Параметры”. 
	//	0 - не использовать общий буфер обмена. 1 - использовать.
	ТекстСохранения.ДобавитьСтроку("redirectclipboard:i:1");

	//перенаправления устройств, которые используют Microsoft Point of Service (POS). 
	//0 - не использовать перенаправление. 1 - использовать.
	ТекстСохранения.ДобавитьСтроку("redirectposdevices:i:1");

	//перенаправление DirectX. 0 - не использовать перенаправление DirectX. 1 - использовать.
	ТекстСохранения.ДобавитьСтроку("redirectdirectx:i:1");

	//автоматическое подключение при разрыве соединения с удаленным компьютером. 
	//Значение этого параметра соответствует состоянию флажка ”Восстановить соединение при разрыве” на вкладке ”Дополнительно” окна ”Параметры”. 
	//0 - не использовать автоматическое восстановление соединения. 1 - использовать.
	ТекстСохранения.ДобавитьСтроку("autoreconnection enabled:i:1");

	//уровень проверки подлинности для удаленного подключения. 
	//Определяет действия в случае, когда не удается подтвердить подлинность удаленного компьютера. 
	//Определяется настройкой группы ”Проверка подлинности сервера” на вкладке ”Подключение”. 
	//В Windows 10 – вкладке ”Подключение” соответствует вкладка ”Взаимодействие”. 
	//0 - если не удалось подтвердить подлинность терминального сервера, то подключаться без предупреждения. 
	//1 - не подключаться. 2 - подключаться с предупреждением.
	ТекстСохранения.ДобавитьСтроку("authentication level:i:2");

	//запрос пользователю на подтверждение учетных данных в случае, если они были сохранены ранее.
	//0 - не запрашивать учетные данные, если они были предварительно сохранены. 1 - всегда запрашивать учетные данные.
	ТекстСохранения.ДобавитьСтроку("prompt for credentials:i:0");

	//уровень шифрования сессии RDP. 
	//0 - сессия с шифрованием TLS 1.0 (SSL) будет использоваться в случае поддержки клиентом. 
	//Если клиент его не поддерживает, будет использоваться стандартное встроенное шифрование RDP. 
	//1 - удаленная сессия будет использовать шифрование x.224
	ТекстСохранения.ДобавитьСтроку("negotiate security layer:i:1");

	//режим работы с удаленным приложением. 
	//0 - режим работы с удаленным рабочим столом. 1 - режим работы с удаленным приложением.
	ТекстСохранения.ДобавитьСтроку("remoteapplicationmode:i:0");

	//имя альтернативной оболочки пользователя.
	ТекстСохранения.ДобавитьСтроку("alternate shell:s:");

	//рабочий каталог оболочки пользователя
	ТекстСохранения.ДобавитьСтроку("shell working directory:s:");

	//имя сервера шлюза удаленных рабочих столов.
	//Значения параметров сервера шлюза определяется группой ”Подключение из любого места” на вкладке ”Подключение” 
	//(для Windows 10 – на вкладке ”Дополнительно”).
	ТекстСохранения.ДобавитьСтроку("gatewayhostname:s:");

	//метод использования сервера шлюза удаленных рабочих столов. 
	//0 - никогда не использовать сервер шлюза удаленных рабочих столов. 
	//1 - всегда использовать сервер шлюза удаленных рабочих столов. 
	//2 - не использовать сервер шлюза удаленных рабочих столов для локальных клиентов. 
	//3 - использовать настройки по умолчанию сервера шлюза удаленных рабочих столов. 
	//4 - не использовать сервер шлюза удаленных рабочих столов, 
	//но в настройке ”Подключение из любого места” – ”Параметры” включен флажок ”Не использовать сервер шлюза удаленных рабочих столов для локальных адресов”
	ТекстСохранения.ДобавитьСтроку("gatewayusagemethod:i:4");
	
	//используемый метод авторизации пользователя. 
	//0 - использовать NTLM (запрос пароля) . 
	//Соответствует выбору параметра ”Метод входа” – ”Запрашивать пароль (NTLM)” в настройках ”Подключение из любого места” – ”Параметры”. 
	//1 - использовать смарт-карты. Параметры, определяющие использование сервера шлюза удаленных рабочих столов 
	//и параметры входа и параметры подключения взаимосвязаны, и изменение одного из них, может вызвать изменение другого.
	ТекстСохранения.ДобавитьСтроку("gatewaycredentialssource:i:4");
	
	//хз
	ТекстСохранения.ДобавитьСтроку("gatewayprofileusagemethod:i:0");

	//хз
	ТекстСохранения.ДобавитьСтроку("promptcredentialonce:i:1");

	//хз	
	ТекстСохранения.ДобавитьСтроку("use redirection server name:i:0");
	
	//перенаправление дисковых устройств локального компьютера. Значение определяется настройками на вкладке ”Локальные ресурсы” – ”Подробнее” 
	ТекстСохранения.ДобавитьСтроку("drivestoredirect:s:*");

	//хз
	ТекстСохранения.ДобавитьСтроку("networkautodetect:i:1");

	//хз
	ТекстСохранения.ДобавитьСтроку("bandwidthautodetect:i:1");
	
	//хз
	ТекстСохранения.ДобавитьСтроку("enableworkspacereconnect:i:0");

	//хз
	ТекстСохранения.ДобавитьСтроку("rdgiskdcproxy:i:0");

	//хз
	ТекстСохранения.ДобавитьСтроку("kdcproxyname:s:");

	//хз
	ТекстСохранения.ДобавитьСтроку("gatewaybrokeringtype:i:0");

	//Имя пользователя
	ТекстСохранения.ДобавитьСтроку("username:s:"+СтруктураПараметровПодключения.Логин);

	
	ИмяВременногоФайла=ПолучитьИмяВременногоФайла("rdp");
	
	УстановитьПривилегированныйРежим(Истина);
	ТекстСохранения.Записать(ИмяВременногоФайла,КодировкаТекста.UTF8);
	
	ДвоичныеДанные=Новый ДвоичныеДанные(ИмяВременногоФайла);
	
	Попытка
		УдалитьФайлы(ИмяВременногоФайла);
	Исключение
	КонецПопытки;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат ДвоичныеДанные;
КонецФункции

Процедура УстановитьАрхивностьТочкиПодключения(ТочкаПодключения,Архивность) Экспорт
	ТочкаОбъект=ТочкаПодключения.ПолучитьОбъект();
	ТочкаОбъект.Архив=Архивность;
	
	ТочкаОбъект.ОбменДанными.Загрузка=Истина;
	ТочкаОбъект.Записать();
КонецПроцедуры