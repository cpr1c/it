Процедура ЗарегистрироватьОповещениеКОтправке(НастройкаОповещения,ВидСобытия,ИнициаторСобытия,ДанныеСобытия) Экспорт 
	НовоеОповещение=РегистрыСведений.ОповещенияПоЗадачамКОтправке.СоздатьМенеджерЗаписи();
	НовоеОповещение.ВидСобытия=ВидСобытия;
	НовоеОповещение.Идентификатор=Новый УникальныйИдентификатор;
	НовоеОповещение.НастройкаОповещения=НастройкаОповещения;
	НовоеОповещение.ИнициаторСобытия=ИнициаторСобытия;
	НовоеОповещение.ДанныеСобытия=Новый ХранилищеЗначения(ДанныеСобытия,Новый СжатиеДанных(9));
	НовоеОповещение.Записать(Истина);
КонецПроцедуры

Функция ДействующиеНастройкиОповещения() Экспорт
	Запрос=Новый Запрос;
	Запрос.Текст=
	"ВЫБРАТЬ
	|	НастройкиОповещенийПоЗадачам.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.НастройкиОповещенийПоЗадачам КАК НастройкиОповещенийПоЗадачам
	|ГДЕ
	|	НастройкиОповещенийПоЗадачам.Использование";
	
	МассивНастроек=Новый Массив;
	
	Выборка=Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		МассивНастроек.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	Возврат МассивНастроек;
КонецФункции

Процедура ДобавитьОповещениеПоВидуСобытия(ВидСобытия,Событие,ДанныеСобытия) Экспорт
	НастройкиОповещения=ДействующиеНастройкиОповещения();
	
	Для каждого Настройка Из НастройкиОповещения Цикл
		ЗарегистрироватьОповещениеКОтправке(Настройка,ВидСобытия,Событие,ДанныеСобытия);
	КонецЦикла;
КонецПроцедуры

Процедура ПриЗаписиКомментарияКЗадачеРегистрацияОповещений(КомментарийКЗадаче,ДанныеСобытия) Экспорт
	ДобавитьОповещениеПоВидуСобытия("ДобавленКомменатрий",КомментарийКЗадаче,ДанныеСобытия);
	
	ПараметрыПроцедуры=Новый Структура;
	ПараметрыПроцедуры.Вставить("Инициатор",КомментарийКЗадаче);
	
	
	ПараметрыВыполнения=ДлительныеОперации.ПараметрыВыполненияВФоне(Неопределено);
	ПараметрыВыполнения.ЗапуститьВФоне=Истина;
	ПараметрыВыполнения.НаименованиеФоновогоЗадания="Отправка оповещений";

	
	ДлительныеОперации.ВыполнитьВФоне("ОповещенияПоЗадачамСервер.ОтправитьОповещенияПоИнициатору",ПараметрыПроцедуры,ПараметрыВыполнения);
КонецПроцедуры

Процедура ОтправитьОповещенияПоИнициатору(ПараметрыПроцедуры,АдресРезультата) Экспорт
	Запрос=Новый Запрос;
	Запрос.Текст=
	"ВЫБРАТЬ
	|	ОповещенияПоЗадачамКОтправке.Идентификатор КАК Идентификатор,
	|	ОповещенияПоЗадачамКОтправке.НастройкаОповещения КАК НастройкаОповещения,
	|	ОповещенияПоЗадачамКОтправке.ВидСобытия КАК ВидСобытия,
	|	ОповещенияПоЗадачамКОтправке.ИнициаторСобытия КАК ИнициаторСобытия,
	|	ОповещенияПоЗадачамКОтправке.ДанныеСобытия КАК ДанныеСобытия
	|ИЗ
	|	РегистрСведений.ОповещенияПоЗадачамКОтправке КАК ОповещенияПоЗадачамКОтправке
	|ГДЕ
	|	ОповещенияПоЗадачамКОтправке.ИнициаторСобытия = &ИнициаторСобытия";
	
	Запрос.УстановитьПараметр("ИнициаторСобытия",ПараметрыПроцедуры.Инициатор);
	
	Выборка=Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Сообщить(Выборка.Идентификатор);
		
		
		
	КонецЦикла;
КонецПроцедуры

#Область ФормированиеОповещений

Процедура ПередЗаписьюОбъектаФормированиеДанныйДляОповещений(Источник,Отказ)
	Источник.ДополнительныеСвойства.Вставить("ЭтоНовый",Источник.ЭтоНовый());
КонецПроцедуры

#КонецОбласти

#Область ПодпискиНаСобытия

Процедура ПередЗаписьюДокументаФормированиеДанныхДляОповещенийПередЗаписью(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	ПередЗаписьюОбъектаФормированиеДанныйДляОповещений(Источник,Отказ);	
КонецПроцедуры

Процедура ПриЗаписиОбъектаФормированиеОпововещенийКОтправкеПриЗаписи(Источник, Отказ) Экспорт
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура ПередЗаписьюСправочникаФормированиеДанныхДляОповещенийПередЗаписью(Источник, Отказ) Экспорт
	ПередЗаписьюОбъектаФормированиеДанныйДляОповещений(Источник,Отказ);	
КонецПроцедуры

#КонецОбласти