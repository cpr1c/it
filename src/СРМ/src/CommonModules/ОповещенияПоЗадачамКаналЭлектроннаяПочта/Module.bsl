Процедура ВыполнитьОтправкуСообщения(Сообщение, УчетнаяЗаписьОповещений, ОписаниеОшибки, НастройкиОтправкиОповещения) Экспорт

	УчетнаяЗаписьЭлектроннойПочты=УчетнаяЗаписьОповещений.Настройка;
	Если Сообщение.Получатель.Количество() = 0 Тогда
		ОписаниеОшибки  = НСтр(
			"ru = 'Сообщение не может быть отправлено сразу, т.к необходимо ввести адрес электронной почты.'");
		Возврат;
	КонецЕсли;

	ПараметрыПисьма = Новый Структура;
	ПараметрыПисьма.Вставить("Тема", Сообщение.Тема);
	ПараметрыПисьма.Вставить("Тело", Сообщение.Текст);
	ПараметрыПисьма.Вставить("Вложения", Новый Соответствие);
	ПараметрыПисьма.Вставить("Кодировка", "utf-8");

	Для Каждого Вложение Из Сообщение.Вложения Цикл
		НовоеВложение = Новый Структура("ДвоичныеДанные, Идентификатор");
		НовоеВложение.ДвоичныеДанные = ПолучитьИзВременногоХранилища(Вложение.АдресВоВременномХранилище);
		НовоеВложение.Идентификатор = Вложение.Идентификатор;
		ПараметрыПисьма.Вложения.Вставить(Вложение.Представление, НовоеВложение);
	КонецЦикла;

	МодульРаботаСПочтовымиСообщениямиСлужебный = ОбщегоНазначения.ОбщийМодуль(
			"РаботаСПочтовымиСообщениямиСлужебный");
	Если Сообщение.ДополнительныеПараметры.ФорматПисьма = Перечисления.СпособыРедактированияЭлектронныхПисем.HTML Тогда
		ТипТекста = МодульРаботаСПочтовымиСообщениямиСлужебный.ТипТекстовЭлектронныхПисем("HTMLСКартинками");
	Иначе
		ТипТекста = МодульРаботаСПочтовымиСообщениямиСлужебный.ТипТекстовЭлектронныхПисем("ПростойТекст");
	КонецЕсли;

	ПараметрыПисьма.Вставить("ТипТекста", ТипТекста);
	ПараметрыПисьма.Вставить("Кому", СформироватьСписокПолучателейСообщения(Сообщение.Получатель, "Кому:"));
	ПараметрыПисьма.Вставить("Копии", СформироватьСписокПолучателейСообщения(Сообщение.Получатель, "Копия:"));
	ПараметрыПисьма.Вставить("СкрытыеКопии", СформироватьСписокПолучателейСообщения(Сообщение.Получатель,
		"Скрытая копия:"));

	Если НастройкиОтправкиОповещения.УстанавливатьОтправителемУведомленияАвтораСобытия Тогда
		ПараметрыПисьма.Вставить("ИмяОтправителя", Строка(НастройкиОтправкиОповещения.Автор));
	КонецЕсли;

	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаСПочтовымиСообщениями") Тогда
		МодульРаботаСПочтовымиСообщениями = ОбщегоНазначения.ОбщийМодуль("РаботаСПочтовымиСообщениями");
		МодульРаботаСПочтовымиСообщениями.ОтправитьПочтовоеСообщение(УчетнаяЗаписьЭлектроннойПочты, ПараметрыПисьма);
	КонецЕсли;
КонецПроцедуры

Функция АдресПолучателя(Получатель) Экспорт
	Возврат УправлениеЗадачами.АдресЭлектроннойПочтыОбъекта(Получатель);
КонецФункции

Функция ТекстИзмененийДляСообщения(Изменения) Экспорт
	ТекстИзменений="";

	Если Изменения.Количество() > 0 Тогда
		ТекстИзменений="<hr>" + Символы.ПС + "<ul>" + Символы.ПС;
		Для Каждого ТекИзменение Из Изменения Цикл
			ТекстИзменений=ТекстИзменений + "<li>Параметр <strong>" + ТекИзменение.Значение.Синоним + "</strong> изменился с <i>"
				+ ТекИзменение.Значение.ПредыдущееЗначение + "</i> на <i>" + ТекИзменение.Значение.Значение
				+ "</i></li>" + Символы.ПС;
		КонецЦикла;

		ТекстИзменений=ТекстИзменений + "</ul>";

	КонецЕсли;
	Возврат ТекстИзменений;
КонецФункции

Функция ТекстКомментарияПреобразованный(Инициатор, КомментарийИзБазы, Сообщение) Экспорт
	Если Сообщение.ДополнительныеПараметры.ФорматКомментария = Перечисления.ВариантыОформленияТекста.Markdown Тогда
		Комментарий= Сообщение.ДополнительныеПараметры.КомментарийHTML;
	Иначе
		Комментарий=КомментарийИзБазы;
	КонецЕсли;

	ВсеПрисоединенныеФайлы = Новый Массив;
	РаботаСФайлами.ЗаполнитьПрисоединенныеФайлыКОбъекту(Сообщение.ДополнительныеПараметры.Задача, ВсеПрисоединенныеФайлы);

	Для Каждого ПрисоединенныйФайл Из ВсеПрисоединенныеФайлы Цикл
		Если ПрисоединенныйФайл.Предмет <> Инициатор Тогда
			Продолжить;
		КонецЕсли;
		СтрокаПоиска="src=""cid:" + Строка(ПрисоединенныйФайл) + """";
		Если СтрНайти(Комментарий, СтрокаПоиска) > 0 Тогда
			ИдентификаторВложения=Строка(Новый УникальныйИдентификатор);
			Комментарий=СтрЗаменить(Комментарий, СтрокаПоиска, "src=""cid:" + ИдентификаторВложения + """");

			ДанныеФайла = РаботаСФайлами.ДанныеФайла(ПрисоединенныйФайл);
			
			Сообщение.Вложения.Вставить(ИдентификаторВложения, ДанныеФайла.СсылкаНаДвоичныеДанныеФайла);
		КонецЕсли;

	КонецЦикла;
	
	Комментарий=
	"<!DOCTYPE html PUBLIC ""-//W3C//DTD HTML 4.0 Transitional//EN"">
	|	<html>
	|		<head>
	|			<meta http-equiv=""Content-Type"" content=""text/html; charset=utf-8""></meta>
	|			<meta http-equiv=""X-UA-Compatible"" content=""IE=Edge""></meta>
	|			<meta name=""format-detection"" content=""telephone=no""></meta>
	|			<style type=""text/css"">
	|				body{margin:0;padding:8px;}
	|				p{line-height:1.15;margin:0;white-space:pre-wrap;}
	|				ol,ul{margin-top:0;margin-bottom:0;}
	|				img{border:none;}
	|				li>p{display:inline;}
	|			</style>
	|		</head>
	|	<body>
	|	"+Комментарий+"
	|	</body>
	|</html>";
	
	Возврат Комментарий;
КонецФункции

Функция СформироватьСписокПолучателейСообщения(СписокПолучателей, ВариантОтправки = "Кому:")

	СпискаПолучателейСКонтактом = (ТипЗнч(СписокПолучателей) = Тип("Массив"));

	Кому = Новый Массив;
	Для Каждого Получатель Из СписокПолучателей Цикл
		Если Получатель.ВариантОтправки <> ВариантОтправки Тогда
			Продолжить;
		КонецЕсли;
		ПолучательСообщения = Новый Структура;
		ПолучательСообщения.Вставить("Представление", Получатель.Представление);

		Если СпискаПолучателейСКонтактом Тогда
			ПолучательСообщения.Вставить("Адрес", Получатель.Адрес);
			ПолучательСообщения.Вставить("Контакт", Получатель.ИсточникКонтактнойИнформации);
		Иначе
			ПолучательСообщения.Вставить("Адрес", Получатель.Значение);
		КонецЕсли;

		Кому.Добавить(ПолучательСообщения);
	КонецЦикла;

	Возврат Кому;

КонецФункции