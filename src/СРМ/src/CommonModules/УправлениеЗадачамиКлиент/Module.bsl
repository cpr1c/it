Процедура ПриНачалеРаботыСистемы() Экспорт
	
	ГлобальныйПоискКлиент.ПриНачалеРаботыСистемы();
	
	ОткрыватьФормуРаботыСЗадачамиПриЗапуске = ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить(
		"ОбщиеНастройкиПользователя", 
		"ОткрыватьФормуРаботыСЗадачамиПриЗапуске");

	Если ОткрыватьФормуРаботыСЗадачамиПриЗапуске = Истина Тогда
		ОткрытьФорму("Обработка.АРМСпециалистаПоддержки.Форма.Форма");
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьТрудозатратыПоЗадаче(Задача) Экспорт
	
	Отбор=Новый Структура;
	Отбор.Вставить("Предмет",Задача);
	
	ПараметрыФормы=Новый Структура;
	ПараметрыФормы.Вставить("Отбор",Отбор);
	
	ОткрытьФорму("Документ.Трудозатраты.ФормаСписка",ПараметрыФормы,,Задача);
	
КонецПроцедуры

Процедура РедактироватьКопииПолучателейСобытияЗадачи(Событие,ОписаниеОповещения=Неопределено) Экспорт
	Если ОписаниеОповещения=Неопределено Тогда
		ДополнительныеПараметры=Новый Структура;
		ДополнительныеПараметры.Вставить("Событие",Событие);
		
		ОписаниеОповещения=Новый ОписаниеОповещения("РедактироватьКопииПолучателейСобытияЗадачиОкончание",ЭтотОбъект,ДополнительныеПараметры);
	КонецЕсли;
	
	МассивПолучателей=Новый Массив;
	
	Для каждого Стр Из Событие.ПолучателиКопий Цикл
		ПолучательКопии=Новый Структура("Адрес,Представление,Контакт");
		ЗаполнитьЗначенияСвойств(ПолучательКопии,Стр);
		
		МассивПолучателей.Добавить(ПолучательКопии);
	КонецЦикла;
	
	ПараметрыФормы=Новый Структура;
	ПараметрыФормы.Вставить("Получатели",МассивПолучателей);
	
	ОткрытьФорму("ОбщаяФорма.РедакторПолучателейПочты",ПараметрыФормы,,,,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);	
КонецПроцедуры

Процедура РедактироватьКопииПолучателейСобытияЗадачиОкончание(Результат,ДополнительныеПараметры) Экспорт
	Если Результат=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	
	Событие=ДополнительныеПараметры.Событие;
	
	Событие.ПолучателиКопий.Очистить();
	
	Для Каждого Стр Из Результат ЦИкл
		НС=Событие.ПолучателиКопий.Добавить();
		ЗаполнитьЗначенияСвойств(НС,Стр);
	КонецЦикла;
	
	Оповестить("ИзменилисьДопАдресаДляЭлектроннойПочты",Событие.Ссылка);
	
КонецПроцедуры

Процедура ПолеЧасовРегулирование(Форма, ПутьКДанным, Направление, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	ТекущееЗначение = Вычислить("Форма."+ПутьКДанным);
	Квант = 0.25;
	
	// приводим текущее значение к точности 0.25
	// добавляем (отнимаем) 0.25
	// должно получиться не меньше 0.25
	НовоеЗначение = Макс(Окр(ТекущееЗначение / Квант, 0) * Квант + Квант * Направление, Квант);
	
	Выполнить("Форма."+ПутьКДанным+ " = " + Формат(НовоеЗначение, "ЧРД=.; ЧН=0; ЧГ=0"));
	
	Форма.Модифицированность = Истина;
	
КонецПроцедуры

Процедура ПолеОценкаИсполнителяРегулирование(Форма, ПутьКДанным, Направление, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	Ряд = УправлениеЗадачамиКлиентСервер.РядФибоначчи();
	
	ТекущееЗначение = Вычислить("Форма."+ПутьКДанным);
	
	ТекущееЗначение = УправлениеЗадачамиКлиентСервер.ОценкаПоРядуФибоначчи(ТекущееЗначение);
	
	ИндексТекущегоЗначения = Ряд.Найти(ТекущееЗначение);
	
	Если ИндексТекущегоЗначения = Неопределено Тогда
		ИндексТекущегоЗначения = 0;
	КонецЕсли;
	
	ИндексНовогоЗначения = Макс(0, ИндексТекущегоЗначения + Направление);
	ИндексНовогоЗначения = Мин(ИндексНовогоЗначения, 99);
	
	НовоеЗначение = Ряд[ИндексНовогоЗначения];
	
	Выполнить("Форма."+ПутьКДанным+ " = " + Формат(НовоеЗначение, "ЧРД=.; ЧН=0; ЧГ=0"));
	
	Форма.Модифицированность = Истина;
	
КонецПроцедуры

Процедура ОткрытьПрисоединенныйФайлПоСсылке(СсылкаНаПрисоединенныйФайл,УникальныйИдентификатор) Экспорт
	ДанныеФайла = РаботаСФайламиСлужебныйВызовСервера.ДанныеФайлаДляОткрытия(СсылкаНаПрисоединенныйФайл, Неопределено, УникальныйИдентификатор);
	Если ДанныеФайла.Зашифрован Тогда
		// Файл может быть изменен в другом сеансе.
		ОповеститьОбИзменении(СсылкаНаПрисоединенныйФайл);
		Возврат;
	КонецЕсли;
	
	РаботаСФайламиКлиент.ОткрытьФайл(ДанныеФайла,Ложь);

КонецПроцедуры

Процедура ОбновитьИсториюЗадачи(Задача,ЭлементФормыИстории,Форма,ДанныеПрисоединенныхФайлов) Экспорт 
	МассивИстории=УправлениеЗадачами.ПолучитьМассивИсторииЗадачи(Задача,Форма.УникальныйИдентификатор,ДанныеПрисоединенныхФайлов);
	
	ДокументИстории=ЭлементФормыИстории.Документ.defaultView;
	
	МассивПередачи=Новый Массив;
	ДокументИстории.appTo1C.setBaseURL(ПолучитьНавигационнуюСсылкуИнформационнойБазы()+"/ru");
	
	АдресКартинки=ПоместитьВоВременноеХранилище(БиблиотекаКартинок.Обсуждения.ПолучитьДвоичныеДанные(),Форма.УникальныйИдентификатор);
	
	Для Каждого ТекЗаписьИстории ИЗ МассивИстории Цикл
		СтруктураЗаписи=Новый Структура;
		СтруктураЗаписи.Вставить("id", Строка(ТекЗаписьИстории.Ссылка.УникальныйИдентификатор()));
		СтруктураЗаписи.Вставить("date", Формат(ТекЗаписьИстории.ДатаСоздания,"ДФ='dd.MM.yyyy ЧЧ:мм'"));
		СтруктураЗаписи.Вставить("title", ТекЗаписьИстории.Заголовок);
		СтруктураЗаписи.Вставить("text", ТекЗаписьИстории.ТекстСообщения);
		СтруктураЗаписи.Вставить("type", "HTML");
		СтруктураЗаписи.Вставить("authorName", Строка(ТекЗаписьИстории.Автор));
		СтруктураЗаписи.Вставить("authorAvatar", АдресКартинки);
		СтруктураЗаписи.Вставить("attachments", Новый Массив);
		
		Для Каждого ТекВложение Из ТекЗаписьИстории.МассивВложений Цикл
			СтруктураВложения=Новый Структура;
			СтруктураВложения.Вставить("id", Строка(ТекВложение.Ссылка.УникальныйИдентификатор()));
			СтруктураВложения.Вставить("filename",ТекВложение.ИмяФайла);
			СтруктураВложения.Вставить("href",ПолучитьНавигационнуюСсылку(ТекВложение.Ссылка));
			СтруктураЗаписи.attachments.Добавить(СтруктураВложения);
		КонецЦикла;
		
		МассивПередачи.Добавить(СтруктураЗаписи);
	КонецЦикла;
	
	ДокументИстории.appTo1C.history.update(ОбщегоНазначенияКлиентСервер.ЗаписатьДанныеJSON(МассивПередачи));
КонецПроцедуры
