////////////////////////////////////////////////////////////////////////////////
// Обучение
//  
////////////////////////////////////////////////////////////////////////////////
#Область ПрограммныйИнтерфейс

Функция ПланОбученияПоЗадаче(Задача) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Задача) Тогда
		Возврат Документы.ПланОбучения.ПустаяСсылка();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПланОбученияПлан.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПланОбучения.План КАК ПланОбученияПлан
	|ГДЕ
	|	ПланОбученияПлан.Задача = &Задача";
	Запрос.УстановитьПараметр("Задача", Задача);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат Документы.ПланОбучения.ПустаяСсылка();
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.Ссылка;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ЗаполнитьСправочникУроковПоПланамОбучения() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПланОбученияПлан.Ссылка.Курс КАК Курс,
	|	ПланОбученияПлан.УдалитьТема КАК НаименованиеУрока
	|ИЗ
	|	Документ.ПланОбучения.План КАК ПланОбученияПлан
	|ГДЕ
	|	НЕ ПланОбученияПлан.Ссылка.ПометкаУдаления
	|	И ПланОбученияПлан.Задача = ЗНАЧЕНИЕ(Документ.Задача.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Курс,
	|	НаименованиеУрока
	|ИТОГИ ПО
	|	Курс";
	
	ВыборкаКурс = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	НачатьТранзакцию();
	
	Пока ВыборкаКурс.Следующий() Цикл
		
		НаименованиеКурса = ВыборкаКурс.Курс;
		
		Группа = ГруппаУроковПоКурсу(НаименованиеКурса);
		Если Не ЗначениеЗаполнено(Группа) Тогда
			ГруппаОбъект = Справочники.Уроки.СоздатьГруппу();
			ГруппаОбъект.Наименование = НаименованиеКурса;
			ГруппаОбъект.Записать();
			Группа = ГруппаОбъект.Ссылка;
		КонецЕсли;
		
		ВыборкаУрок = ВыборкаКурс.Выбрать();
		
		Пока ВыборкаУрок.Следующий() Цикл
			
			Если Справочники.Уроки.НайтиПоНаименованию(ВыборкаУрок.НаименованиеУрока, Истина, Группа).Пустая() Тогда
				
				Урок = Справочники.Уроки.СоздатьЭлемент();
				Урок.Наименование = ВыборкаУрок.НаименованиеУрока;
				Урок.Родитель = Группа;
				Урок.Записать();
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

Процедура ЗаполнитьУрокиВПланахОбучения() Экспорт
	
	НачатьТранзакцию();
	
	ВыборкаДокумент = Документы.ПланОбучения.Выбрать();
	
	Пока ВыборкаДокумент.Следующий() Цикл
		
		ДокОбъект = ВыборкаДокумент.ПолучитьОбъект();
		
		ЗаписыватьДокумент = Ложь;
		
		Группа = ГруппаУроковПоКурсу(ДокОбъект.Курс.Наименование);
		
		Для Каждого Стр Из ДокОбъект.План Цикл
			
			Если ЗначениеЗаполнено(Стр.Урок) Тогда
				Продолжить;
			КонецЕсли;
			
			Урок = Справочники.Уроки.НайтиПоНаименованию(Стр.УдалитьТема, Истина, Группа);
			
			Если Не ЗначениеЗаполнено(Урок) Тогда
				Продолжить;
			КонецЕсли;
			
			Стр.Урок = Урок;
			ЗаписыватьДокумент = Истина;
			
		КонецЦикла;
		
		Если ЗаписыватьДокумент Тогда
			ДокОбъект.Записать();
		КонецЕсли;
		
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ГруппаУроковПоКурсу(НаименованиеКурса)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Уроки.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Уроки КАК Уроки
	|ГДЕ
	|	Уроки.Наименование = &НаименованиеКурса
	|	И Уроки.ЭтоГруппа";
	Запрос.УстановитьПараметр("НаименованиеКурса", НаименованиеКурса);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Справочники.Уроки.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции


#КонецОбласти
