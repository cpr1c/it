////////////////////////////////////////////////////////////////////////////////
// УчетВремениКлиентСервер
//  
////////////////////////////////////////////////////////////////////////////////
#Область ПрограммныйИнтерфейс

Функция РазностьДатВЧасах(ДатаНачала, ДатаОкончания) Экспорт

	ЧасВСекундах = 3600;
	Продолжительность = Окр((ДатаОкончания - ДатаНачала) / ЧасВСекундах, 2);

	Возврат Продолжительность;

КонецФункции

Функция ДобавитьЧас(Дата, КоличествоЧасов) Экспорт

	ЧасВСекундах = 3600;
	Возврат Дата + КоличествоЧасов * ЧасВСекундах;

КонецФункции

Функция ДобавитьДень(Дата, КоличествоДней) Экспорт

	ДеньВСекундах = 86400;
	Возврат Дата + КоличествоДней * ДеньВСекундах;

КонецФункции

Процедура УстановитьВидимостьКомандУчетаВремени(Форма, ДанныеТаймера, Ид) Экспорт
	Префикс=ПрефиксЭлементовФормы();

	Элементы = Форма.Элементы;

	ОтображатьСтарт = ТаймерОстановлен(ДанныеТаймера);
	ОтображатьСтоп = ТаймерАктивен(ДанныеТаймера);

	Элементы[Префикс + "Старт_" + Ид].Видимость = ОтображатьСтарт;
	Элементы[Префикс + "Стоп_" + Ид].Видимость = ОтображатьСтоп;
	Элементы[Префикс + "Отмена_" + Ид].Видимость = Истина;

КонецПроцедуры

Функция ТаймерОстановлен(ДанныеТаймера) Экспорт
	Возврат Не ЗначениеЗаполнено(ДанныеТаймера.ДатаНачала) Или ЗначениеЗаполнено(
		ДанныеТаймера.ДатаОкончания);
КонецФункции

Функция ТаймерАктивен(ДанныеТаймера) Экспорт
	Возврат ЗначениеЗаполнено(ДанныеТаймера.ДатаНачала) И Не ЗначениеЗаполнено(ДанныеТаймера.ДатаОкончания);
КонецФункции

Процедура ОбновитьОтображениеВремениТаймера(Форма, ДанныеТаймера, Ид, ТекДата) Экспорт
	Префикс=ПрефиксЭлементовФормы();
	Элементы = Форма.Элементы;

	ПродолжительностьТекущегоЗамера = 0;

	Если ЗначениеЗаполнено(ДанныеТаймера.ДатаНачала) И Не ЗначениеЗаполнено(ДанныеТаймера.ДатаОкончания) Тогда
		ПродолжительностьТекущегоЗамера = УчетВремениКлиентСервер.РазностьДатВЧасах(ДанныеТаймера.ДатаНачала, ТекДата);
	КонецЕсли;

	ПродолжительностьТаймераВсего = ДанныеТаймера.Часов + ПродолжительностьТекущегоЗамера;

	НадписьДатаНачала = Элементы.Найти(Префикс + "НадписьДатаНачала_" + Ид);
	НадписьДатаОкончания = Элементы.Найти(Префикс + "НадписьДатаОкончания_" + Ид);
	НадписьПродолжительность = Элементы.Найти(Префикс + "НадписьПродолжительность_" + Ид);

	НадписьДатаНачала.Заголовок = СтрШаблон("Начало: %1", ПредставлениеДаты(ДанныеТаймера.ДатаНачала));
	НадписьДатаОкончания.Заголовок = СтрШаблон("Окончание: %1", ПредставлениеДаты(ДанныеТаймера.ДатаОкончания));
	НадписьПродолжительность.Заголовок = СтрШаблон("Продолжительность: %1 ч. (Всего: %2 ч.)", Формат(
		ПродолжительностьТекущегоЗамера, "ЧДЦ=2"), Формат(ПродолжительностьТаймераВсего, "ЧДЦ=2"));

КонецПроцедуры

Функция ПредставлениеДаты(Дата) Экспорт

	Если Не ЗначениеЗаполнено(Дата) Тогда
		Возврат "-";
	ИначеЕсли НачалоДня(Дата) = НачалоДня(ТекущаяДата()) Тогда
		Возврат Формат(Дата, "ДФ=HH:mm");
	Иначе
		Возврат Формат(Дата, "ДФ='dd.MM HH:mm'");
	КонецЕсли;

КонецФункции

Функция ИдентификаторТаймераПоИмениГруппыТаймера(ИмяГруппы) Экспорт
	МассивИмени=СтрРазделить(ИмяГруппы, "_");
	
	МассивИмени.Удалить(0);//префикс
	МассивИмени.Удалить(0); //имя группы
	
	Возврат СтрСоединить(МассивИмени, "-");
КонецФункции
#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ПрефиксЭлементовФормы() Экспорт
	Возврат "УчетВремени_";
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
#КонецОбласти