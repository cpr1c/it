////////////////////////////////////////////////////////////////////////////////
// Подсистема "Присоединенные файлы".
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область УстаревшиеПроцедурыИФункции

// Устарела.
// Следует использовать РаботаСФайлами.ДвоичныеДанныеФайла.
// Возвращает двоичные данные присоединенного файла.
//
// Параметры:
//  ПрисоединенныйФайл - СправочникСсылка - ссылка на справочник с именем "*ПрисоединенныеФайлы".
//
// Возвращаемое значение:
//  ДвоичныеДанные - двоичные данные присоединенного файла.
//
Функция ПолучитьДвоичныеДанныеФайла(Знач ПрисоединенныйФайл) Экспорт
	
	Возврат РаботаСФайлами.ДвоичныеДанныеФайла(ПрисоединенныйФайл);
	
КонецФункции

// Устарела.
// Следует использовать РаботаСФайлами.ДанныеФайла.
// Возвращает структуру данных файла. Используется в различных командах работы с файлами,
// и как значение параметра ДанныеФайла других процедур и функций.
//
// Параметры:
//  ПрисоединенныйФайл - СправочникСсылка - ссылка на справочник с именем "*ПрисоединенныеФайлы".
//
//  ИдентификаторФормы - УникальныйИдентификатор - идентификатор формы, который
//                       используется при получении двоичных данных файла.
//
//  ПолучатьСсылкуНаДвоичныеДанные - Булево - если передать Ложь, то ссылка на двоичные данные
//                 не будет получена, что существенно ускорит выполнение для больших двоичных данных.
//
//  ДляРедактирования - Булево - если указать Истина, то свободный файл будет захвачен для редактирования.
//
// Возвращаемое значение:
//  Структура - со свойствами:
//    * СсылкаНаДвоичныеДанныеФайла        - Строка - адрес во временном хранилище.
//    * ОтносительныйПуть                  - Строка - относительный путь файла.
//    * ДатаМодификацииУниверсальная       - Дата   - дата изменения фала.
//    * ИмяФайла                           - Строка - имя файла без точки.
//    * Наименование                       - Строка - наименование файла в справочнике хранения файлов.
//    * Расширение                         - Строка - расширение файла без точки.
//    * Размер                             - Число  - размер файла.
//    * Редактирует                        - СправочникСсылка.Пользователи, СправочникСсылка.ВнешниеПользователи,
//                                           СправочникСсылка.УчетныеЗаписиСинхронизацииФайлов, Неопределено.
//    * ПодписанЭП                         - Булево - Истина, если файл подписан.
//    * Зашифрован                         - Булево - Истина, если файл зашифрован.
//    * ФайлРедактируется                  - Булево - Истина, если файл занят для редактирования.
//    * ФайлРедактируетТекущийПользователь - Булево - Истина, если файл занят для редактирования текущим пользователем.
//
Функция ПолучитьДанныеФайла(Знач ПрисоединенныйФайл,
                            Знач ИдентификаторФормы = Неопределено,
                            Знач ПолучатьСсылкуНаДвоичныеДанные = Истина,
                            Знач ДляРедактирования = Ложь) Экспорт

	Возврат РаботаСФайлами.ДанныеФайла(ПрисоединенныйФайл, 
	                    ИдентификаторФормы,
	                    ПолучатьСсылкуНаДвоичныеДанные,
	                    ДляРедактирования);

КонецФункции

// Устарела.
// Следует использовать РаботаСФайлами.ЗаполнитьПрисоединенныеФайлыКОбъекту.
// Заполняет массив ссылками на файлы объекта.
//
// Параметры:
//  Объект       - Ссылка - ссылка на объект, который может содержать присоединенные файлы.
//  МассивФайлов - Массив - массив в который будут добавлены ссылки на файлы объекта:
//                  * СправочникСсылка - (возвращаемое значение) ссылка на присоединенный файл.
//
Процедура ПолучитьПрикрепленныеФайлыКОбъекту(Знач Объект, Знач МассивФайлов) Экспорт
	
	РаботаСФайлами.ЗаполнитьПрисоединенныеФайлыКОбъекту(Объект, МассивФайлов);
	
КонецПроцедуры

// Устарела.
// Следует использовать РаботаСФайлами.ДобавитьФайл.
// Создает объект в справочнике для хранения файла и заполняет его реквизиты переданными свойствами.
//
// Параметры:
//  ПараметрыФайла - Структура - Параметры с данными файла.
//       * Автор                        - Ссылка - пользователь, создавший файл.
//       * ВладелецФайлов               - Ссылка - объект, к которому добавляется файл.
//       * ИмяБезРасширения             - Строка - имя файла без расширения.
//       * РасширениеБезТочки           - Строка - расширение файла (без точки вначале).
//       * ВремяИзмененияУниверсальное  - Дата   - дата и время изменения файла (UTC+0:00),
//                                            если не указана, тогда используется ТекущаяУниверсальнаяДата.
//  АдресФайлаВоВременномХранилище      - Строка - адрес, указывающий на двоичные данные во временном хранилище.
//  АдресВременногоХранилищаТекста      - Строка - адрес, указывающий на извлеченный текст из файла во временном хранилище.
//  Описание                            - Строка - текстовое описание файла.
//
//  НоваяСсылкаНаФайл                   - Неопределено - создать новую ссылку на файл в стандартном справочнике
//                                        или в нестандартном, но единственном справочнике. Когда у владельца файла несколько
//                                        справочников, требуется обязательно передать ссылку, иначе будет вызвано
//                                        исключение.
//                                        - Ссылка - ссылка на элемент справочника хранения файлов,
//                                        которую следует использовать для добавляемого файла.
//                                        Должна соответствовать одному из типов справочников хранения файлов владельца
//                                        файлов.
// Возвращаемое значение:
//  СправочникСсылка - ссылка на созданный присоединенный файл.
//
Функция ДобавитьПрисоединенныйФайл(ПараметрыФайла,
                     Знач АдресФайлаВоВременномХранилище,
                     Знач АдресВременногоХранилищаТекста = "",
                     Знач Описание = "",
                     Знач НоваяСсылкаНаФайл = Неопределено) Экспорт

	Возврат РаботаСФайлами.ДобавитьФайл(ПараметрыФайла,
		АдресФайлаВоВременномХранилище,
		АдресВременногоХранилищаТекста,
		Описание,
		НоваяСсылкаНаФайл);
	
КонецФункции

// Устарела. Следует использовать функцию ДобавитьПрисоединенныйФайл.
//
// Создает объект в справочнике для хранения файла и заполняет его реквизиты переданными свойствами.
//
// Параметры:
//  ВладелецФайлов                 - Ссылка - объект, к которому добавляется файл.
//  ИмяБезРасширения               - Строка - имя файла без расширения.
//  РасширениеБезТочки             - Строка - расширение файла (без точки вначале).
//  ВремяИзменения                 - Дата   - (не используется) дата и время изменения файла (местное время).
//  ВремяИзмененияУниверсальное    - Дата   - дата и время изменения файла (UTC+0:00),
//                                            если не указана, тогда используется ТекущаяУниверсальнаяДата.
//  АдресФайлаВоВременномХранилище - Строка - адрес, указывающий на двоичные данные во временном хранилище.
//  АдресВременногоХранилищаТекста - Строка - адрес, указывающий на извлеченный текст из файла во временном хранилище.
//  Описание                       - Строка - текстовое описание файла.
//
//  НоваяСсылкаНаФайл              - Неопределено - создать новую ссылку на файл в стандартном справочнике
//                                   или в нестандартном, но единственном справочнике. Когда у владельца файла несколько
//                                   справочников, требуется обязательно передать ссылку, иначе будет вызвано
//                                   исключение.
//                                 - Ссылка - ссылка на элемент справочника хранения файлов,
//                                   которую следует использовать для добавляемого файла.
//                                   Должна соответствовать одному из типов справочников хранения файлов владельца
//                                   файлов.
//
// Возвращаемое значение:
//  СправочникСсылка - ссылка на созданный присоединенный файл.
//
Функция ДобавитьФайл(Знач ВладелецФайлов,
                     Знач ИмяБезРасширения,
                     Знач РасширениеБезТочки = Неопределено,
                     Знач ВремяИзменения = Неопределено,
                     Знач ВремяИзмененияУниверсальное = Неопределено,
                     Знач АдресФайлаВоВременномХранилище,
                     Знач АдресВременногоХранилищаТекста = "",
                     Знач Описание = "",
                     Знач НоваяСсылкаНаФайл = Неопределено) Экспорт
	
	ПараметрыФайла = Новый Структура;
	ПараметрыФайла.Вставить("Автор",                       Неопределено);
	ПараметрыФайла.Вставить("ВладелецФайлов",              ВладелецФайлов);
	ПараметрыФайла.Вставить("ИмяБезРасширения",            ИмяБезРасширения);
	ПараметрыФайла.Вставить("РасширениеБезТочки",          РасширениеБезТочки);
	ПараметрыФайла.Вставить("ВремяИзмененияУниверсальное", ВремяИзмененияУниверсальное);
	
	Возврат РаботаСФайлами.ДобавитьФайл(ПараметрыФайла,
		АдресФайлаВоВременномХранилище,
		АдресВременногоХранилищаТекста,
		Описание,
		НоваяСсылкаНаФайл);
	
КонецФункции

// Устарела.
// Следует использовать РаботаСФайлами.НоваяСсылкаНаФайл.
// Возвращает новую ссылку на файл для указанного владельца,
// которую можно использовать, а затем передать в функцию ДобавитьФайл.
//
// Параметры:
//  ВладелецФайлов - Ссылка - ссылка на объект, к которому добавляется файл.
//
//  ИмяСправочника - Неопределено - вычислить справочник по владельцу (допустимо,
//                   когда справочник только один, иначе будет вызвано исключение).
//
//                 - Строка - имя справочника *ПрисоединенныеФайлы, отличное
//                            от стандартного <ИмяВладельца>ПрисоединенныеФайлы.
//  
// Возвращаемое значение:
//  СправочникСсылка - ссылка на новый еще несозданный присоединенный файл.
//
Функция НоваяСсылкаНаФайл(ВладелецФайлов, ИмяСправочника = Неопределено) Экспорт
	
	Возврат РаботаСФайлами.НоваяСсылкаНаФайл(ВладелецФайлов, ИмяСправочника);
	
КонецФункции

// Устарела.
// Следует использовать РаботаСФайлами.ОбновитьФайл.
// Обновляет свойства файла - двоичные данные, текст, дату изменения,
// а также другие необязательные свойства.
//
// Параметры:
//  ПрисоединенныйФайл - СправочникСсылка - ссылка на справочник с именем "*ПрисоединенныеФайлы".
//  ИнформацияОФайле - Структура - со свойствами:
//     <обязательные>
//     * АдресФайлаВоВременномХранилище - Строка - адрес новых двоичных данных файла.
//     * АдресВременногоХранилищаТекста - Строка - адрес новых двоичных данных текста,
//                                                 извлеченного из файла.
//     <необязательные>
//     * ИмяБезРасширения               - Строка - если свойство не указано или не заполнено,
//                                                 тогда не будет изменено.
//     * ДатаМодификацииУниверсальная   - Дата   - дата последнего изменения файла, если
//                                                 свойство не указано или не заполнено, тогда будет
//                                                 установлена текущая дата сеанса.
//     * Расширение                     - Строка - новое расширение файла.
//     * Редактирует                    - Ссылка - новый пользователь, редактирующий файл.
//
Процедура ОбновитьПрисоединенныйФайл(Знач ПрисоединенныйФайл, Знач ИнформацияОФайле) Экспорт
	
	РаботаСФайлами.ОбновитьФайл(ПрисоединенныйФайл, ИнформацияОФайле);
	
КонецПроцедуры

// Устарела.
// Следует использовать РаботаСФайлами.ИмяФормыОбъектаПрисоединенныхФайловПоВладельцу.
// Возвращает имя формы объекта присоединенных файлов по владельцу.
//
// Параметры:
//  ВладелецФайлов - Ссылка - ссылка на объект, по которому определяется имя формы.
//
// Возвращаемое значение:
//  Строка - имя формы объекта присоединенных файлов по владельцу.
//
Функция ПолучитьИмяФормыОбъектаПрисоединенныхФайловПоВладельцу(Знач ВладелецФайлов) Экспорт
	
	Возврат РаботаСФайлами.ИмяФормыОбъектаФайловПоВладельцу(ВладелецФайлов);
	
КонецФункции

// Устарела.
// Следует использовать РаботаСФайлами.КОбъектуМожноПрисоединятьФайлы.
// Определяет наличие хранилища присоединенных файлов у объекта
// право Добавление в хранилище (справочник присоединенных файлов).
//
// Параметры:
//  ВладелецФайлов - Ссылка - ссылка на объект для которого выполняется проверка.
//  ИмяСправочника - Строка - если требуется проверка добавления в указанное хранилище.
//
// Возвращаемое значение:
//  Булево - если Истина, тогда к объекту может присоединять файлы.
//
Функция КОбъектуМожноПрисоединятьФайлы(ВладелецФайлов, ИмяСправочника = "") Экспорт
	
	Возврат РаботаСФайлами.КОбъектуМожноПрисоединятьФайлы(ВладелецФайлов, ИмяСправочника);
	
КонецФункции

// Устарела. Следует использовать РаботаСФайлами.ИзменитьСправочникХраненияФайлов.
// Конвертирует файлы из подсистемы Работа с файлами в подсистему Присоединенные файлы.
// Требует наличия подсистемы Работа с файлами.
//
// Для использования в процедурах обновления ИБ, если выполняется переход от использования
// одной подсистемы к другой в каком-либо объекте-владельце файлов.
// Выполняется последовательно для каждого элемента объекта-владельца файлов
// (элемента справочника, ПВХ, документа и т.п.).
//
// Параметры:
//   ВладелецФайлов - Ссылка - ссылка на объект для которого выполняется конвертация.
//   ИмяСправочника - Строка - если требуется конвертация в указанное хранилище.
//
Процедура СконвертироватьФайлыВПрисоединенные(Знач ВладелецФайлов, ИмяСправочника = Неопределено) Экспорт
	
	РаботаСФайлами.ИзменитьСправочникХраненияФайлов(ВладелецФайлов, ИмяСправочника);
	
КонецПроцедуры

// Устарела. Следует использовать РаботаСФайлами.СсылкиНаОбъектыСФайлами.
// Возвращает ссылки на объекты с файлами из подсистемы Работа с файлами.
// Требует наличия подсистемы Работа с файлами.
//
// Используется совместно с функцией СконвертироватьФайлыВПрисоединенные.
//
// Параметры:
//  ТаблицаВладельцевФайлов - Строка - полное имя объекта метаданных,
//                            который может владеть присоединенными файлами.
//
// Возвращаемое значение:
//  Массив - со значениями:
//   * Ссылка - ссылка на объект у которого есть хотя бы один присоединенный файл.
//
Функция СсылкиНаОбъектыСФайлами(Знач ТаблицаВладельцевФайлов) Экспорт
	
	Возврат РаботаСФайлами.СсылкиНаОбъектыСФайлами(ТаблицаВладельцевФайлов);
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Процедуры, подключаемые к событиям управляемых форм.

// Устарела. Следует использовать РаботаСФайлами.ПриЗаписиНаСервере.
// Обработчик события ПриЗаписиНаСервере управляемой формы владельца присоединенного файла.
//
// Параметры:
//  Отказ - Булево  - стандартный параметр события ПриЗаписиНаСервере управляемой формы.
//  ТекущийОбъект   - Объект - стандартный параметр события ПриЗаписиНаСервере управляемой формы.
//  ПараметрыЗаписи - Структура - стандартный параметр события ПриЗаписиНаСервере управляемой формы.
//  Параметры       - ДанныеФормыСтруктура - свойство Параметры управляемой формы.
//
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи, Параметры) Экспорт
	
	РаботаСФайлами.ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи, Параметры);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Процедуры, вызываемые из модуля менеджера справочников с присоединенными файлами.


// Устарела. Следует использовать РаботаСФайлами.РеквизитыРедактируемыеВГрупповойОбработке.
// Возвращает реквизиты объекта, которые разрешается редактировать
// с помощью обработки группового изменения реквизитов.
//
// Возвращаемое значение:
//  Массив - список имен реквизитов объекта.
Функция РеквизитыРедактируемыеВГрупповойОбработке() Экспорт
	
	Возврат РаботаСФайлами.РеквизитыРедактируемыеВГрупповойОбработке();
	
КонецФункции


// Устарела. Следует использовать РаботаСФайлами.ДобавитьПодписьКФайлу.
////////////////////////////////////////////////////////////////////////////////
// Операции с электронной подписью.
// Устарела. Следует использовать РаботаСФайлами.ДобавитьПодписьКФайлу.
// Добавляет подпись к файлу.
// Параметры:
//  ПрисоединенныйФайл - Ссылка - ссылка на присоединенный файл.
//
//  СвойстваПодписи    - Структура - содержит данные, которые возвращает процедура Подписать
//                       общего модуля ЭлектроннаяПодписьКлиент в качестве результата.
//                     - Массив - массив описанных выше структур.
//                     
//  ИдентификаторФормы - УникальныйИдентификатор - если указан, то используется при блокировке объекта.
//
Процедура ДобавитьПодписьКФайлу(ПрисоединенныйФайл, СвойстваПодписи, ИдентификаторФормы = Неопределено) Экспорт
	
	РаботаСФайлами.ДобавитьПодписьКФайлу(ПрисоединенныйФайл, СвойстваПодписи, ИдентификаторФормы);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики подписок на события.


// Устарела.
// Следует использовать РаботаСФайлами.ОпределитьФормуПрисоединенногоФайла.
// Обработчик подписки на событие ОбработкаПолученияФормы для переопределения формы присоединенного файла.
//
// Параметры:
//  Источник                 - СправочникМенеджер - менеджер справочника с именем "*ПрисоединенныеФайлы".
//  ВидФормы                 - Строка - имя стандартной формы.
//  Параметры                - Структура - параметры формы.
//  ВыбраннаяФорма           - Строка - имя или объект метаданных открываемой формы.
//  ДополнительнаяИнформация - Структура - дополнительная информация открытия формы.
//  СтандартнаяОбработка     - Булево - признак выполнения стандартной (системной) обработки события.
//
Процедура ПереопределитьПолучаемуюФормуПрисоединенногоФайла(Источник, ВидФормы, Параметры,
			ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка) Экспорт
	
	РаботаСФайлами.ОпределитьФормуПрисоединенногоФайла(Источник, ВидФормы, Параметры,
			ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
КонецПроцедуры

// Устарела.
// Следует использовать РаботаСФайлами.УстановитьПометкуУдаленияФайловПередЗаписью.
// Обработчик подписки на событие ПередЗаписью владельца присоединенного файла.
// Помечает на удаление связанные файлы.
//
// Параметры:
//  Источник - Объект - владелец присоединенного файла, кроме ДокументОбъект.
//  Отказ    - Булево - признак отказа от записи.
// 
Процедура УстановитьПометкуУдаленияПрисоединенныхФайлов(Источник, Отказ) Экспорт
	
	РаботаСФайлами.УстановитьПометкуУдаленияПрисоединенныхФайлов(Источник, Отказ);
	
КонецПроцедуры

// Устарела.
// Следует использовать РаботаСФайлами.УстановитьПометкуУдаленияФайловДокументовПередЗаписью.
// Обработчик подписки на событие ПередЗаписью владельца присоединенного файла.
// Помечает на удаление связанные файлы.
//
// Параметры:
//  Источник        - ДокументОбъект - владелец присоединенного файла.
//  Отказ           - Булево - параметр, передаваемый в подписку на событие ПередЗаписью.
//  РежимЗаписи     - Булево - параметр, передаваемый в подписку на событие ПередЗаписью.
//  РежимПроведения - Булево - параметр, передаваемый в подписку на событие ПередЗаписью.
// 
Процедура УстановитьПометкуУдаленияПрисоединенныхФайловДокументов(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	РаботаСФайлами.УстановитьПометкуУдаленияПрисоединенныхФайловДокументов(Источник, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

