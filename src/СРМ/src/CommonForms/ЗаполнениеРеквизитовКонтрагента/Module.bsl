#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ОбщегоНазначения.ПодсистемаСуществует("ИнтернетПоддержкаПользователей") Тогда
		ТекстИсключения = НСтр("ru='Заполнение реквизитов в данной конфигурации невозможно.'");
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	СтрокаПоиска = Параметры.СтрокаПоиска;
	Если НЕ ПустаяСтрока(Параметры.Заголовок) Тогда
		Заголовок = Параметры.Заголовок;
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.АдресныйКлассификатор") Тогда

		МодульАдресныйКлассификатор = ОбщегоНазначения.ОбщийМодуль("АдресныйКлассификатор");
		ТаблицаРегионов = МодульАдресныйКлассификатор.СубъектыРФ();
		Элементы.Регион.СписокВыбора.Очистить();
		Для каждого СтрокаТаблицы Из ТаблицаРегионов Цикл
			Элементы.Регион.СписокВыбора.Добавить(
				Формат(СтрокаТаблицы.КодСубъектаРФ, "ЧЦ=2; ЧДЦ=; ЧВН="), 
				СтрокаТаблицы.Наименование + " " + СтрокаТаблицы.Сокращение);
		КонецЦикла;
		Элементы.Регион.СписокВыбора.СортироватьПоПредставлению();

	КонецЕсли;
	
	Элементы.Регион.СписокВыбора.Вставить(0, "", НСтр("ru='Все регионы'"));
	Регион = "";
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЗначениеЗаполнено(СтрокаПоиска) Тогда
		ПодключитьОбработчикОжидания("ВыполнитьПоискКонтрагентов", 0.1, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Регион = Настройки["Регион"];
	Если Элементы.Регион.СписокВыбора.НайтиПоЗначению(Регион) = Неопределено Тогда
		Регион = "";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СтрокаПоискаПриИзменении(Элемент)
	
	Если ЭтоИНН(СтрокаПоиска) Тогда
		Адрес = "";
		ВыполнитьПоискКонтрагентов();
	КонецЕсли;
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура РегионПриИзменении(Элемент)
	
	Если Элементы.Регион.СписокВыбора.НайтиПоЗначению(Регион) = Неопределено Тогда
		Регион = "";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыКонтрагенты

&НаКлиенте
Процедура КонтрагентыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВыполнитьВыборКонтрагента();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НайтиКонтрагентов(Команда)
	
	ВыполнитьПоискКонтрагентов();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьКонтрагента(Команда)
	
	ВыполнитьВыборКонтрагента();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Функция ЭтоИНН(СтрокаПоиска)
	
	Результат = ЗначениеЗаполнено(СтрокаПоиска)
		И (СтрДлина(СтрокаПоиска) = 10 ИЛИ СтрДлина(СтрокаПоиска) = 12)
		И СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаПоиска);
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ВыполнитьПоискКонтрагентов() Экспорт

	ОписаниеОшибки = "";
	НайтиРеквизитыНаСервере(ОписаниеОшибки);
	
	// Обработка ошибок
	Если ЗначениеЗаполнено(ОписаниеОшибки) Тогда
		Если ОписаниеОшибки = "НеУказаныПараметрыАутентификации" Тогда
			ТекстВопроса = НСтр("ru='Для автоматического заполнения реквизитов контрагентов
				|необходимо подключиться к интернет-поддержке пользователей.
				|Подключиться сейчас?'");
			ОписаниеОповещения = Новый ОписаниеОповещения("ПодключитьИнтернетПоддержку", ЭтотОбъект);
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		ИначеЕсли ОписаниеОшибки = "НеУказанПароль" Тогда
			ТекстВопроса = НСтр("ru='Необходимо указать пароль к Интернет-поддержке пользователей
				|и установить флажок ""Запомнить пароль"".
				|Указать сейчас?'");
			ОписаниеОповещения = Новый ОписаниеОповещения("ПодключитьИнтернетПоддержку", ЭтотОбъект);
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		ИначеЕсли ОписаниеОшибки = "Сервис1СКонтрагентНеПодключен" Тогда
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("ИдентификаторМестаВызова", "zapolnenie_rekvizitov");
			ОткрытьФорму("ОбщаяФорма.Сервис1СКонтрагентНеПодключен", ПараметрыФормы, ЭтотОбъект);
		Иначе
			ПоказатьПредупреждение(, ОписаниеОшибки);
		КонецЕсли;
	ИначеЕсли КоличествоНайденных > 20 Тогда
		ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Найдено слишком много похожих контрагентов (%1). Уточните реквизиты для поиска.'"),
			КоличествоНайденных);
		ПоказатьПредупреждение(, ТекстПредупреждения);
	ИначеЕсли НЕ ПустаяСтрока(СтрокаПоиска) И КоличествоНайденных = 0 Тогда
		ПоказатьПредупреждение(, НСтр("ru='Ничего не найдено. Уточните реквизиты для поиска.'"));
	КонецЕсли;

КонецПроцедуры 

&НаКлиенте
Процедура ВыполнитьВыборКонтрагента()

	ТекДанные = Элементы.Контрагенты.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Если Контрагенты.Количество() = 0 Тогда
			ТекстПредупреждения = НСтр("ru='Ничего не найдено. Уточните реквизиты и нажмите ""Найти"".'");
			ПоказатьПредупреждение(, ТекстПредупреждения);
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ТекДанные.ИНН) Тогда
		ТекстПредупреждения = НСтр("ru='Выберите контрагента, у которого указан ИНН.'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	ОповеститьОВыборе(ТекДанные.ИНН);
	
КонецПроцедуры 

&НаСервере
Процедура НайтиРеквизитыНаСервере(ОписаниеОшибки)
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Информация = "";
	Контрагенты.Очистить();
	КоличествоНайденных = 0;
			
	ПоискПоИНН = ЭтоИНН(СтрокаПоиска);
	ПоискЮридическогоЛица = (ПоискПоИНН И СтрДлина(СтрокаПоиска) = 10) 
		ИЛИ НЕ ПоискПоИНН;
	Если ПоискПоИНН Тогда
		Если ПоискЮридическогоЛица Тогда
			НайденныеРеквизиты = ДанныеЕдиныхГосРеестров.РеквизитыЮридическогоЛицаПоИНН(СтрокаПоиска);
		Иначе
			НайденныеРеквизиты = ДанныеЕдиныхГосРеестров.РеквизитыПредпринимателяПоИНН(СтрокаПоиска);
		КонецЕсли;
	Иначе
		НайденныеРеквизиты = ДанныеЕдиныхГосРеестров.РеквизитыЮридическихЛицПоНаименованию(СтрокаПоиска, Регион, Адрес);
	КонецЕсли;
	Если ЗначениеЗаполнено(НайденныеРеквизиты.ОписаниеОшибки) Тогда
		ОписаниеОшибки = НайденныеРеквизиты.ОписаниеОшибки;
		Возврат;
	КонецЕсли;
	
	Если ПоискПоИНН Тогда
		НоваяСтрока = Контрагенты.Добавить();
		НоваяСтрока.ИНН = НайденныеРеквизиты.ИНН;
		Если ПоискЮридическогоЛица Тогда
			НоваяСтрока.Наименование = НайденныеРеквизиты.НаименованиеПолное;
			Если НайденныеРеквизиты.ЮридическийАдрес <> Неопределено Тогда
				НоваяСтрока.ЮридическийАдрес = НайденныеРеквизиты.ЮридическийАдрес.Представление;
			КонецЕсли;
			Если НайденныеРеквизиты.Руководитель <> Неопределено Тогда
				НоваяСтрока.Руководитель = НайденныеРеквизиты.Руководитель.Представление;
			КонецЕсли;
		Иначе
			НоваяСтрока.Наименование = НайденныеРеквизиты.Наименование;
		КонецЕсли;
		КоличествоНайденных = 1;
	Иначе
		Для каждого РеквизитыОрганизации Из НайденныеРеквизиты.РеквизитыОрганизаций Цикл
			НоваяСтрока = Контрагенты.Добавить();
			НоваяСтрока.ИНН = РеквизитыОрганизации.ИНН;
			НоваяСтрока.Наименование = РеквизитыОрганизации.НаименованиеПолное;
			Если РеквизитыОрганизации.ЮридическийАдрес <> Неопределено Тогда
				НоваяСтрока.ЮридическийАдрес = РеквизитыОрганизации.ЮридическийАдрес.Представление;
			КонецЕсли;
			Если РеквизитыОрганизации.Руководитель <> Неопределено Тогда
				НоваяСтрока.Руководитель = РеквизитыОрганизации.Руководитель.Фамилия
				+ " " + РеквизитыОрганизации.Руководитель.Имя
				+ " " + РеквизитыОрганизации.Руководитель.Отчество;
			КонецЕсли;
		КонецЦикла;
		КоличествоНайденных = НайденныеРеквизиты.КоличествоНайденных;
	КонецЕсли;
	
	Если КоличествоНайденных > 20 Тогда
		ТекущийЭлемент = Элементы.СтрокаПоиска;
		Информация = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Показаны первые 20 контрагентов из %1 найденных. Уточните реквизиты для поиска.'"), 
			КоличествоНайденных);
	ИначеЕсли КоличествоНайденных > 0 Тогда
		ТекущийЭлемент = Элементы.Контрагенты;
		Элементы.Контрагенты.ТекущаяСтрока = Контрагенты[0].ПолучитьИдентификатор();
	Иначе
		ТекущийЭлемент = Элементы.СтрокаПоиска;
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ПодключитьИнтернетПоддержку(Ответ, ДопПараметры) Экспорт

	Если Ответ = КодВозвратаДиалога.Да 
		И ОбщегоНазначенияКлиент.ПодсистемаСуществует("ИнтернетПоддержкаПользователей") Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ПодключитьИнтернетПоддержкуЗавершение", ЭтотОбъект, ДопПараметры);
		МодульИнтернетПоддержкаПользователейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль(
			"ИнтернетПоддержкаПользователейКлиент");
		МодульИнтернетПоддержкаПользователейКлиент.ПодключитьИнтернетПоддержкуПользователей(ОписаниеОповещения, ЭтотОбъект);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПодключитьИнтернетПоддержкуЗавершение(Результат, ДопПараметры) Экспорт

	Если Результат <> Неопределено Тогда
		ВыполнитьПоискКонтрагентов();
	КонецЕсли;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)

	ЭтоИНН = ЭтоИНН(Форма.СтрокаПоиска);
	Форма.Элементы.Регион.Доступность = НЕ ЭтоИНН;
	Форма.Элементы.Адрес.Доступность  = НЕ ЭтоИНН;

КонецПроцедуры

#КонецОбласти

