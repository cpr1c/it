#Область ОписаниеПеременных

&НаКлиенте
Перем ИсторияПолучателей;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РезультатУспехЦвет = ЦветаСтиля.РезультатУспехЦвет;
	
	Если Параметры.Свойство("Получатели") Тогда
		Для Каждого Стр Из Параметры.Получатели Цикл
			НС=ПочтовыеАдресаПолучателей.Добавить();
			ЗаполнитьЗначенияСвойств(НС,Стр);
			НС.ВариантОтправки="Копия:";
		КонецЦикла;
	КонецЕсли;
	
	Если ПочтовыеАдресаПолучателей.Количество()=0 Тогда
		НС=ПочтовыеАдресаПолучателей.Добавить();
		НС.ВариантОтправки="Копия:";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Применить(Команда)
	ДанныеВозврата=Новый Массив;
	
	Для Каждого СТр ИЗ ПочтовыеАдресаПолучателей Цикл
		Если Не ЗначениеЗаполнено(Стр.Адрес) Тогда
			Продолжить;
		КонецЕсли;
		ПолучательКопии=Новый Структура("Адрес,Представление,Контакт");
		ЗаполнитьЗначенияСвойств(ПолучательКопии,Стр);
		
		ДанныеВозврата.Добавить(ПолучательКопии);
	КонецЦикла;
	
	Закрыть(ДанныеВозврата);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПочтовыеАдресаПолучателей

&НаКлиенте
Процедура ПочтовыйАдресаПолучателейПередУдалением(Элемент, Отказ)
	
	Если ПочтовыеАдресаПолучателей.Количество() = 1 Тогда
		Отказ = Истина;
		ПочтовыеАдресаПолучателей[0].Представление = "";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПочтовыйАдресаПолучателейПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.ВариантОтправки = Элементы.ПочтовыйАдресПолучателейВариантОтправки.СписокВыбора.НайтиПоЗначению("Копия:");
		Элемент.ТекущийЭлемент                = Элементы.ПочтовыйАдресПолучателейПредставление;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПочтовыйАдресПолучателейПредставлениеАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если Ожидание = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(Текст) Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеВыбора = ДанныеВыбораДляЭлектронногоПисьма(Текст, 0);
	Если ДанныеВыбора.Количество() > 0 Тогда
		СтандартнаяОбработка = Ложь;
	Иначе
		ДанныеВыбора = Неопределено
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПочтовыйАдресаПолучателейПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеСтроки = Элемент.ТекущиеДанные;
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Адрес = ДанныеСтроки.Адрес;
	
	Если ПустаяСтрока(Адрес) Тогда
		Возврат;
	КонецЕсли;
	
	Если СтрНайти(Адрес, "@") = 0 ИЛИ СтрНайти(Адрес, ".") = 0 Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Необходимо ввести адрес электронной почты'"));
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Дубли = Новый Соответствие;
	Для каждого ПолучательПисьма Из ПочтовыеАдресаПолучателей Цикл
		АдресПочты = ПочтовыйАдресИзПредставления(ПолучательПисьма.Представление);
		Если Дубли[ВРег(АдресПочты)] = Неопределено Тогда
			Дубли.Вставить(ВРег(АдресПочты), Истина);
		Иначе
			ПоказатьПредупреждение(, НСтр("ru = 'Такой адрес электронной почты уже есть в списке.'"));
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПочтовыйАдресПолучателейПредставлениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОчиститьСообщения();
	
	Если Элементы.ПочтовыеАдресаПолучателей.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	РедактироватьСписокПолучателей();
КонецПроцедуры

&НаКлиенте
Процедура ПочтовыйАдресПолучателейПредставлениеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		ТекущиеДанные = Элементы.ПочтовыеАдресаПолучателей.ТекущиеДанные;
		ТекущиеДанные.ВариантОтправки         = "Копия:";
		ТекущиеДанные.Адрес         = ВыбранноеЗначение.Адрес;
		ТекущиеДанные.Представление = ВзаимодействияКлиентСервер.ПолучитьПредставлениеАдресата(ВыбранноеЗначение.Представление, ВыбранноеЗначение.Адрес, "");
		ТекущиеДанные.Контакт       = ВыбранноеЗначение.Контакт;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ПохожиеПолучателиИзИстории(Строка)
	
	Результат = Новый СписокЗначений;
	Если СтрДлина(Строка) = 0 Тогда
		Возврат Результат;
	КонецЕсли;
	
	Если ИсторияПолучателей = Неопределено Тогда
		ИсторияПолучателей = ИсторияПолучателей();
	КонецЕсли;
	
	Для Каждого Получатель Из ИсторияПолучателей Цикл
		ПредставлениеАдреса = ПредставлениеАдреса(Получатель.Ключ, Получатель.Значение);
		Позиция = СтрНайти(НРег(ПредставлениеАдреса), НРег(Строка));
		Если Позиция > 0 Тогда
			ПодстрокаДоВхождения = Лев(ПредставлениеАдреса, Позиция - 1);
			ПодстрокаВхождения = Сред(ПредставлениеАдреса, Позиция, СтрДлина(Строка));
			ПодстрокаПослеВхождения = Сред(ПредставлениеАдреса, Позиция + СтрДлина(Строка));
			СтрокаСПодсветкой = Новый ФорматированнаяСтрока(
				ПодстрокаДоВхождения,
				Новый ФорматированнаяСтрока(ПодстрокаВхождения, Новый Шрифт( , , Истина), РезультатУспехЦвет),
				ПодстрокаПослеВхождения);
			Результат.Добавить(ПредставлениеАдреса, СтрокаСПодсветкой);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция ПредставлениеАдреса(Адрес, ПредставлениеПолучателя)
	Результат = Адрес;
	Если Не ПустаяСтрока(ПредставлениеПолучателя) Тогда
		Результат = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("%1 <%2>", ПредставлениеПолучателя, Адрес);
	КонецЕсли;
	Возврат Результат;
КонецФункции

&НаСервереБезКонтекста
Функция ИсторияПолучателей()
	
	Возврат ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("РедактированиеНовогоПисьма", "ИсторияПолучателей", Новый Соответствие);
	
КонецФункции

&НаКлиенте
Функция ПочтовыйАдресИзПредставления(Знач Представление)
	
	Адрес = Представление;
	ПозицияНачало = СтрНайти(Представление, "<");
	Если ПозицияНачало > 0 Тогда
		ПозицияОкончание = СтрНайти(Представление, ">", НаправлениеПоиска.СНачала, ПозицияНачало);
		Если ПозицияОкончание > 0 Тогда
			Адрес = Сред(Представление, ПозицияНачало + 1, ПозицияОкончание - ПозицияНачало - 1);
		КонецЕсли;
	КонецЕсли;
	
	Возврат СокрЛП(Адрес);

КонецФункции

&НаКлиенте
Процедура РедактироватьСписокПолучателей()
	
	СписокВыбранных = Новый СписокЗначений;
	СписокВыбранных.Добавить(
			УправлениеЭлектроннойПочтойКлиент.ТаблицуКонтактовВМассив(ПочтовыеАдресаПолучателей), "Копия:");
	
	ПараметрыОткрытия = Новый Структура;
	//ПараметрыОткрытия.Вставить("УчетнаяЗапись", Объект.УчетнаяЗапись);
	ПараметрыОткрытия.Вставить("СписокВыбранных", СписокВыбранных);
	//ПараметрыОткрытия.Вставить("Предмет", Предмет);
	//ПараметрыОткрытия.Вставить("Письмо", Объект.Ссылка);
	//ПараметрыОткрытия.Вставить("ГруппаПоУмолчанию",?(ПустаяСтрока(ГруппаПодбора),НСтр("ru = 'Кому'"), ГруппаПодбора));
	
	// Откроем форму для редактирования списка адресатов.
	ОповещениеПослеЗакрытия = Новый ОписаниеОповещения("ПослеЗаполненияАдреснойКниги", ЭтотОбъект);
	ИмяОбщейФормы = "ОбщаяФорма.АдреснаяКнига";
	
	ОткрытьФорму(ИмяОбщейФормы, ПараметрыОткрытия, ЭтотОбъект,,,, ОповещениеПослеЗакрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаполненияАдреснойКниги(ВыбранноеЗначение, ДополнительныеПараметры) Экспорт
	
	ЗаполнитьПодобранныхПолучателейПослеВыбора(ВыбранноеЗначение);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПодобранныхПолучателейПослеВыбора(ВыбранноеЗначение)
	
	Если ТипЗнч(ВыбранноеЗначение) <> Тип("Массив") И ТипЗнч(ВыбранноеЗначение) <> Тип("Соответствие") Тогда
		Возврат;
	КонецЕсли;
	
	// Заполним адресатов
	ЗаполнитьПодобранныхПолучателей(ВыбранноеЗначение);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПодобранныхПолучателей(Результат)

	МассивРанееДобавленныхАдресов = Новый Массив;
	Для Каждого Элемент Из ПочтовыеАдресаПолучателей ЦИкл
		МассивРанееДобавленныхАдресов.Добавить(Элемент.Адрес);
	КонецЦикла;
	
	
	Для Каждого Элемент Из Результат Цикл
		
		Если МассивРанееДобавленныхАдресов.Найти(Элемент.Адрес) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ПочтовыеАдресаПолучателей.Добавить();
		НоваяСтрока.ВариантОтправки         = "Копия:";
		НоваяСтрока.Адрес         = Элемент.Адрес;
		НоваяСтрока.Представление = ОбработанноеПредставлениеАдресата(Элемент.Представление);
		НоваяСтрока.Контакт       = Элемент.Контакт;
		
		НоваяСтрока.Представление=ВзаимодействияКлиентСервер.ПолучитьПредставлениеАдресата(НоваяСтрока.Представление, НоваяСтрока.Адрес, "");
		МассивРанееДобавленныхАдресов.Добавить(НоваяСтрока.Адрес);
		
	КонецЦикла;
	
	//ОчиститьДублиАдресатов(Объект.ПолучателиПисьма);
	Элементы.ПочтовыеАдресаПолучателей.Обновить();
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ОбработанноеПредставлениеАдресата(ПредставлениеАдресата)

	ПредставлениеАдресата = СтрЗаменить(ПредставлениеАдресата, ",", "");
	ПредставлениеАдресата = СтрЗаменить(ПредставлениеАдресата, ";", "");
	
	Возврат ПредставлениеАдресата;

КонецФункции

&НаСервереБезКонтекста
Функция ДанныеВыбораДляЭлектронногоПисьма(Текст, ИндексВСпискеПолучателей)
	
	ВозвращаемыйСписок = Новый СписокЗначений;
	МассивОписанияТиповКонтактов = ВзаимодействияКлиентСервер.ОписанияКонтактов();
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	СправочникКонтакт.Ссылка КАК Контакт,
	|	ПРЕДСТАВЛЕНИЕ(СправочникКонтакт.Ссылка) КАК Представление,
	|	ТаблицаКонтактнаяИнформация.АдресЭП КАК АдресЭП 
	|ИЗ
	|	Справочник.Пользователи КАК СправочникКонтакт
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Пользователи.КонтактнаяИнформация КАК ТаблицаКонтактнаяИнформация
	|		ПО (ТаблицаКонтактнаяИнформация.Ссылка = СправочникКонтакт.Ссылка)
	|			И (ТаблицаКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты) И (ТаблицаКонтактнаяИнформация.АдресЭП <> """"))
	|ГДЕ
	|	(СправочникКонтакт.Наименование ПОДОБНО &ВведеннаяСтрока
	|			ИЛИ ТаблицаКонтактнаяИнформация.АдресЭП ПОДОБНО &ВведеннаяСтрока
	|			ИЛИ ТаблицаКонтактнаяИнформация.ДоменноеИмяСервера ПОДОБНО &ВведеннаяСтрока
	|			ИЛИ ТаблицаКонтактнаяИнформация.Представление ПОДОБНО &ВведеннаяСтрока)";
	
	Для каждого ЭлементМассиваОписания Из МассивОписанияТиповКонтактов Цикл
		
		Если ЭлементМассиваОписания.Имя = "Пользователи" Тогда
			Продолжить;
		Иначе
			
			УсловиеПолейВводаПоСтроке = "";
			МетаданныеОбъекта = Метаданные.НайтиПоТипу(ЭлементМассиваОписания.Тип);
			СписокПолей = МетаданныеОбъекта.ВводПоСтроке;
			Для Каждого Поле Из СписокПолей Цикл
				Если МетаданныеОбъекта.СтандартныеРеквизиты[Поле.Имя].Тип.Типы()[0] = Тип("Строка") Тогда
					УсловиеПолейВводаПоСтроке = УсловиеПолейВводаПоСтроке + " ИЛИ СправочникКонтакт." + Поле.Имя + " ПОДОБНО &ВведеннаяСтрока";
				КонецЕсли;
			КонецЦикла;
			
			ТекстЗапроса = ТекстЗапроса + "
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	СправочникКонтакт.Ссылка                                                           КАК Контакт,
			|	СправочникКонтакт." + ЭлементМассиваОписания.ИмяРеквизитаПредставлениеКонтакта + " КАК Представление,
			|	ТаблицаКонтактнаяИнформация.АдресЭП                                                КАК АдресЭП
			|ИЗ
			|	Справочник." + ЭлементМассиваОписания.Имя + " КАК СправочникКонтакт
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник." + ЭлементМассиваОписания.Имя + ".КонтактнаяИнформация КАК ТаблицаКонтактнаяИнформация
			|		ПО (ТаблицаКонтактнаяИнформация.Ссылка = СправочникКонтакт.Ссылка)
			|			И (ТаблицаКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты) И (ТаблицаКонтактнаяИнформация.АдресЭП <> """"))
			|ГДЕ
			|	(ТаблицаКонтактнаяИнформация.АдресЭП ПОДОБНО &ВведеннаяСтрока
			|			ИЛИ ТаблицаКонтактнаяИнформация.ДоменноеИмяСервера ПОДОБНО &ВведеннаяСтрока
			|			ИЛИ ТаблицаКонтактнаяИнформация.Представление ПОДОБНО &ВведеннаяСтрока 
			|" + УсловиеПолейВводаПоСтроке + ") 
			|";
			
		КонецЕсли;
		
	КонецЦикла;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ВведеннаяСтрока", "%"+Текст + "%");
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат ВозвращаемыйСписок;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ЗначениеВыбора = Новый Структура;
		ЗначениеВыбора.Вставить("Контакт", Выборка.Контакт);
		ЗначениеВыбора.Вставить("Адрес", Выборка.АдресЭП);
		ЗначениеВыбора.Вставить("Представление", Выборка.Представление);
		ЗначениеВыбора.Вставить("ИндексВСпискеПолучателей", ИндексВСпискеПолучателей);
		ВозвращаемыйСписок.Добавить(ЗначениеВыбора, 
			ВзаимодействияКлиентСервер.ПолучитьПредставлениеАдресата(Выборка.Представление, Выборка.АдресЭП, ""));
		
	КонецЦикла;
	
	Возврат ВозвращаемыйСписок;
	
КонецФункции 


#КонецОбласти

