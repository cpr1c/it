
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоНовый() Тогда
		Дата = ТекущаяДатаСеанса();
	КонецЕсли;
	
	РеквизитыДоИзменения = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, 
		"Статус,ДатаВыполнения,ДатаЗакрытия,ДатаНачалаРаботПоЗадаче");
	
	СтатусНовый = УправлениеЗадачамиПовтИсп.СтатусЗадачиНовый();
	СтатусВРаботе = УправлениеЗадачамиПовтИсп.СтатусЗадачиВРаботе();
	СтатусыНеВыполненных = УправлениеЗадачамиПовтИсп.СтатусыНеВыполненныхЗадач();
	СтатусыВыполненных = УправлениеЗадачамиПовтИсп.СтатусыСписка(Справочники.СпискиСтатусовЗадач.Выполненные);
	СтатусыЗакрытых = УправлениеЗадачамиПовтИсп.СтатусыСписка(Справочники.СпискиСтатусовЗадач.Закрытые);
	
	// ДатаВыполнения
	Если СтатусыНеВыполненных.НайтиПоЗначению(РеквизитыДоИзменения.Статус) <> Неопределено 
		И СтатусыНеВыполненных.НайтиПоЗначению(Статус) = Неопределено Тогда
		
		ДатаВыполнения = ТекущаяДатаСеанса();
	ИначеЕсли СтатусыНеВыполненных.НайтиПоЗначению(Статус) <> Неопределено Тогда
		ДатаВыполнения = '00010101000000';
	КонецЕсли;
	
	// ДатаЗакрытия
	Если СтатусыЗакрытых.НайтиПоЗначению(РеквизитыДоИзменения.Статус) = Неопределено 
		И СтатусыЗакрытых.НайтиПоЗначению(Статус) <> Неопределено Тогда
		
		ДатаЗакрытия = ТекущаяДатаСеанса();
	ИначеЕсли СтатусыЗакрытых.НайтиПоЗначению(Статус) = Неопределено Тогда
		ДатаЗакрытия = '00010101000000';
	КонецЕсли;
	
	// ДатаНачалаРаботПоЗадаче
	Если (Не ЗначениеЗаполнено(РеквизитыДоИзменения.Статус) ИЛИ РеквизитыДоИзменения.Статус = СтатусНовый) 
		И Статус <> СтатусНовый Тогда
		
		ДатаНачалаРаботПоЗадаче = ТекущаяДатаСеанса();
	КонецЕсли;
	
	// Установка срока исполнения авто, если срок задан вручную
	Если ЗначениеЗаполнено(СрокИсполнения) Тогда
		СрокИсполненияАвто = СрокИсполнения;
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("Изменения", УправлениеЗадачами.ИзмененияОбъектаПередЗаписью(ЭтотОбъект, Ложь));
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)

	// регистр ТрудозатратыПоЗадачам 
	Движения.Трудозатраты.Записывать = Истина;
	Движение = Движения.Трудозатраты.Добавить();
	Движение.Период = Дата;
	Движение.Предмет = Ссылка;
	Движение.Автор = Автор;
	Движение.План = ОценкаТрудозатратИсполнителя;

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Статус = УправлениеЗадачамиПовтИсп.СтатусЗадачиНовый();
	СодержаниеФормат=УправлениеЗадачамиПовтИсп.ФорматТекстаКомментарияПоУмолчанию();
		
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Задача") Тогда
		
		РодительскаяЗадача = ДанныеЗаполнения;
		
		РеквизитыРодительскойЗадачи = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			РодительскаяЗадача,
			"КонтактОбращения,Проект,Спринт,СрокИсполнения,Срочность");
			
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, РеквизитыРодительскойЗадачи);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Статус = УправлениеЗадачамиПовтИсп.СтатусЗадачиНовый();
	
	ДатаСоздания = '00010101000000';
	ДатаИзменения = '00010101000000';
	ДатаЗакрытия = '00010101000000';
	ДатаВыполнения = '00010101000000';
	ДатаНачалаРаботПоЗадаче = '00010101000000';
	СрокИсполненияАвто = '00010101000000';
	
	Если ТипЗнч(Основание) = Тип("СправочникСсылка.Уроки") Тогда
		Основание = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	УправлениеЗадачами.ЗаписатьИзмененияКлючевыхРеквизитовЗадачиПриЗаписи(ЭтотОбъект);
КонецПроцедуры




