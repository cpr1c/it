#Область ОбработчикиСобытийФормы


&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	УправлениеЗадачами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект.Предмет);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	Параметры.Свойство("Идентификатор", ИдентификаторТаймера);
	
	ЗаполнитьСписокВыбораДеятельности();
	
	Если Объект.Ссылка.Пустая() Тогда
		
		Если Не ЗначениеЗаполнено(Объект.ВидДеятельности) Тогда
			Объект.ВидДеятельности = Элементы.ВидДеятельности.СписокВыбора[0].Значение;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ИдентификаторТаймера) Тогда
			Объект.Комментарий = Объект.Комментарий + " " + УчетВремени.ПериодыУчетаВремениПоТаймеру(ИдентификаторТаймера);	
		КонецЕсли;
		
	КонецЕсли;
	
	УчетВремени.ДобавитьКомандыБыстройУстановкиЧасов(ЭтотОбъект, Элементы.ГруппаТрудозатраты);
	
	ОбновитьТекстКоммита();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	УчетВремениКлиент.ОповеститьОбИзмененииТрудозатрат(Объект.Предмет);
	УчетВремениКлиент.ОповеститьОбФиксацииТрудозатратПоТаймеру(ИдентификаторТаймера);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЧасовРегулирование(Элемент, Направление, СтандартнаяОбработка)
	УправлениеЗадачамиКлиент.ПолеЧасовРегулирование(ЭтотОбъект, "Объект.Часов", Направление, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура КомментарийПриИзменении(Элемент)
	ОбновитьТекстКоммита();
КонецПроцедуры

&НаКлиенте
Процедура ПредметПриИзменении(Элемент)
	ОбновитьТекстКоммита();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

//@skip-warning
&НаКлиенте
Процедура Подключаемый_УчетВремени_ВыполнитьКомандуБыстройУстановкиЧасов(Команда)
	УчетВремениКлиент.ВыполнитьКомандуБыстройУстановкиЧасов(ЭтотОбъект, Команда, "Объект.Часов");
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьСписокВыбораДеятельности()
	Элементы.ВидДеятельности.СписокВыбора.ЗагрузитьЗначения(УчетВремени.ДоступныеВидыДеятельностиУчетаТрудозатрат());
КонецПроцедуры

&НаСервере
Процедура ОбновитьТекстКоммита()
	
	Если ТипЗнч(Объект.Предмет) = Тип("ДокументСсылка.Задача") Тогда
		ТекстКоммита = СтрШаблон("refs #%1 %2", 
						Формат(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Предмет,"Номер"), "ЧГ=0"),
						СтрЗаменить(Объект.Комментарий, Символы.ПС, " "));	
	Иначе
		ТекстКоммита = СтрЗаменить(Объект.Комментарий, Символы.ПС, " ");	
	КонецЕсли;
	
	// удалим из текста коммита периоды учета времени
	Компонента = РегулярныеВыраженияКлиентСервер.КомпонентаРегулярныхВыражений(Истина);
	ТекстКоммита = РегулярныеВыраженияКлиентСервер.Заменить(ТекстКоммита, "\[\d\d:\d\d\-\d\d:\d\d\]", "", Компонента);
	ТекстКоммита = СокрП(ТекстКоммита);
	
КонецПроцедуры

#КонецОбласти
