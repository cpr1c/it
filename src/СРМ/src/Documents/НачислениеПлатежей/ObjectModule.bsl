////////////////////////////////////////////////////////////////////////////////
//ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция УстановитьПометкуПринятВГИСГМП() Экспорт
	
	Попытка
		ГИСГМП_ВыгруженВГИСГМП = Истина;
		ГИСГМП_ПринятВГИСГМП = Истина;
	    ОбменДанными.Загрузка = Истина;
		Записать(РежимЗаписиДокумента.Запись);
		Возврат Истина;
	Исключение
		Сообщить("Не удалось установить признак ""Принят в ГИС ГМП"" по причине: " + ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
//ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Проверяет правильность заполнения .
// Если какой-то из реквизитов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверяется также правильность заполнения реквизитов ссылочных полей документа.
// Проверка выполняется по объекту и по выборке из результата запроса по шапке.
//
// Параметры: 
//  СтруктураШапкиДокумента - структура, содержащая реквизиты шапки документа и результаты запроса по шапке
//  Отказ                   - флаг отказа в проведении,
//  Заголовок               - строка, заголовок сообщения об ошибке проведения.
//
Процедура ПроверитьЗаполнениеТабличныхЧастей(Отказ)

	ПроверитьЗаполнениеТЧ("НачисленияАренды", "Начисления аренды", Отказ);
	ПроверитьЗаполнениеТЧ("НачисленияРеализации", "Начисления реализации", Отказ);
	ПроверитьЗаполнениеТЧ("НачисленияПеней", "Начисления пеней", Отказ);
	
КонецПроцедуры // ПроверитьЗаполнениеШапки()

Процедура ПроверитьЗаполнениеТЧ(ИмяТЧ, ПредставлениеТЧ, Отказ)
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТЧ.НомерСтроки
	|ИЗ
	|	Документ.НачислениеПлатежей.НачисленияАренды КАК ТЧ
	|ГДЕ
	|	ТЧ.Ссылка = &Ссылка
	|	И ТЧ.Договор.ТипДоговора <> &ТипДоговора";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "НачисленияАренды", ИмяТЧ);
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ТипДоговора", ТипДоговора);

	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		
		Отказ = Истина;
		
		ТекстСообщения = "В таблице " + ПредставлениеТЧ + " обнаружены договоры с типом договора отличным от " + ТипДоговора + ":";
		
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			ТекстСообщения = ТекстСообщения + Символы.ПС + Выборка.НомерСтроки;	
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПодготовитьТаблицуНачислений()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	1 КАК ПорядокТЧ,
	|	""А"" КАК КодТЧДляСчетаФактуры,
	|	НачислениеПлатежейНачисленияАренды.НомерСтроки КАК НомерСтроки,
	|	НачислениеПлатежейНачисленияАренды.Договор,
	|	НачислениеПлатежейНачисленияАренды.Контрагент,
	|	НачислениеПлатежейНачисленияАренды.КБК,
	|	НачислениеПлатежейНачисленияАренды.Всего,
	|	НачислениеПлатежейНачисленияАренды.СтавкаНДС,
	|	НачислениеПлатежейНачисленияАренды.Сумма КАК СуммаБезНДС,
	|	НачислениеПлатежейНачисленияАренды.Всего - НачислениеПлатежейНачисленияАренды.Сумма КАК СуммаНДС
	|ИЗ
	|	Документ.НачислениеПлатежей.НачисленияАренды КАК НачислениеПлатежейНачисленияАренды
	|ГДЕ
	|	НачислениеПлатежейНачисленияАренды.Ссылка = &ТекущийДокумент
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	""Р"",
	|	НачислениеПлатежейНачисленияРеализации.НомерСтроки,
	|	НачислениеПлатежейНачисленияРеализации.Договор,
	|	НачислениеПлатежейНачисленияРеализации.Контрагент,
	|	НачислениеПлатежейНачисленияРеализации.КБК,
	|	НачислениеПлатежейНачисленияРеализации.Всего,
	|	НачислениеПлатежейНачисленияРеализации.СтавкаНДС,
	|	НачислениеПлатежейНачисленияРеализации.Сумма,
	|	НачислениеПлатежейНачисленияРеализации.Всего - НачислениеПлатежейНачисленияРеализации.Сумма
	|ИЗ
	|	Документ.НачислениеПлатежей.НачисленияРеализации КАК НачислениеПлатежейНачисленияРеализации
	|ГДЕ
	|	НачислениеПлатежейНачисленияРеализации.Ссылка = &ТекущийДокумент
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3,
	|	""П"",
	|	НачислениеПлатежейНачисленияПеней.НомерСтроки,
	|	НачислениеПлатежейНачисленияПеней.Договор,
	|	НачислениеПлатежейНачисленияПеней.Контрагент,
	|	НачислениеПлатежейНачисленияПеней.КБК,
	|	НачислениеПлатежейНачисленияПеней.Всего,
	|	НачислениеПлатежейНачисленияПеней.СтавкаНДС,
	|	НачислениеПлатежейНачисленияПеней.Сумма,
	|	НачислениеПлатежейНачисленияПеней.Всего - НачислениеПлатежейНачисленияПеней.Сумма
	|ИЗ
	|	Документ.НачислениеПлатежей.НачисленияПеней КАК НачислениеПлатежейНачисленияПеней
	|ГДЕ
	|	НачислениеПлатежейНачисленияПеней.Ссылка = &ТекущийДокумент
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПорядокТЧ,
	|	НомерСтроки";
	Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// По результату запроса по шапке документа формируем движения по регистрам.
//
// Параметры: 
//  РежимПроведения           - режим проведения документа (оперативный или неоперативный),
//  СтруктураШапкиДокумента   - структура, содержащая реквизиты шапки документа и результаты запроса по шапке
//  ТаблицаПоСуммамДолга          - таблица значений, содержащая данные для проведения и проверки ТЧ Товары
//  Отказ                     - флаг отказа в проведении,
//  Заголовок                 - строка, заголовок сообщения об ошибке проведения.
//
Процедура ДвиженияПоРегистрам(ТаблицаНачислений, РежимПроведения,   Отказ)
	
	// 27.07.2018 *** ГК (начало)
	//НомерНаПечать = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Номер);
	ЭтоНачислениеПроцентов = ВидНачисления = Перечисления.ТипыВзаиморасчетов.Проценты;
	ЭтоПени = ВидНачисления = Перечисления.ТипыВзаиморасчетов.Пени;
	
	Движения.ВзаиморасчетыСКонтрагентами.Очистить();
	Движения.ВзаиморасчетыСКонтрагентами.Записывать=Истина;
	
	Движения.ГК_РасчетыПоГрафикуПлатежей.Очистить();
	Движения.ГК_РасчетыПоГрафикуПлатежей.Записывать=Истина;
	// 27.07.2018 *** ГК (окончание)
	
	Для Каждого СтрокаТЧ Из ТаблицаНачислений Цикл
		
		Движение=Движения.ВзаиморасчетыСКонтрагентами.ДобавитьПриход();
		ДВижение.Период=Дата;
		Движение.ДоговорКонтрагента=СтрокаТЧ.Договор;
		Движение.ТипВзаиморасчета=ВидНачисления;
		Движение.КБК=СтрокаТЧ.КБК;
		Движение.Контрагент = СтрокаТЧ.Контрагент;
		Движение.Сумма=СтрокаТЧ.Всего;
		
		// 27.07.2018 *** ГК (начало)
		Если ЭтоПени Тогда
			Продолжить;
		КонецЕсли;
		
		Движение = Движения.ГК_РасчетыПоГрафикуПлатежей.ДобавитьРасход();
		Движение.Период = Дата;
		Движение.Договор = СтрокаТЧ.Договор;
		Движение.Месяц = НачалоМесяца(ПериодРегистрации);
		Движение.СуммаВсего = СтрокаТЧ.Всего; 
		Если ЭтоНачислениеПроцентов Тогда
			Движение.СуммаПроценты = СтрокаТЧ.Всего;
		Иначе
			Движение.СуммаОсновнойДолг = СтрокаТЧ.Всего;
		КонецЕсли;
		// 27.07.2018 *** ГК (окончание)
		
		//Если ЗначениеЗаполнено(СтрокаТЧ.СуммаНДС) Тогда
		//	Движение = Движения.ЗаписиКнигиПродаж.Добавить();
		//	Движение.Период = Дата;
		//	Движение.Организация = Организация;
		//	Движение.Контрагент = СтрокаТЧ.Контрагент;
		//	Движение.СчетФактура = Ссылка;
		//	Движение.СтавкаНДС = СтрокаТЧ.СтавкаНДС;
		//	Движение.ДатаСчетаФактуры = Дата;
		//	Движение.НомерСчетаФактуры = СтрокаТЧ.КодТЧДляСчетаФактуры + НомерНаПечать + "/" + СтрокаТЧ.НомерСтроки;
		//	Движение.СуммаБезНДС=СтрокаТЧ.СуммаБезНДС;
		//	Движение.НДС = СтрокаТЧ.СуммаНДС;
		//КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // ДвиженияПоРегистрам()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Процедура вызывается перед записью документа 
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)   
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	// 30.08.2015 *** ГК *** Борисов Проект "ГИС ГМП" Задача № (начало)
	Если ГИСГМП_ВыгруженВГИСГМП Тогда
		Отказ = Истина;
		Сообщить("Редактирование документа запрещено, т.к. он был выгружен в ГИС ГМП.");
		Возврат;
	КонецЕсли;
	// 30.08.2015 *** ГК *** Борисов Проект "ГИС ГМП" Задача № (окончание)
	
	ПериодРегистрации = Дата; // для совместимости
	
	Если ВидНачисления=Перечисления.ТипыВзаиморасчетов.Пени Тогда
		НачисленияАренды.Очистить();
		НачисленияРеализации.Очистить();
	ИначеЕсли ТипДоговора=Перечисления.ТипыДоговоров.Реализация Тогда
		НачисленияАренды.Очистить();
		НачисленияПеней.Очистить();
	Иначе  // аренда
		НачисленияПеней.Очистить();
		НачисленияРеализации.Очистить();
	КонецЕсли;
	
	// 30.08.2015 *** ГК *** Борисов Проект "ГИС ГМП" Задача № (начало)
	// установим инентификаторы строк таб. части для уникальности начислений в ГИС ГМП
	УстановитьУИДВСтрокахТабЧасти("НачисленияАренды");
	УстановитьУИДВСтрокахТабЧасти("НачисленияРеализации");
	УстановитьУИДВСтрокахТабЧасти("НачисленияПеней");
	
	Если Не ЗначениеЗаполнено(ГИСГМП_УникальныйНомерДокумента) Тогда
		ГИСГМП_УникальныйНомерДокумента = ГИСГМП_СерверСлужебный.ПолучитьНовыйУникальныйНомерДокументаНачисления();
	КонецЕсли;
	// 30.08.2015 *** ГК *** Борисов Проект "ГИС ГМП" Задача № (окончание)
	
КонецПроцедуры // ПередЗаписью

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	// Движения по документу
	Если Не Отказ Тогда
				
		ТаблицаНачислений = ПодготовитьТаблицуНачислений();
		
		ДвиженияПоРегистрам(ТаблицаНачислений, РежимПроведения,   Отказ);

	КонецЕсли; 

КонецПроцедуры	// ОбработкаПроведения()


Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ДанныеЗаполнения = Неопределено Тогда // Ввод нового.
		_ДемоСтандартныеПодсистемы.ПриВводеНовогоЗаполнитьОрганизацию(ЭтотОбъект);
	КонецЕсли;
КонецПроцедуры

// 30.08.2015 *** ГК *** Борисов Проект "ГИС ГМП" Задача № (начало)

Процедура УстановитьУИДВСтрокахТабЧасти(ИмяТЧ)
	
	Для Каждого Стр Из ЭтотОбъект[ИмяТЧ] Цикл
		Если Не ЗначениеЗаполнено(Стр["ГИСГМП_ИдентификаторСтроки"]) Тогда
			Стр["ГИСГМП_ИдентификаторСтроки"] = Строка(Новый УникальныйИдентификатор);		
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// 30.08.2015 *** ГК *** Борисов Проект "ГИС ГМП" Задача № (окончание)

// 05.10.2015 *** ГК *** Борисов Проект "ГИС ГМП" Задача № (начало)

Процедура ПриКопировании(ОбъектКопирования)
	
	ГИСГМП_ВыгруженВГИСГМП = Ложь;
	ГИСГМП_ПринятВГИСГМП = Ложь;
	ГИСГМП_УникальныйНомерДокумента = 0;
	ГИСГМП_ИдентификаторВСистемеГИСГМП = "";
	// 23.05.2018 *** ГК (начало)
	ОчиститьУИДВСтрокахТабЧасти("НачисленияАренды");
	ОчиститьУИДВСтрокахТабЧасти("НачисленияРеализации");
	ОчиститьУИДВСтрокахТабЧасти("НачисленияПеней");
	// 23.05.2018 *** ГК (окончание)
	
КонецПроцедуры

// 05.10.2015 *** ГК *** Борисов Проект "ГИС ГМП" Задача № (окончание)

// 23.05.2018 *** ГК (начало)

Процедура ОчиститьУИДВСтрокахТабЧасти(ИмяТЧ)
	
	Для Каждого Стр Из ЭтотОбъект[ИмяТЧ] Цикл
		Стр["ГИСГМП_ИдентификаторСтроки"] = "";		
	КонецЦикла;
	
КонецПроцедуры

// 23.05.2018 *** ГК (окончание)