&НаСервере
Процедура РассчитатьСуммуДоговора() 
	Сумма=Аренда.РассчитатьГодовуюСуммуПоДоговору(КонецДня(Объект.Дата),,Объект);
КонецПроцедуры

&НаКлиенте
Процедура ПомещенияПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	РассчитатьСуммуДоговора();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеДоговора() Экспорт
	
	Отбор=Новый Структура;
	Отбор.Вставить("Договор",Объект.Договор);
	
	ДатаСреза=Объект.Дата;
	Если НачалоДня(ДатаСреза)=НачалоДня(ТекущаяДата()) тогда
		ДатаСреза=ТекущаяДата();
	КонецЕсли;
	
	СтруктураДоговора=РегистрыСведений.ДанныеДоговора.ПолучитьПоследнее(ДатаСреза,Отбор);
	
	ДЛя Каждого КлючЗначение ИЗ СтруктураДоговора Цикл
		Если Объект.Свойство(КлючЗначение.Ключ) Тогда
			Объект[КлючЗначение.Ключ]=КлючЗначение.Значение;
		КонецЕсли;
	КОнецЦикла;
	
	Объект.ТипДоговора=Объект.Договор.ТипДоговора;
	Объект.Валюта=Объект.Договор.ВалютаРасчетов;
	РассчитатьСуммуДоговора();
	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорПриИзменении(Элемент)
	ЗаполнитьДанныеДоговора();
КонецПроцедуры

&НаКлиенте
Процедура СтавкаПриИзменении(Элемент)
	РассчитатьСуммуДоговора();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИнициализироватьЛокальнуюКонтактнуюИнформацию();
	
	Если Объект.Ссылка.Пустая() И ЗначениеЗаполнено(Объект.Договор) Тогда
		ЗаполнитьДанныеДоговора();
	КонецЕсли;
	РассчитатьСуммуДоговора();
	
КонецПроцедуры

&НаКлиенте
Процедура АдресНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// Если представление было изменено в поле и сразу нажата кнопка выбора, то необходимо 
	// привести данные в соответствие и сбросить внутренние поля для повторного разбора
	Если Элемент.ТекстРедактирования<>Объект.Адрес Тогда
		Объект.Адрес= Элемент.ТекстРедактирования;
		Объект.ДанныеАдреса        = "";
	КонецЕсли;
	
	// Данные для редактирования
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ВидКонтактнойИнформации", ВидКонтактнойИнформацииАдреса);
	ПараметрыОткрытия.Вставить("ЗначенияПолей",           Объект.ДанныеАдреса);
	ПараметрыОткрытия.Вставить("Представление",           Объект.Адрес);
	ПараметрыОткрытия.Вставить("Комментарий",             "");
	
	// Переопределямый заголовок формы, по умолчанию отобразятся данные по ВидКонтактнойИнформации
	ПараметрыОткрытия.Вставить("Заголовок", НСтр("ru='Адрес помещения'"));
	
	УправлениеКонтактнойИнформациейКлиент.ОткрытьФормуКонтактнойИнформации(ПараметрыОткрытия, Элемент);
КонецПроцедуры

// СтандартныеПодсистемы.КонтактнаяИнформация

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент)
	
	УправлениеКонтактнойИнформациейКлиент.ПредставлениеПриИзменении(ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Результат = УправлениеКонтактнойИнформациейКлиент.ПредставлениеНачалоВыбора(ЭтотОбъект, Элемент, , СтандартнаяОбработка);
	ОбновитьКонтактнуюИнформацию(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОчистка(Элемент, СтандартнаяОбработка)
	
	Результат = УправлениеКонтактнойИнформациейКлиент.ПредставлениеОчистка(ЭтотОбъект, Элемент.Имя);
	ОбновитьКонтактнуюИнформацию(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияВыполнитьКоманду(Команда)
	
	Результат = УправлениеКонтактнойИнформациейКлиент.ПодключаемаяКоманда(ЭтотОбъект, Команда.Имя);
	ОбновитьКонтактнуюИнформацию(Результат);
	УправлениеКонтактнойИнформациейКлиент.ОткрытьФормуВводаАдреса(ЭтотОбъект, Результат);
	
КонецПроцедуры

&НаСервере
Функция ОбновитьКонтактнуюИнформацию(Результат = Неопределено)
	
	Возврат УправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформацию(ЭтотОбъект, Объект, Результат);
	
КонецФункции

// Конец СтандартныеПодсистемы.КонтактнаяИнформация

// Инициализирует реквизиты формы по данным контакной информации шапки объекта
//
&НаСервере
Процедура ИнициализироватьЛокальнуюКонтактнуюИнформацию()
	
	// Реквизит формы, контролирующий работу с адресом доставки.
	// Используемые поля аналогичны полям справочника ВидыКонтактнойИнформации
	ВидКонтактнойИнформацииАдреса = Новый Структура;
	ВидКонтактнойИнформацииАдреса.Вставить("Тип", Перечисления.ТипыКонтактнойИнформации.Адрес);
	ВидКонтактнойИнформацииАдреса.Вставить("АдресТолькоРоссийский",        Ложь);
	ВидКонтактнойИнформацииАдреса.Вставить("ВключатьСтрануВПредставление", Ложь);
	ВидКонтактнойИнформацииАдреса.Вставить("СкрыватьНеактуальныеАдреса",   Ложь);
	
	Объект.Адрес = УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформации(Объект.ДанныеАдреса);
КонецПроцедуры

// Устанавливаем новый комментарий для адреса доставки
// 
&НаСервере
Процедура ЗаполнитьКомментарийАдресаДоставкиСервер()
	Если ПустаяСтрока(Объект.Адрес) Тогда
		// Необходимо инициализировать данные
		Объект.Адрес = ЗначенияПолейКонтактнойИнформацииСервер(Объект.Адрес, ВидКонтактнойИнформацииАдреса);
		Возврат;
	КонецЕсли;
	
	УправлениеКонтактнойИнформацией.КомментарийКонтактнойИнформации(Объект.Адрес, "");
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗначенияПолейКонтактнойИнформацииСервер(Знач Представление, Знач ВидКонтактнойИнформации, Знач Комментарий = Неопределено)
	
	// Создаем новый экземпляр по представлению
	Результат = КонтактнаяИнформацияСлужебный.ПарсингКонтактнойИнформацииXML(Представление, ВидКонтактнойИнформации);
	
	// Добавляем в него комментарий, если есть
	Если Комментарий<>Неопределено Тогда
		УправлениеКонтактнойИнформацией.КомментарийКонтактнойИнформации(Результат, Комментарий);
	КонецЕсли;
	
	Возврат Результат;
КонецФункции


&НаКлиенте
Процедура АдресПриИзменении(Элемент)
	Текст = Элемент.ТекстРедактирования;
	Если ПустаяСтрока(Текст) Тогда
		Объект.Адрес = "";
		Объект.ДанныеАдреса        = "";
		Возврат;
	КонецЕсли;
		
	// Формируем внутренние значения полей по тексту и параметрам формирования из
	// реквизита ВидКонтактнойИнформацииАдресаДоставки
	Объект.Адрес = Текст;
	Объект.ДанныеАдреса = ЗначенияПолейКонтактнойИнформацииСервер(Текст, ВидКонтактнойИнформацииАдреса);
КонецПроцедуры


&НаКлиенте
Процедура АдресОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если ТипЗнч(ВыбранноеЗначение)<>Тип("Структура") Тогда
		// Отказ от выбора, данные неизменны
		Возврат;
	КонецЕсли;
	
	Объект.Адрес = ВыбранноеЗначение.Представление;
	Объект.ДанныеАдреса        = ВыбранноеЗначение.КонтактнаяИнформация;
КонецПроцедуры


&НаКлиенте
Процедура АдресОчистка(Элемент, СтандартнаяОбработка)
	Объект.Адрес = "";
	Объект.ДанныеАдреса        = "";
КонецПроцедуры

&НаКлиенте
Процедура ТипДоговораПриИзменении(Элемент)
	РассчитатьСуммуДоговора();
КонецПроцедуры

&НАСервере
Процедура УстановитьДатуОкончанияДоговораРЕализации() 
	Если Объект.ТипДоговора=Перечисления.ТипыДоговоров.Аренда Тогда
		Возврат;
	КонецЕсли;
	
	Объект.ДатаКонца=ДобавитьМесяц(Объект.ДатаНачала,60)-1;
КонецПроцедуры 

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	УстановитьДатуОкончанияДоговораРеализации();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьГрафик(Команда)
	
	ЗаполнитьГрафикПлатежей();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьГрафикПлатежей()
	
	Аренда.ЗаполнитьГрафикПлатежей(Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьСуммуИтого(ДанныеСтроки)
	
	ДанныеСтроки.СуммаВсего = ДанныеСтроки.СуммаОсновнойДолг + ДанныеСтроки.СуммаПроценты;
	
КонецПроцедуры

&НаКлиенте
Процедура ГрафикСуммаОсновнойДолгПриИзменении(Элемент)
	
	ПересчитатьСуммуИтого(Элементы.График.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ГрафикСуммаПроцентыПриИзменении(Элемент)
	
	ПересчитатьСуммуИтого(Элементы.График.ТекущиеДанные);
	
КонецПроцедуры
