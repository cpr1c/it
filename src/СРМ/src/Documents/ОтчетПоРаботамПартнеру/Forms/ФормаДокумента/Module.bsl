

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
    
    ПрочитатьДополнительныхИсполнителейВСтрокиЗадач(ТекущийОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры


&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Для Каждого Стр Из Объект.Задачи Цикл
		Стр.КлючСтроки = Строка(Новый УникальныйИдентификатор);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	ТекущийОбъект.ДополнительныеИсполнители.Очистить();
	
	Для Каждого Стр Из Объект.Задачи Цикл
		Для Каждого СтрДоп Из Стр.ДополнительныеИсполнители Цикл
			НоваяСтрока = ТекущийОбъект.ДополнительныеИсполнители.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрДоп);
			НоваяСтрока.КлючСтроки = Стр.КлючСтроки;
		КонецЦикла;			
	
	КонецЦикла;
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы


&НаКлиенте
Процедура РасчетныйПериодПриИзменении(Элемент)
	Объект.РасчетныйПериод = НачалоМесяца(Объект.РасчетныйПериод);
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область ОбработчикиКомандФормы


&НаКлиенте
Процедура УдалитьВыделенныеСтроки(Команда)
	ВыделенныеСтроки = Новый Массив;
	Для Каждого Идентификатор Из Элементы.Задачи.ВыделенныеСтроки Цикл
		ВыделенныеСтроки.Добавить(Объект.Задачи.НайтиПоИдентификатору(Идентификатор));
	КонецЦикла;
	
	Для Каждого Стр Из ВыделенныеСтроки Цикл
		Объект.Задачи.Удалить(Стр);
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПрочитатьДополнительныхИсполнителейВСтрокиЗадач(ТекущийОбъект)
	Для Каждого Стр Из Объект.Задачи Цикл
		Стр.ДополнительныеИсполнители.Очистить();
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("КлючСтроки", Стр.КлючСтроки);
		
		СтрокиТЧ = ТекущийОбъект.ДополнительныеИсполнители.НайтиСтроки(СтруктураПоиска);
		
		Для Каждого СтрДоп ИЗ СтрокиТЧ Цикл
			НоваяСтрока = Стр.ДополнительныеИсполнители.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрДоп);
		КонецЦикла;		
	КонецЦикла;
КонецПроцедуры

#КонецОбласти