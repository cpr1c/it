////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА


////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизитов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверяется также правильность заполнения реквизитов ссылочных полей документа.
// Проверка выполняется по объекту и по выборке из результата запроса по шапке.
//
// Параметры: 
//  СтруктураШапкиДокумента - структура, содержащая реквизиты шапки документа и результаты запроса по шапке
//  Отказ                   - флаг отказа в проведении,
//  Заголовок               - строка, заголовок сообщения об ошибке проведения.
//
Процедура ПроверитьЗаполнениеШапки( Отказ)
	Если СуммаДокумента<>РасшифровкаПлатежа.Итог("Сумма") Тогда
		Сообщить("Сумма документа не совпадает с расшифровкой");
		Отказ=истина;
	КонецЕсли;
КонецПроцедуры // ПроверитьЗаполнениеШапки()

// По результату запроса по шапке документа формируем движения по регистрам.
//
// Параметры: 
//  РежимПроведения           - режим проведения документа (оперативный или неоперативный),
//  СтруктураШапкиДокумента   - структура, содержащая реквизиты шапки документа и результаты запроса по шапке
//  ТаблицаПоСуммамДолга          - таблица значений, содержащая данные для проведения и проверки ТЧ Товары
//  Отказ                     - флаг отказа в проведении,
//  Заголовок                 - строка, заголовок сообщения об ошибке проведения.
//
Процедура ДвиженияПоРегистрам(РежимПроведения,  Отказ)
	
	// регистр ВзаиморасчетыСКонтрагентами Приход
	Движения.ВзаиморасчетыСКонтрагентами.Записывать = Истина;
	Движения.ВзаиморасчетыСКонтрагентами.Очистить();
	
	Для Каждого ТекСтрокаРасшифровкаПлатежа Из РасшифровкаПлатежа Цикл
		Движение = Движения.ВзаиморасчетыСКонтрагентами.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.ДоговорКонтрагента = ТекСтрокаРасшифровкаПлатежа.ДоговорКонтрагента;
		Движение.ТипВзаиморасчета = ТекСтрокаРасшифровкаПлатежа.ТипВзаиморасчета;
		Движение.КБК = ТекСтрокаРасшифровкаПлатежа.КБК;
		Движение.Контрагент = Контрагент;
		Движение.Сумма = ТекСтрокаРасшифровкаПлатежа.Сумма;
	КонецЦикла;

	// регистр _ГК_РасчетыПоПретензиям Приход
	Движения._ГК_РасчетыПоПретензиям.Записывать = Истина;
	Движения._ГК_РасчетыПоПретензиям.Очистить();
	
	Для Каждого ТекСтрокаРасшифровкаПлатежа Из РасшифровкаПлатежа Цикл
		Если ЗначениеЗаполнено(ТекСтрокаРасшифровкаПлатежа.Претензия) Тогда
			Движение = Движения._ГК_РасчетыПоПретензиям.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.ДоговорКонтрагента = ТекСтрокаРасшифровкаПлатежа.ДоговорКонтрагента;
			Движение.ТипВзаиморасчета = ТекСтрокаРасшифровкаПлатежа.ТипВзаиморасчета;
			Движение.Претензия = ТекСтрокаРасшифровкаПлатежа.Претензия;
			Движение.Сумма = ТекСтрокаРасшифровкаПлатежа.Сумма;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры // ДвиженияПоРегистрам()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ДанныеЗаполнения=Неопределено Тогда
		_ДемоСтандартныеПодсистемы.ПриВводеНовогоЗаполнитьОрганизацию(ЭтотОбъект);
		// 29.04.2015 ***  *** Борисов Проект "ГИС ГМП" (начало)
		СтатусПлательщика = "08";
		ТипОснования = "00";
		// 29.04.2015 ***  *** Борисов Проект "ГИС ГМП" (окончание)
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	ПроверитьЗаполнениеШапки(Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ДвиженияПоРегистрам(РежимПроведения, Отказ);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	РабДата = КонецДня(ОбщегоНазначения.ТекущаяДатаПользователя());

	Для Каждого Стр Из РасшифровкаПлатежа Цикл
		Если ЗначениеЗаполнено(Стр.ДоговорКонтрагента) Тогда
			ДействующийКБК = Аренда.ПолучитьСтруктуруДАнныхДоговора(РабДата, Стр.ДоговорКонтрагента).КБК;
			Если ДействующийКБК <> Стр.КБК Тогда
				Стр.КБК = ДействующийКБК;
				Сообщить("По договору " + Стр.ДоговорКонтрагента + " изменился КБК. В строке " + Стр.НомерСтроки + " установлен новый КБК.");
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры


