
&НаКлиенте
Процедура РасшифровкаПлатежаПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	ОБъект.СуммаДокумента=ОБъект.РасшифровкаПлатежа.Итог("Сумма");
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ЗаполнитьТаблицуНеоплаченныхПретензий();
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	ЗаполнитьТаблицуНеоплаченныхПретензий();
	Объект.НазначениеПлатежа = "Оплата по договору №";
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	ЗаполнитьТаблицуНеоплаченныхПретензий();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗаполнитьТаблицуНеоплаченныхПретензий();
	Если ЗначениеЗаполнено(Объект.РасшифровкаПлатежа) Тогда
		ДоговорДляПоискаКонтрагента = Объект.РасшифровкаПлатежа[0].ДоговорКонтрагента;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуНеоплаченныхПретензий()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДоговораСрезПоследних.Договор
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	РегистрСведений.ДанныеДоговора.СрезПоследних(&Дата, ) КАК ДанныеДоговораСрезПоследних
	|ГДЕ
	|	ДанныеДоговораСрезПоследних.Организация = &Организация
	|	И ДанныеДоговораСрезПоследних.Контрагент = &Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	_ГК_РасчетыПоПретензиямОстатки.ДоговорКонтрагента,
	|	_ГК_РасчетыПоПретензиямОстатки.Претензия,
	|	СУММА(ВЫБОР
	|			КОГДА _ГК_РасчетыПоПретензиямОстатки.ТипВзаиморасчета = ЗНАЧЕНИЕ(Перечисление.ТипыВзаиморасчетов.ОсновнойДолг)
	|				ТОГДА _ГК_РасчетыПоПретензиямОстатки.СуммаОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Сумма,
	|	СУММА(ВЫБОР
	|			КОГДА _ГК_РасчетыПоПретензиямОстатки.ТипВзаиморасчета = ЗНАЧЕНИЕ(Перечисление.ТипыВзаиморасчетов.Проценты)
	|				ТОГДА _ГК_РасчетыПоПретензиямОстатки.СуммаОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаПроцент
	|ИЗ
	|	РегистрНакопления._ГК_РасчетыПоПретензиям.Остатки(
	|			&Дата,
	|			ДоговорКонтрагента В
	|				(ВЫБРАТЬ
	|					ВТ.Договор
	|				ИЗ
	|					ВТ КАК ВТ)) КАК _ГК_РасчетыПоПретензиямОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	_ГК_РасчетыПоПретензиямОстатки.ДоговорКонтрагента,
	|	_ГК_РасчетыПоПретензиямОстатки.Претензия";
	Запрос.УстановитьПараметр("Дата", Объект.Дата); // надо получить остатки до проведения документа
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Контрагент", Объект.Контрагент);
	
	НеоплаченныеПретензии.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры


&НаКлиенте
Процедура Подбор(Команда)
	
	Если Объект.Проведен Тогда
		ТекстВопроса = "Для подбора остатков задолженности необходимо отменить проведение текущего документа. Выполнить отмену проведения?";
		ПоказатьВопрос(Новый ОписаниеОповещения("ПодборЗавершение", ЭтотОбъект), ТекстВопроса, РежимДиалогаВопрос.ДаНет);
        Возврат;
	КонецЕсли;
	
	ПодборПоОстаткам();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
     	Возврат;   
    КонецЕсли;
	
	Если Не Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.ОтменаПроведения)) Тогда
		Возврат;
	КонецЕсли;
		
    ПодборПоОстаткам();

КонецПроцедуры

&НаКлиенте
Процедура ПодборПоОстаткам()
    
    Перем АдресПлатежейВХранилище, ПараметрыПодбора;
    
    АдресПлатежейВХранилище = ПоместитьРасшифровкуПлатежаВХранилище();
    ПараметрыПодбора = Новый Структура("
    |АдресПлатежейВХранилище, 
    |Организация, 
    |Контрагент,
    |СуммаДокумента,
    |ДатаДокумента",
    АдресПлатежейВХранилище,
    Объект.Организация, 
    Объект.Контрагент,
    Объект.СуммаДокумента,
    КонецДня(Объект.Дата));
    ОткрытьФорму(
    "Документ.Оплата.Форма.ПодборПоРасчетам",
    ПараметрыПодбора, 
    ЭтаФорма);

КонецПроцедуры


&НаКлиенте
Процедура ОбработкаВыбора(РезультатВыбора, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Документ.Оплата.Форма.ПодборПоРасчетам" Тогда
		
		ПолучитьРасшифровкуПлатежаИзХранилища(РезультатВыбора.АдресПлатежейВХранилище);
		
	КонецЕсли;
	
	Если Окно <> Неопределено Тогда
		Окно.Активизировать();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПоместитьРасшифровкуПлатежаВХранилище()
	
	АдресПлатежейВХранилище = ПоместитьВоВременноеХранилище(
		Объект.РасшифровкаПлатежа.Выгрузить(),
		УникальныйИдентификатор);
	
	Возврат АдресПлатежейВХранилище;
	
КонецФункции

&НаСервере
Процедура ПолучитьРасшифровкуПлатежаИзХранилища(АдресПлатежейВХранилище)

	Объект.РасшифровкаПлатежа.Загрузить(ПолучитьИзВременногоХранилища(АдресПлатежейВХранилище));
	
КонецПроцедуры

&НаКлиенте
Процедура НеоплаченныеПретензииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя <> "НеоплаченныеПретензииСумма" И Поле.Имя <> "НеоплаченныеПретензииСуммаПроцент" Тогда
		Сообщить("Щелкните по колонке ""Сумма"" или ""Сумма процент""");
		Возврат;
	КонецЕсли;
	
	Модифицированность = Истина;
	
	СтрокаПретензий = Элемент.ТекущиеДанные;
	
	СуммаОплаты = 0;
	ПоказатьВводЧисла(Новый ОписаниеОповещения("НеоплаченныеПретензииВыборЗавершение", ЭтотОбъект, Новый Структура("ИмяПоля, СтрокаПретензий, СуммаОплаты", Поле.Имя, СтрокаПретензий, СуммаОплаты)), СуммаОплаты, "Введите сумму оплаты претензиии", 15, 2);
	
КонецПроцедуры

&НаКлиенте
Процедура НеоплаченныеПретензииВыборЗавершение(Число, ДополнительныеПараметры) Экспорт
    
    ИмяПоля = ДополнительныеПараметры.ИмяПоля;
    СтрокаПретензий = ДополнительныеПараметры.СтрокаПретензий;
    СуммаОплаты = ?(Число = Неопределено, ДополнительныеПараметры.СуммаОплаты, Число);
    
    Если (Число <> Неопределено) Тогда
        Если ИмяПоля = "НеоплаченныеПретензииСумма" Тогда
            ЗаполнитьСтрокуРасшифровкиПоВыбраннойПретензии(СтрокаПретензий, ПредопределенноеЗначение("Перечисление.ТипыВзаиморасчетов.ОсновнойДолг"), СуммаОплаты);	
        ИначеЕсли ИмяПоля = "НеоплаченныеПретензииСуммаПроцент" Тогда
            ЗаполнитьСтрокуРасшифровкиПоВыбраннойПретензии(СтрокаПретензий, ПредопределенноеЗначение("Перечисление.ТипыВзаиморасчетов.Проценты"), СуммаОплаты);	
        Иначе
            Сообщить("Щелкните по колонке ""Сумма"" или ""Сумма процент""");	
        КонецЕсли;
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСтрокуРасшифровкиПоВыбраннойПретензии(СтрокаПретензий, ТипВзаиморасчета, Знач Сумма)
	
	СтруктураОтбора = Новый Структура("ДоговорКонтрагента, ТипВзаиморасчета");
	СтруктураОтбора.ДоговорКонтрагента = СтрокаПретензий.ДоговорКонтрагента;
	СтруктураОтбора.ТипВзаиморасчета = ТипВзаиморасчета;
	
	СтруктураДоговора = Аренда.ПолучитьСтруктуруДАнныхДоговора(КонецДня(Объект.Дата),СтрокаПретензий.ДоговорКонтрагента);
	
	СтрокиРасшифровкиПлатежа = Объект.РасшифровкаПлатежа.НайтиСтроки(СтруктураОтбора);
	
	Если СтрокиРасшифровкиПлатежа.Количество() = 0 Тогда
		
		СтрокаРасшифрокиПлатежа = Объект.РасшифровкаПлатежа.Добавить();
		СтрокаРасшифрокиПлатежа.ДоговорКонтрагента = СтрокаПретензий.ДоговорКонтрагента;
		СтрокаРасшифрокиПлатежа.Претензия = СтрокаПретензий.Претензия;
		СтрокаРасшифрокиПлатежа.ТипВзаиморасчета = ТипВзаиморасчета;
		СтрокаРасшифрокиПлатежа.КБК = СтруктураДоговора.КБК;
		СтрокаРасшифрокиПлатежа.Сумма = Сумма;
		
	Иначе
		
		СтруктураОтбора.Вставить("Претензия", СтрокаПретензий.Претензия);
		
		Если Объект.РасшифровкаПлатежа.НайтиСтроки(СтруктураОтбора).Количество() <> 0 Тогда
			Сообщить("Претензия " + СтрокаПретензий.Претензия + " уже выбрана.");
			Возврат;
		КонецЕсли;
		
		// обойдем строки по порядку и запишем претензию в первую подходящую
		Для Каждого СтрокаРасшифрокиПлатежа Из СтрокиРасшифровкиПлатежа Цикл
			
			Если Сумма = 0 Тогда
				Прервать;
			КонецЕсли;
			
			Если СтрокаРасшифрокиПлатежа.Сумма <= Сумма Тогда
				СтрокаРасшифрокиПлатежа.Претензия = СтрокаПретензий.Претензия;
				Сумма = Сумма - СтрокаРасшифрокиПлатежа.Сумма;
			Иначе
				// надо разделить строку
				НоваяСтрокаРасшифровки = Объект.РасшифровкаПлатежа.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаРасшифровки, СтрокаРасшифрокиПлатежа);
				НоваяСтрокаРасшифровки.Сумма = СтрокаРасшифрокиПлатежа.Сумма - Сумма;
				СтрокаРасшифрокиПлатежа.Сумма = Сумма;
				СтрокаРасшифрокиПлатежа.Претензия = СтрокаПретензий.Претензия;
				Сумма = 0;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаДоговорКонтрагентаПриИзменении(Элемент)
	
	ПриИзмененииДоговора(Элементы.РасшифровкаПлатежа.ТекущиеДанные.ПолучитьИдентификатор());
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииДоговора(ИдентификаторСтроки)
	
	СтрокаТЧ = Объект.РасшифровкаПлатежа.НайтиПоИдентификатору(ИдентификаторСтроки);	
	
	Договор = СтрокаТЧ.ДоговорКонтрагента;
	
	Если Не ЗначениеЗаполнено(Договор) Тогда
		СтрокаТЧ.Претензия = Документы.Претензия.ПустаяСсылка();
		СтрокаТЧ.КБК = Справочники.КБК.ПустаяСсылка();
		Возврат;
	КонецЕсли;
	
	СтруктураДоговора = Аренда.ПолучитьСтруктуруДАнныхДоговора(КонецДня(Объект.Дата), Договор);
	
	СтрокаТЧ.КБК = СтруктураДоговора.КБК;
	
	Если ЗначениеЗаполнено(СтрокаТЧ.Претензия) И СтрокаТЧ.Претензия.Договор <> Договор Тогда
		СтрокаТЧ.Претензия = Документы.Претензия.ПустаяСсылка();
	КонецЕсли;
	
	Объект.НазначениеПлатежа = "Оплата по договору № " + СтруктураДоговора.НомерДоговора;

КонецПроцедуры

&НаКлиенте
Процедура ДоговорДляПоискаКонтрагентаПриИзменении(Элемент)
	ДоговорДляПоискаКонтрагентаПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ДоговорДляПоискаКонтрагентаПриИзмененииНаСервере()
	
	СтруктураДоговора = Аренда.ПолучитьСтруктуруДАнныхДоговора(КонецДня(Объект.Дата), ДоговорДляПоискаКонтрагента);
	
	Объект.Контрагент = СтруктураДоговора.Контрагент;
	Объект.Плательщик = СтруктураДоговора.Контрагент;
	
	ЗаполнитьТаблицуНеоплаченныхПретензий();
	
	Для Каждого СтрокаПлатежа Из Объект.РасшифровкаПлатежа Цикл
		Если ЗначениеЗаполнено(СтрокаПлатежа.ДоговорКонтрагента) Тогда
			СтруктураДоговора = Аренда.ПолучитьСтруктуруДАнныхДоговора(КонецДня(Объект.Дата), СтрокаПлатежа.ДоговорКонтрагента);
			Если СтруктураДоговора.Контрагент <> Объект.Контрагент Тогда
				СтрокаПлатежа.ДоговорКонтрагента = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
				СтрокаПлатежа.КБК = Справочники.КБК.ПустаяСсылка();
				СтрокаПлатежа.Претензия = Документы.Претензия.ПустаяСсылка();
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры



