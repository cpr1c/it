&НаКлиенте
Процедура ОбновитьСписокПодключений()
	
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(СписокПодключений,"Владелец");
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(СписокПодключений,"Владелец.Партнер");
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(СписокПодключений,"Владелец.Местоположение");
	
	ТекСтрока=Элементы.Список.ТекущаяСтрока;
	// 02.07.2020 *** ЦПР *** Борисов Проект "Поддержка" Задача №  (начало)
	//Если ТекСтрока=Неопределено Тогда
	//	ТекСтрока=ПредопределенноеЗначение("Справочник.ЦПР_ТочкиПодключения.ПустаяСсылка");
	//	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокПодключений,"Владелец",ТекСтрока,ВидСравненияКомпоновкиДанных.Равно,,Истина,РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	//ИначеЕсли ТипЗнч(ТекСтрока)=Тип("СтрокаГруппировкиДинамическогоСписка") Тогда	
	//	Если ТекСтрока.ИмяГруппировки="Партнер" Тогда
	//		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокПодключений,"Владелец.Партнер",ТекСтрока.Ключ,ВидСравненияКомпоновкиДанных.Равно,,Истина,РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	//	ИначеЕсли ТекСтрока.ИмяГруппировки="Местоположение"	Тогда
	//		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокПодключений,"Владелец.Местоположение",ТекСтрока.Ключ,ВидСравненияКомпоновкиДанных.Равно,,Истина,РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	//	Иначе
	//		ТекСтрока=ПредопределенноеЗначение("Справочник.ЦПР_ТочкиПодключения.ПустаяСсылка");
	//		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокПодключений,"Владелец",ТекСтрока,ВидСравненияКомпоновкиДанных.Равно,,Истина,РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	//	КонецЕсли;
	//Иначе
	//	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокПодключений,"Владелец",ТекСтрока,ВидСравненияКомпоновкиДанных.Равно,,Истина,РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	//КонецЕсли;
	ИмяПоляОтбора = "Владелец";
	ЗначениеОтбора = ПредопределенноеЗначение("Справочник.ЦПР_ТочкиПодключения.ПустаяСсылка");
	
	Если ТекСтрока <> Неопределено Тогда
		
		Если ТипЗнч(ТекСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда	
			
			Если ТекСтрока.ИмяГруппировки = "Партнер" Тогда
				ИмяПоляОтбора = "Владелец.Партнер";
				ЗначениеОтбора = ТекСтрока.Ключ;
			ИначеЕсли ТекСтрока.ИмяГруппировки = "Местоположение" Тогда
				Если ЗначениеЗаполнено(ТекСтрока.Ключ) Тогда
					ИмяПоляОтбора = "Владелец.Местоположение";
					ЗначениеОтбора = ТекСтрока.Ключ;
				Иначе 
					ИмяПоляОтбора = "Владелец.Партнер";
					ЗначениеОтбора = ТекСтрока.РодительскаяГруппировка.Ключ;
				КонецЕсли;	
			КонецЕсли;
			
		Иначе
			
			ЗначениеОтбора = ТекСтрока;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокПодключений,ИмяПоляОтбора,ЗначениеОтбора,ВидСравненияКомпоновкиДанных.Равно,,Истина,РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	// 02.07.2020 *** ЦПР *** Борисов Проект "Поддержка" Задача №  (окончание)
	
КонецПроцедуры

&НаКлиенте 
Процедура ОбновитьСписокУчетныхДанных()
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(СписокУчетныхДанных,"Владелец");
	
	ТекСтрока=Элементы.СписокПодключений.ТекущаяСтрока;
	Если ТекСтрока=Неопределено Тогда
		ТекСтрока=ПредопределенноеЗначение("Справочник.ЦПР_Подключения.ПустаяСсылка");
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокУчетныхДанных,"ТочкаПодключения",ТекСтрока,ВидСравненияКомпоновкиДанных.Равно,,Истина,РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	
	ТекДанные=Элементы.СписокПодключений.ТекущиеДанные;
	Если ТекДанные=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекДанные.ВидПодключенияБезЛогина Тогда
		Элементы.ГруппаСтраницыУчетныеДанные.ТекущаяСтраница=Элементы.ГруппаУчетныеДанныеБезЛогина;
	Иначе
		Элементы.ГруппаСтраницыУчетныеДанные.ТекущаяСтраница=Элементы.ГруппаМножественныеУчетныДанные;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	ПодключитьОбработчикОжидания("ОбновитьСписокПодключений",0.1,Истина);
КонецПроцедуры

&НаКлиенте
Процедура СписокПодключенийПриАктивизацииСтроки(Элемент)
	ПодключитьОбработчикОжидания("ОбновитьСписокУчетныхДанных",0.1,Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбновитьСписокПодключений();
	ОбновитьСписокУчетныхДанных();
КонецПроцедуры

&НаСервере
Функция ПолучитьУчетныеДанныеПодключенияДляПодключенияБезЛогина(Подключение)
	СтруктураОтбора=Новый Структура;
	СтруктураОтбора.Вставить("ТочкаПодключения",Подключение);
	СтруктураОтбора.Вставить("Логин","");
	
	СтруктураВозврата= РегистрыСведений.ЦПР_УчетныеДанныеПодключений.Получить(СтруктураОтбора);
	СтруктураВозврата.Вставить("ТочкаПодключения",Подключение);
	СтруктураВозврата.Вставить("Логин","");
	
	Возврат СтруктураВозврата;
КонецФункции

&НаКлиенте
Процедура Подключиться(Команда)
	ТекДанныеПодключений=Элементы.СписокПодключений.ТекущиеДанные;
	Если ТекДанныеПодключений=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекДанныеПодключений.ВидПодключенияБезЛогина Тогда
		УчетныеДанныеСтруктура=ПолучитьУчетныеДанныеПодключенияДляПодключенияБезЛогина(Элементы.СписокПодключений.ТекущаяСтрока);
		
		ТочкаПодключений=УчетныеДанныеСтруктура.ТочкаПодключения;
		Логин=УчетныеДанныеСтруктура.Логин;
		Пароль=УчетныеДанныеСтруктура.Пароль;
	Иначе
		ТекДанные=Элементы.СписокУчетныхДанных.ТекущиеДанные;
		Если ТекДанные=Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		ТочкаПодключений=ТекДанные.ТочкаПодключения;
		Логин=ТекДанные.Логин;
		Пароль=ТекДанные.Пароль;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ТочкаПодключений) Тогда
		Возврат;
	КонецЕсли;
	
	ЦПР_ПодключенияКлиент.ВыполнитьПодключение(ТочкаПодключений,Логин,Пароль);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УстановитьНастройкиСпискаТочекПодключений();
	УстановитьУсловноеОформление();
	
	УстановитьВыводАрхиваТочекПодключения(Ложь);
	УстановитьВыводАрхиваПодключений(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "Запись_УчетныеДанныеПодключений" Тогда
		УстановитьУсловноеОформление();
	ИначеЕсли ИмяСобытия="Запись_ИзменениеАрхивности" Тогда
		элементы.Список.Обновить();
		Элементы.СписокПодключений.Обновить();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	Справочники.ЦПР_ТочкиПодключения.УстановитьОформлениеСписка(Список);
	Справочники.ЦПР_Подключения.УстановитьОформлениеСписка(СписокПодключений);
	РегистрыСведений.ЦПР_УчетныеДанныеПодключений.УстановитьОформлениеСписка(СписокУчетныхДанных);
КонецПроцедуры

&НаСервере
Процедура УстановитьНастройкиСпискаТочекПодключений()
	//Настраиваем группировку правильную
	Список.Группировка.Элементы.Очистить();
	
	НоваяГруппировка=Список.Группировка.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
	НоваяГруппировка.Использование=Истина;
	НоваяГруппировка.Поле=Новый ПолеКомпоновкиДанных("Партнер");
	НоваяГруппировка.ТипГруппировки=ТипГруппировкиКомпоновкиДанных.Элементы;
	
	НоваяГруппировка=Список.Группировка.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
	НоваяГруппировка.Использование=Истина;
	НоваяГруппировка.Поле=Новый ПолеКомпоновкиДанных("Местоположение");
	НоваяГруппировка.ТипГруппировки=ТипГруппировкиКомпоновкиДанных.Иерархия;
	
	
	ВариантНачальногоОтображенияСпискаТочекПодключений=ЦПР_ПодключенияСервер.ПолучитьВариантНачальногоОтображенияСписка();
	Если ВариантНачальногоОтображенияСпискаТочекПодключений=Перечисления.ЦПР_ВариантыНачальногоОтображенияДерева.НеРаскрывать Тогда
		Элементы.Список.НачальноеОтображениеДерева=НачальноеОтображениеДерева.НеРаскрывать;
	ИначеЕсли ВариантНачальногоОтображенияСпискаТочекПодключений=Перечисления.ЦПР_ВариантыНачальногоОтображенияДерева.РаскрыватьВсеУровни Тогда
		Элементы.Список.НачальноеОтображениеДерева=НачальноеОтображениеДерева.РаскрыватьВсеУровни;
	Иначе
		Элементы.Список.НачальноеОтображениеДерева=НачальноеОтображениеДерева.РаскрыватьВерхнийУровень;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СохранитьВФайл(Команда)
	ТекДанные=Элементы.СписокУчетныхДанных.ТекущиеДанные;
	Если ТекДанные=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЦПР_ПодключенияКлиент.ВыполнитьСохранение(ТекДанные.ТочкаПодключения,ТекДанные.Логин,ТекДанные.Пароль);
КонецПроцедуры

&НаСервере
Процедура УстановитьВыводАрхиваТочекПодключения(Показывать)
	ПоказыватьАрхивТочекПодключения=Показывать;
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Список,"Архив");
	
	Если Не ПоказыватьАрхивТочекПодключения Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список,"Архив",Ложь);
	КонецЕсли;
	
	Элементы.СписокПоказыватьАрхивТочекПодключения.Пометка=ПоказыватьАрхивТочекПодключения;
КонецПроцедуры

&НаСервере
Процедура УстановитьВыводАрхиваПодключений(Показывать)
	ПоказыватьАрхивПодключений=Показывать;

	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(СписокПодключений,"Архив");
	
	Если Не ПоказыватьАрхивПодключений Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокПодключений,"Архив",Ложь);
	КонецЕсли;
	
	Элементы.СписокПодключенийПоказыватьАрхивПодключений.Пометка=ПоказыватьАрхивПодключений;
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьАрхивТочекПодключения(Команда)
	УстановитьВыводАрхиваТочекПодключения(Не ПоказыватьАрхивТочекПодключения);
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьАрхивПодключений(Команда)
	УстановитьВыводАрхиваПодключений(Не ПоказыватьАрхивПодключений);
КонецПроцедуры
