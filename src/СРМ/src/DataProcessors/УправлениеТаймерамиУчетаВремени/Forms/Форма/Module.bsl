
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ТекущийПредмет", ТекущийПредмет);
	
	ЗаполнитьТекущиеТаймеры();
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПодключитьОбработчикОжидания("ОбновитьПродолжительностьАвтоматически", 60);
	
	// запустим учет времени по текущему предмету с последнего заведенного таймера
	ТаймерыПоПредмету = Объект.Таймеры.НайтиСтроки(Новый Структура("Предмет", ТекущийПредмет));
	Для Каждого ДанныеТаймера Из ТаймерыПоПредмету Цикл
		Если Не ЗначениеЗаполнено(ДанныеТаймера.ДатаНачала) ИЛИ ЗначениеЗаполнено(ДанныеТаймера.ДатаОкончания) Тогда
			Ид = СтрЗаменить(ДанныеТаймера.Идентификатор, "-", "_");
			Комментарий = "";
			ДополнительныеПараметры = Новый Структура("Действие, Ид, Комментарий", "Старт", Ид, Комментарий);
			Оповещение = Новый ОписаниеОповещения("ОбработатьКомандуУчетаВремениПослеДиалога", ЭтотОбъект, ДополнительныеПараметры);
			ВыполнитьОбработкуОповещения(Оповещение, "");
			Прервать;
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ЗафиксированыТрудозатратыПоТаймеру" И ЗначениеЗаполнено(Параметр) Тогда
		Идентификатор = Параметр;
		Ид = СтрЗаменить(Идентификатор, "-", "_");
		Если УчетВремениВызовСервера.УдалитьТаймер(Идентификатор) Тогда
			СтрокиТаймера = Объект.Таймеры.НайтиСтроки(Новый Структура("Идентификатор", Идентификатор));
			Для Каждого СтрокаТаймера Из СтрокиТаймера Цикл
				Объект.Таймеры.Удалить(СтрокаТаймера);
			КонецЦикла;
			УдалитьЭлементыТаймера(Ид);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РеквизитТаймераПриИзменении(Элемент)
	
	ИмяЭлемента = Элемент.Имя;
	
	Поз = Найти(ИмяЭлемента, "_");
	ИмяРеквизита = Лев(ИмяЭлемента, Поз - 1);
	Ид = Сред(ИмяЭлемента, Поз + 1);
	Идентификатор = СтрЗаменить(Ид, "_", "-");
	ЗначениеРеквизита = ЭтотОбъект[Элемент.Имя];
	
	// перенесем новое значение в таблицу данных таймеров, чтобы дополнительно не обращаться к реквизитам формы
	СтрокиТаймера = Объект.Таймеры.НайтиСтроки(Новый Структура("Идентификатор", Идентификатор));
	Для Каждого Стр Из СтрокиТаймера Цикл
		Стр[ИмяРеквизита] = ЗначениеРеквизита;	
	КонецЦикла;
	
	ПараметрыУчетаВремени = Новый Структура(ИмяРеквизита, ЗначениеРеквизита);
	УчетВремениВызовСервера.ОтразитьИзменениеТаймераУчетаВремени(Идентификатор, ПараметрыУчетаВремени);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_ОбработатьКомандуУчетаВремени(Команда)
	
	ИмяКоманды = Команда.Имя;
	
	Поз = Найти(ИмяКоманды, "_");
	Действие = Лев(ИмяКоманды, Поз - 1);
	Ид = Сред(ИмяКоманды, Поз + 1);
	
	Комментарий = "";
	ДополнительныеПараметры = Новый Структура("Действие, Ид, Комментарий", Действие, Ид, Комментарий);
	Оповещение = Новый ОписаниеОповещения("ОбработатьКомандуУчетаВремениПослеДиалога", ЭтотОбъект, ДополнительныеПараметры);
	
	Если Действие = "Отмена" Тогда
		ПоказатьВопрос(Оповещение, "Удалить выбранный таймер безвозвратно?", РежимДиалогаВопрос.ДаНет);
	ИначеЕсли Действие = "ОткрытьПредмет" Тогда
		ОткрытьПредметТаймера(Ид);
	Иначе
		ВыполнитьОбработкуОповещения(Оповещение, "");
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьКомандуУчетаВремениПослеДиалога(РезультатДиалога, ДополнительныеПараметры) Экспорт
	
	Если РезультатДиалога = Неопределено ИЛИ РезультатДиалога = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	ТекДата = ТекущаяДата();
	
	Ид = ДополнительныеПараметры.Ид;
	Действие = ДополнительныеПараметры.Действие;
	
	Идентификатор = СтрЗаменить(Ид, "_", "-");
	
	СтрокиТаймера = Объект.Таймеры.НайтиСтроки(Новый Структура("Идентификатор", Идентификатор));
	
	ПараметрыУчетаВремени = Новый Структура("Предмет,ДатаНачала,ДатаОкончания,Часов,СчетчикЗапусков,Комментарий,ВидДеятельности");
	
	Для Каждого ДанныеТаймера Из СтрокиТаймера Цикл
		
		Если Действие = "Старт" Тогда
			
			ЗафиксироватьДругиеЗапущенныеТаймеры(ДанныеТаймера);
			
			ДанныеТаймера.ДатаНачала = ТекущаяДата();
			ДанныеТаймера.ДатаОкончания = '00010101000000';
			ДанныеТаймера.СчетчикЗапусков = ДанныеТаймера.СчетчикЗапусков + 1;
			ЗаполнитьЗначенияСвойств(ПараметрыУчетаВремени, ДанныеТаймера);
			УчетВремениВызовСервера.ОтразитьИзменениеТаймераУчетаВремени(Идентификатор, ПараметрыУчетаВремени);
			
		КонецЕсли;
		
		Если Действие = "Стоп" ИЛИ Действие = "Зафиксировать" Тогда
			
			ДанныеТаймера.ДатаОкончания = ТекущаяДата();
			ДанныеТаймера.Часов = ДанныеТаймера.Часов + УчетВремениКлиентСервер.РазностьДатВЧасах(ДанныеТаймера.ДатаНачала, ДанныеТаймера.ДатаОкончания);
			ЗаполнитьЗначенияСвойств(ПараметрыУчетаВремени, ДанныеТаймера);
			УчетВремениВызовСервера.ОтразитьИзменениеТаймераУчетаВремени(Идентификатор, ПараметрыУчетаВремени);
			
		КонецЕсли;
		
		Если Действие = "Зафиксировать" Тогда
			
			ЗначенияЗаполнения  = Новый Структура("Предмет,Часов,Комментарий,ВидДеятельности");
			ЗаполнитьЗначенияСвойств(ЗначенияЗаполнения, ПараметрыУчетаВремени);
			ПараметрыФормы = Новый Структура("ЗначенияЗаполнения,Идентификатор", ЗначенияЗаполнения, Идентификатор);
			ОткрытьФорму("Документ.Трудозатраты.ФормаОбъекта", ПараметрыФормы, ЭтотОбъект); 
			
		КонецЕсли;
				
		УстановитьВидимостьКомандУчетаВремени(ЭтотОбъект, ДанныеТаймера, Ид);
		
		ТекДата = ТекущаяДата();
		ОбновитьОтображениеВремениТаймера(ЭтотОбъект, ДанныеТаймера, Ид, ТекДата);
		
		Если Действие = "Отмена" И РезультатДиалога = КодВозвратаДиалога.Да Тогда
			Если УчетВремениВызовСервера.УдалитьТаймер(Идентификатор) Тогда
				Объект.Таймеры.Удалить(ДанныеТаймера);
				УдалитьЭлементыТаймера(Ид);
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	УчетВремениКлиент.ОбновитьПараметрВедетсяУчетВремени();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПродолжительность(Команда)
	ОбновитьОтображениеВремениТаймеров(ЭтотОбъект, ТекущаяДата());
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПродолжительностьАвтоматически()
	ОбновитьОтображениеВремениТаймеров(ЭтотОбъект, ТекущаяДата());
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТекущиеТаймеры()
	
	ТекДата = ТекущаяДатаСеанса();
	ВидДеятельностиПоУмолчанию = Справочники.ВидыДеятельности.ПолучитьВидДеятельностиПоУмолчанию();
	
	ГруппаТаймеры = Элементы.ГруппаТаймеры;
	Для Каждого Эл Из ГруппаТаймеры.ПодчиненныеЭлементы Цикл
		Элементы.Удалить(Эл);
	КонецЦикла;
	
	Объект.Таймеры.Очистить();
	
	ДополнительныеПараметрыПолученияТаймеров = Новый Структура;
	ДополнительныеПараметрыПолученияТаймеров.Вставить("ПредметДляСортировки", ТекущийПредмет);
	
	ТекущиеТаймеры = УчетВремени.ТекущиеТаймерыПользователя(,ДополнительныеПараметрыПолученияТаймеров);	
	
	Если ЗначениеЗаполнено(ТекущийПредмет) И ТекущиеТаймеры.Найти(ТекущийПредмет, "Предмет") = Неопределено Тогда
		СтрокаПоТекущемуПредмету = ТекущиеТаймеры.Вставить(0); //таймер по текущей задаче должен быть первым
		СтрокаПоТекущемуПредмету.Идентификатор = Строка(Новый УникальныйИдентификатор);
		СтрокаПоТекущемуПредмету.Предмет = ТекущийПредмет;
		СтрокаПоТекущемуПредмету.ДатаНачала = '00010101000000';
		СтрокаПоТекущемуПредмету.ДатаОкончания = '00010101000000';
		СтрокаПоТекущемуПредмету.Часов = 0;
		СтрокаПоТекущемуПредмету.СчетчикЗапусков = 0;
		СтрокаПоТекущемуПредмету.Комментарий = "";
		СтрокаПоТекущемуПредмету.ВидДеятельности = ВидДеятельностиПоУмолчанию;
	КонецЕсли;
	
	ДобавитьРеквизитыСДаннымиТаймеров(ТекущиеТаймеры);
	
	ПредметыПоТаймерам = ОбщегоНазначения.ВыгрузитьКолонку(ТекущиеТаймеры, "Предмет", Истина);
	
	Для Каждого Предмет Из ПредметыПоТаймерам Цикл
		
		Если ЗначениеЗаполнено(Предмет) Тогда
			ИдПредмета = СтрЗаменить(Строка(Предмет.УникальныйИдентификатор()), "-", "_");
		Иначе
			ИдПредмета = СтрЗаменить(Строка(Новый УникальныйИдентификатор()), "-", "_");
		КонецЕсли;
		
		ПредставлениеПредмета = ПредставлениеПредметаУчетаТрудозатрат(Предмет);
		
		ГруппаТаймеровПоПредмету = Элементы.Добавить("ГруппаПредмета_" + ИдПредмета, Тип("ГруппаФормы"), ГруппаТаймеры);
		ГруппаТаймеровПоПредмету.Вид         = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаТаймеровПоПредмету.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		ГруппаТаймеровПоПредмету.Заголовок   = ПредставлениеПредмета;
		ГруппаТаймеровПоПредмету.ЗаголовокСвернутогоОтображения = ПредставлениеПредмета;
		ГруппаТаймеровПоПредмету.Поведение   = ПоведениеОбычнойГруппы.Свертываемая;
		ГруппаТаймеровПоПредмету.ОтображениеУправления = ОтображениеУправленияОбычнойГруппы.Картинка;
		
		ТаймерыПоПредмету = ТекущиеТаймеры.НайтиСтроки(Новый Структура("Предмет", Предмет));
		
		Для Каждого ДанныеТаймера Из ТаймерыПоПредмету Цикл
			
			НоваяСтрока = Объект.Таймеры.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеТаймера);
			
			Ид = СтрЗаменить(ДанныеТаймера.Идентификатор, "-", "_");
			
			ДобавитьЭлементыТекущегоТаймера(ГруппаТаймеровПоПредмету, ДанныеТаймера, Ид, ТекДата);
			
			ЭтотОбъект["Комментарий_"+Ид] = ДанныеТаймера.Комментарий;
			ЭтотОбъект["ВидДеятельности_"+Ид] = ДанныеТаймера.ВидДеятельности;
			
			ОбновитьОтображениеВремениТаймера(ЭтотОбъект, ДанныеТаймера, Ид, ТекДата);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьРеквизитыСДаннымиТаймеров(ТекущиеТаймеры)
	
	МассивДобавляемыхРеквизитов = Новый Массив;
	
	ИдентификаторыТаймеров = ОбщегоНазначения.ВыгрузитьКолонку(ТекущиеТаймеры, "Идентификатор", Истина);
	
	Для Каждого Идентификатор Из ИдентификаторыТаймеров Цикл
		
		Ид = СтрЗаменить(Идентификатор, "-", "_");
		
		ДобавленныйРеквизит = Новый РеквизитФормы("ВидДеятельности_"+Ид, Новый ОписаниеТипов("СправочникСсылка.ВидыДеятельности"));
		МассивДобавляемыхРеквизитов.Добавить(ДобавленныйРеквизит);
		
		ДобавленныйРеквизит = Новый РеквизитФормы("Комментарий_"+Ид, Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(255)));
		МассивДобавляемыхРеквизитов.Добавить(ДобавленныйРеквизит);
		
	КонецЦикла;
	
	ИзменитьРеквизиты(МассивДобавляемыхРеквизитов);                       
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьЭлементыТекущегоТаймера(ГруппаТаймеры, ДанныеТаймера, Ид, ТекДата)
	
	ГруппаНовогоТаймера = Элементы.Добавить("Группа_" + Ид, Тип("ГруппаФормы"), ГруппаТаймеры);
	ГруппаНовогоТаймера.Вид         = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаНовогоТаймера.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	ГруппаНовогоТаймера.ОтображатьЗаголовок   = Ложь;
	
	Строка1 = Элементы.Добавить("Строка1_" + Ид, Тип("ГруппаФормы"), ГруппаНовогоТаймера);
	Строка1.Вид         = ВидГруппыФормы.ОбычнаяГруппа;
	Строка1.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
	Строка1.ОтображатьЗаголовок   = Ложь;
	
	НадписьДатаНачала = Элементы.Добавить("НадписьДатаНачала_" + Ид, Тип("ДекорацияФормы"), Строка1);              
	НадписьДатаОкончания = Элементы.Добавить("НадписьДатаОкончания_" + Ид, Тип("ДекорацияФормы"), Строка1);              
	НадписьПродолжительность = Элементы.Добавить("НадписьПродолжительность_" + Ид, Тип("ДекорацияФормы"), Строка1);              
		
	Кнопка = КнопкаДобавленнойКоманды("Старт_" + Ид, "Начать учет времени", Строка1);
	Кнопка.Картинка = БиблиотекаКартинок.ТаймерСтарт;
	Кнопка.Отображение = ОтображениеКнопки.Картинка;
	Кнопка.Ширина = 3;
	
	Кнопка = КнопкаДобавленнойКоманды("Стоп_" + Ид, "Остановить учет времени", Строка1);
	Кнопка.Картинка = БиблиотекаКартинок.ТаймерСтоп;
	Кнопка.Отображение = ОтображениеКнопки.Картинка;
	Кнопка.Ширина = 3;
	
	Кнопка = КнопкаДобавленнойКоманды("Зафиксировать_" + Ид, "Зафиксировать учет времени", Строка1);
	Кнопка.Картинка = БиблиотекаКартинок.ТаймерЗафиксировать;
	Кнопка.Отображение = ОтображениеКнопки.Картинка;
	Кнопка.Ширина = 3;
	
	Кнопка = КнопкаДобавленнойКоманды("Отмена_" + Ид, "Отменить учет времени", Строка1);
	Кнопка.Картинка = БиблиотекаКартинок.ТаймерОтменить;
	Кнопка.Отображение = ОтображениеКнопки.Картинка;
	Кнопка.Ширина = 3;
	
	Кнопка = КнопкаДобавленнойКоманды("ОткрытьПредмет_" + Ид, "Открыть предмет", Строка1);
	Кнопка.Отображение = ОтображениеКнопки.Текст;
	
	УстановитьВидимостьКомандУчетаВремени(ЭтотОбъект, ДанныеТаймера, Ид);
	
	Строка2 = Элементы.Добавить("Строка2_" + Ид, Тип("ГруппаФормы"), ГруппаНовогоТаймера);
	Строка2.Вид         = ВидГруппыФормы.ОбычнаяГруппа;
	Строка2.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
	Строка2.ОтображатьЗаголовок   = Ложь;
	
	Поле = Элементы.Добавить("ВидДеятельности_" + Ид, Тип("ПолеФормы"), Строка2);              
	Поле.Заголовок = "Вид деятельности";
	Поле.ПутьКДанным = "ВидДеятельности_" + Ид;
	Поле.Вид = ВидПоляФормы.ПолеВвода;
	Поле.УстановитьДействие("ПриИзменении", "РеквизитТаймераПриИзменении");
	
	Строка3 = Элементы.Добавить("Строка3_" + Ид, Тип("ГруппаФормы"), ГруппаНовогоТаймера);
	Строка3.Вид         = ВидГруппыФормы.ОбычнаяГруппа;
	Строка3.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
	Строка3.ОтображатьЗаголовок   = Ложь;
	
	Поле = Элементы.Добавить("Комментарий_" + Ид, Тип("ПолеФормы"), Строка3);              
	Поле.Заголовок = "Комментарий";
	Поле.ПутьКДанным = "Комментарий_" + Ид;
	Поле.Вид = ВидПоляФормы.ПолеВвода;
	Поле.АвтоМаксимальнаяШирина = Ложь;
	Поле.УстановитьДействие("ПриИзменении", "РеквизитТаймераПриИзменении");

КонецПроцедуры

&НаСервере
Процедура УдалитьЭлементыТаймера(Ид)
	
	ИменаКоманд = СтрРазделить("Старт_,Стоп_,Зафиксировать_,Отмена_", ",", Ложь);
	Для Каждого ИмяКоманды Из ИменаКоманд Цикл
		к = Команды.Найти(ИмяКоманды + Ид);
		Если к <> Неопределено Тогда
			Команды.Удалить(к);
		КонецЕсли;
	КонецЦикла;
	
	Эл = Элементы.Найти("Группа_" + Ид);
	Если Эл <> Неопределено Тогда
		Элементы.Удалить(Эл);
	КонецЕсли;

	УдаляемыеРеквизиты = Новый Массив;
	УдаляемыеРеквизиты.Добавить("ВидДеятельности_"+Ид);
	УдаляемыеРеквизиты.Добавить("Комментарий_"+Ид);
	ИзменитьРеквизиты(,УдаляемыеРеквизиты);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьКомандУчетаВремени(Форма, ДанныеТаймера, Ид)
	
	Элементы = Форма.Элементы;
	
	ОтображатьСтарт = Не ЗначениеЗаполнено(ДанныеТаймера.ДатаНачала) ИЛИ ЗначениеЗаполнено(ДанныеТаймера.ДатаОкончания);
	ОтображатьСтоп = ЗначениеЗаполнено(ДанныеТаймера.ДатаНачала) И Не ЗначениеЗаполнено(ДанныеТаймера.ДатаОкончания);
	
	Элементы["Старт_" + Ид].Видимость = ОтображатьСтарт;
	Элементы["Стоп_" + Ид].Видимость = ОтображатьСтоп;
	Элементы["Отмена_" + Ид].Видимость = Истина;

КонецПроцедуры

&НаСервере
Функция КнопкаДобавленнойКоманды(ИмяКоманды, ЗаголовокКоманды, Группа)
	
	НоваяКоманда = Команды.Добавить(ИмяКоманды);
	НоваяКоманда.Подсказка = ЗаголовокКоманды;
	НоваяКоманда.Действие = "Подключаемый_ОбработатьКомандуУчетаВремени";
	
	Кнопка = Элементы.Добавить(ИмяКоманды, Тип("КнопкаФормы"), Группа);
	Кнопка.ИмяКоманды = ИмяКоманды;
	Кнопка.Заголовок = ЗаголовокКоманды;
	
	Возврат Кнопка;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьОтображениеВремениТаймеров(Форма, ТекДата)
	
	Для Каждого ДанныеТаймера Из Форма.Объект.Таймеры Цикл
		
		Ид = СтрЗаменить(ДанныеТаймера.Идентификатор, "-", "_");
		ОбновитьОтображениеВремениТаймера(Форма, ДанныеТаймера, Ид, ТекДата);
				
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьОтображениеВремениТаймера(Форма, ДанныеТаймера, Ид, ТекДата)
	
	Элементы = Форма.Элементы;
	
	ПродолжительностьТекущегоЗамера = 0;
	
	Если ЗначениеЗаполнено(ДанныеТаймера.ДатаНачала) И Не ЗначениеЗаполнено(ДанныеТаймера.ДатаОкончания) Тогда
		ПродолжительностьТекущегоЗамера = УчетВремениКлиентСервер.РазностьДатВЧасах(ДанныеТаймера.ДатаНачала, ТекДата);
	КонецЕсли;
	
	ПродолжительностьТаймераВсего = ДанныеТаймера.Часов + ПродолжительностьТекущегоЗамера;
	
	НадписьДатаНачала = Элементы.Найти("НадписьДатаНачала_" + Ид);
	НадписьДатаОкончания = Элементы.Найти("НадписьДатаОкончания_" + Ид);
	НадписьПродолжительность = Элементы.Найти("НадписьПродолжительность_" + Ид);
	
	НадписьДатаНачала.Заголовок = СтрШаблон("Начало: %1", ПредставлениеДаты(ДанныеТаймера.ДатаНачала));
	НадписьДатаОкончания.Заголовок = СтрШаблон("Окончание: %1", ПредставлениеДаты(ДанныеТаймера.ДатаОкончания));
	НадписьПродолжительность.Заголовок = СтрШаблон("Продолжительность: %1 ч. (Всего: %2 ч.)", 
		Формат(ПродолжительностьТекущегоЗамера, "ЧДЦ=2"), Формат(ПродолжительностьТаймераВсего, "ЧДЦ=2"));
		
КонецПроцедуры

&НаКлиенте
Процедура ЗафиксироватьДругиеЗапущенныеТаймеры(ДанныеТаймера)
	
	ТекДата = ТекущаяДата();
	
	ПараметрыУчетаВремени = Новый Структура("Предмет,ДатаНачала,ДатаОкончания,Часов,СчетчикЗапусков,Комментарий,ВидДеятельности");
	
	Для Каждого ДанныеДругогоТаймера Из Объект.Таймеры Цикл
		
		Если ДанныеДругогоТаймера.Идентификатор <> ДанныеТаймера.Идентификатор 
			И ЗначениеЗаполнено(ДанныеДругогоТаймера.ДатаНачала)
			И Не ЗначениеЗаполнено(ДанныеДругогоТаймера.ДатаОкончания) Тогда
			
			ДанныеДругогоТаймера.ДатаОкончания = ТекДата;
			ДанныеДругогоТаймера.Часов = ДанныеДругогоТаймера.Часов + УчетВремениКлиентСервер.РазностьДатВЧасах(ДанныеДругогоТаймера.ДатаНачала, ДанныеДругогоТаймера.ДатаОкончания);
			
			ЗаполнитьЗначенияСвойств(ПараметрыУчетаВремени, ДанныеДругогоТаймера);
			
			УчетВремениВызовСервера.ОтразитьИзменениеТаймераУчетаВремени(ДанныеДругогоТаймера.Идентификатор, ПараметрыУчетаВремени);
			
			Ид = СтрЗаменить(ДанныеДругогоТаймера.Идентификатор, "-", "_");
			УстановитьВидимостьКомандУчетаВремени(ЭтотОбъект, ДанныеДругогоТаймера, Ид);
			ОбновитьОтображениеВремениТаймера(ЭтотОбъект, ДанныеДругогоТаймера, Ид, ТекДата);
			
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПредставлениеДаты(Дата)
	
	Если Не ЗначениеЗаполнено(Дата) Тогда
		Возврат "-";
	ИначеЕсли НачалоДня(Дата) = НачалоДня(ТекущаяДата()) Тогда
		Возврат Формат(Дата, "ДФ=HH:mm");
	Иначе
		Возврат Формат(Дата, "ДФ='dd.MM HH:mm'");
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ПредставлениеПредметаУчетаТрудозатрат(Предмет)
	
	Если ТипЗнч(Предмет) = Тип("ДокументСсылка.Задача") Тогда
		Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Предмет, "Номер,Тема,Проект");
		Представление = СтрШаблон("Задача #%1: %2 (%3)", Формат(Реквизиты.Номер,"ЧГ=0"), Реквизиты.Тема, Реквизиты.Проект);
	ИначеЕсли ТипЗнч(Предмет) = Тип("ДокументСсылка.ПланОбучения") Тогда
		Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Предмет, "Курс");
		Представление = СтрШаблон("Курс: %1; Тема: %2", Реквизиты.Курс, "");
	ИначеЕсли ТипЗнч(Предмет) = Тип("СправочникСсылка.Проекты") Тогда
		Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Предмет, "Наименование");
		Представление = СтрШаблон("Проект: %1", Реквизиты.Наименование);
		
	Иначе
		Представление = Строка(Предмет);
	КонецЕсли;
	
	Возврат Представление;
		
КонецФункции

&НаКлиенте
Процедура ОткрытьПредметТаймера(Ид)
	
	Идентификатор = СтрЗаменить(Ид, "_", "-");
	СтрокиТаймера = Объект.Таймеры.НайтиСтроки(Новый Структура("Идентификатор", Идентификатор));
	ДанныеТаймера = СтрокиТаймера[0];
	Если ЗначениеЗаполнено(ДанныеТаймера.Предмет) Тогда
		ПоказатьЗначение(,ДанныеТаймера.Предмет);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

