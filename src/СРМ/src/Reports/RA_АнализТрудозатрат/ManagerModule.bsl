#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВариантыОтчетов

// См. ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов.
//
Процедура НастроитьВариантыОтчета(Настройки, НастройкиОтчета) Экспорт
	
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "ДиаграммаГанта");
	НастройкиВарианта.Описание = НСтр("ru = 'Продолжительность работы пользователей.'");
	
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "ТрудозатратыПоПроектам");
	НастройкиВарианта.Описание = НСтр("ru = 'Трудозатраты по проектам.'");
	
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "ТрудозатратыПоПользователям");
	НастройкиВарианта.Описание = НСтр("ru = 'Трудозатраты по пользователям.'");
	
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "ДинамикаОтбивок");
	НастройкиВарианта.Описание = НСтр("ru = 'Динамика общих отбивок по периодам.'");
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВариантыОтчетов

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СформироватьОтчетПоПродолжительностиРаботыПользователей(ПараметрыЗаполнения) Экспорт
	
	// Параметры отчета
	ДатаНачала = ПараметрыЗаполнения.ДатаНачала;
	ДатаОкончания = ПараметрыЗаполнения.ДатаОкончания;
	ВыводитьЗаголовок = ПараметрыЗаполнения.ВыводитьЗаголовок;
	ВыводитьОтбор = ПараметрыЗаполнения.ВыводитьОтбор;
	
	Результат = Новый Структура;
	Отчет = Новый ТабличныйДокумент;
	
	// Получаем данные для построения отчета.
	РезультатЗапроса = ДанныеДляОтчетаПоПродолжительностиРаботыПользователей(ПараметрыЗаполнения);
	ОтчетПустой        = РезультатЗапроса.Пустой();
	Макет = ПолучитьМакет("ПродолжительностьРаботыПользователей");
	
	// Набор цветов для фона диаграммы и таблицы.
	ЦветаФона = Новый Массив;
	ЦветаФона.Добавить(WebЦвета.Белый);
	ЦветаФона.Добавить(WebЦвета.СветлоЖелтый);
	ЦветаФона.Добавить(WebЦвета.Лимонный);
	ЦветаФона.Добавить(WebЦвета.НавахоБелый);
	
	// Формируем шапку отчета
	Если ВыводитьЗаголовок.Значение = ТипВыводаТекстаКомпоновкиДанных.Выводить
		И ВыводитьЗаголовок.Использование
		ИЛИ Не ВыводитьЗаголовок.Использование Тогда
		Отчет.Вывести(Макет.ПолучитьОбласть("ШапкаОтчета"));
	КонецЕсли;
	
	// Получаем ДиаграммуГанта и задаем параметры, необходимые для ее заполнения.
	Область = Макет.ПолучитьОбласть("Диаграмма");
	ДиаграммаГанта = Область.Рисунки.ДиаграммаГанта.Объект;
	ДиаграммаГанта.Обновление = Ложь;  
	
	Серия = ДиаграммаГанта.Серии.Добавить();
	
	//Заполняем диаграмму ганта
	ВыборкаИтоги = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Если ВыборкаИтоги.Следующий() Тогда
		
		НачалоПериодаДиаграммы = ВыборкаИтоги.ДатаНачала - 300;
		КонецПериодаДиаграммы = ВыборкаИтоги.ДатаОкончания + 300;
	
		ВыборкаПользователь = ВыборкаИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
		Пока ВыборкаПользователь.Следующий() Цикл

			ТочкаПользователь = ДиаграммаГанта.УстановитьТочку(ВыборкаПользователь.Пользователь);
			ТочкаПользователь.Текст = СтрШаблон("%1 (%2 ч.)", ВыборкаПользователь.Пользователь, Формат(ВыборкаПользователь.КоличествоЧасов, "ЧДЦ=2"));
			ТочкаПользователь.ЦветФона = WebЦвета.Бирюзовый;
			
			Значение = ДиаграммаГанта.ПолучитьЗначение(ТочкаПользователь, Серия);
			Интервал = Значение.Добавить();
			Интервал.Начало = ВыборкаПользователь.ДатаНачала;
			Интервал.Конец = ВыборкаПользователь.ДатаОкончания;
			
			ВыборкаПартнер = ВыборкаПользователь.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаПартнер.Следующий() Цикл
				
				ВыборкаПроект = ВыборкаПартнер.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				Пока ВыборкаПроект.Следующий() Цикл
					
					КлючТочки = Строка(ВыборкаПользователь.Пользователь) + Строка(ВыборкаПроект.Проект);
					Точка = ДиаграммаГанта.УстановитьТочку(КлючТочки, ВыборкаПользователь.Пользователь);
					Точка.Текст = СтрШаблон("%1 (%2 ч.)", ВыборкаПроект.Проект, Формат(ВыборкаПроект.КоличествоЧасов, "ЧДЦ=2"));
					//Точка.Расшифровка = Новый Массив;

					Значение = ДиаграммаГанта.ПолучитьЗначение(Точка, Серия);
					
					ВыборкаПериоды = ВыборкаПроект.Выбрать();
					
					Пока ВыборкаПериоды.Следующий() Цикл
						
						Интервал = Значение.Добавить();
						Интервал.Начало = ВыборкаПериоды.ДатаНачала;
						Интервал.Конец = ВыборкаПериоды.ДатаОкончания;
						Интервал.Текст = СтрШаблон("#%1: %2 - %3 (%4 ч.)
							|%5", 
						    ВыборкаПериоды.Задача,
							Формат(Интервал.Начало, "ДЛФ=T"),
							Формат(Интервал.Конец, "ДЛФ=T"),
							Формат(ВыборкаПериоды.КоличествоЧасов, "ЧДЦ=2"),
							ВыборкаПериоды.Наименование);
							
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
						
		КонецЦикла;
	КонецЕсли;	
		
	// Устанавливаем настройки отображения диаграммы.
	ДиаграммаГанта.ПоказатьУровеньТочек(2);
	ЦветаДиаграммыГанта(НачалоПериодаДиаграммы, ДиаграммаГанта, ЦветаФона);
	ПериодАнализа = КонецПериодаДиаграммы - НачалоПериодаДиаграммы;
	ШкалаВремениДиаграммыГанта(ДиаграммаГанта, ПериодАнализа);
	
	КоличествоКолонок = 0;
	Для Каждого Точки1 Из ДиаграммаГанта.Точки Цикл
		КоличествоКолонок = КоличествоКолонок + 1 + Точки1.Точки.Количество();
	КонецЦикла;
	Область.Рисунки.ДиаграммаГанта.Высота				 = 10 + 6 * КоличествоКолонок;
	Область.Рисунки.ДиаграммаГанта.Ширина 				 = 320;
	ДиаграммаГанта.АвтоОпределениеПолногоИнтервала	 = Ложь; 
	ДиаграммаГанта.ОтображениеИнтервала   			 = ОтображениеИнтервалаДиаграммыГанта.Плоский;
	ДиаграммаГанта.ОбластьЛегенды.Расположение       = РасположениеЛегендыДиаграммы.Нет;
	ДиаграммаГанта.РастягиваниеПоВертикали 			 = РастягиваниеПоВертикалиДиаграммыГанта.РастягиватьСтрокиИДанные;
	ДиаграммаГанта.УстановитьПолныйИнтервал(НачалоПериодаДиаграммы, КонецПериодаДиаграммы);
	ДиаграммаГанта.Обновление = Истина;

	Отчет.Вывести(Область);
	
	Результат.Вставить("Отчет", Отчет);
	Результат.Вставить("ОтчетПустой", ОтчетПустой);
	Возврат Результат;
	
КонецФункции

Функция ДанныеДляОтчетаПоПродолжительностиРаботыПользователей(ПараметрыЗаполнения)
	
	ДатаНачала = ПараметрыЗаполнения.ДатаНачала;
	ДатаОкончания = ПараметрыЗаполнения.ДатаОкончания;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(RA_RedmineТрудозатраты.ДатаСоздания, СЕКУНДА, -3600 * RA_RedmineТрудозатраты.КоличествоЧасов) КАК ДатаНачала,
	|	RA_RedmineТрудозатраты.ДатаСоздания КАК ДатаОкончания,
	|	RA_RedmineТрудозатраты.КоличествоЧасов КАК КоличествоЧасов,
	|	RA_RedmineТрудозатраты.Проект КАК Проект,
	|	RA_RedmineТрудозатраты.Наименование КАК Наименование,
	|	RA_RedmineТрудозатраты.Пользователь КАК Пользователь,
	|	RA_RedmineТрудозатраты.Проект.Партнер КАК Партнер,
	|	RA_RedmineТрудозатраты.Задача.Код КАК Задача
	|ИЗ
	|	Справочник.RA_RedmineТрудозатраты КАК RA_RedmineТрудозатраты
	|ГДЕ
	|	RA_RedmineТрудозатраты.ДатаОтбивки МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И НЕ RA_RedmineТрудозатраты.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	Пользователь,
	|	КоличествоЧасов УБЫВ
	|ИТОГИ
	|	МИНИМУМ(ДатаНачала),
	|	МАКСИМУМ(ДатаОкончания),
	|	СУММА(КоличествоЧасов)
	|ПО
	|	ОБЩИЕ,
	|	Пользователь,
	|	Партнер,
	|	Проект
	|АВТОУПОРЯДОЧИВАНИЕ";
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
	
	Результат = Запрос.Выполнить();
	
	Возврат Результат;
	
КонецФункции

// Процедура для установки цвета интервалов и фона диаграммы ганта.
//
// Параметры:
// ДатаНачала - день, за который производится построение диаграммы.
// ДиаграммаГанта - диаграмма ганта, тип - РисунокТабличногоДокумента.
// ОдновременноСессий - таблица значений с данными по количеству одновременно работавших
// 		регламентных заданий в течении дня.
// ЦветаФона - массив цветов для интервалов фона.
//
Процедура ЦветаДиаграммыГанта(ДатаНачала, ДиаграммаГанта, ЦветаФона)
	// Цвета интервалов диаграммы
	ЦветаИнтервалов = Новый Массив;
	ЦветНачало = 153;
	ЦветКонец = 253;
	Пока ЦветНачало <= ЦветКонец Цикл
		ЦветаИнтервалов.Добавить(ЦветНачало);
		ЦветНачало = ЦветНачало + 10;
	КонецЦикла;
	
	Индекс = 0;
	Для Каждого ТочкаРодитель Из ДиаграммаГанта.Точки Цикл
		ТочкаРодитель.ПриоритетЦвета = Истина;
		ТочкаРодитель.Цвет = WebЦвета.Бирюзовый;
		ТочкаРодитель.ДополнительныйЦвет = WebЦвета.Бирюзовый;
		Для Каждого ТочкаДиаграммыГанта Из ТочкаРодитель.Точки Цикл
			ТочкаДиаграммыГанта.ПриоритетЦвета = Истина;
			СинийЦвет = ЦветаИнтервалов.Получить(Индекс);
			ЦветСерии = Новый Цвет(204,204,СинийЦвет);
			ТочкаДиаграммыГанта.Цвет = ЦветСерии;
			Индекс = Индекс + 1;
			Если Индекс = 11 Тогда
				Индекс = 0;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	//// Добавляем цвета интервалов фона.
	//ТекущееКоличествоСессий = 0;
	//ИндексЦвета = 3;
	//Для Каждого СтрокаОдновременноСессий Из ОдновременноСессий Цикл
	//	Если СтрокаОдновременноСессий.ОдновременноРегламентныхЗаданий = 1 Тогда
	//		Продолжить
	//	КонецЕсли;
	//	СтрокаДаты = Лев(СтрокаОдновременноСессий.ДатаОдновременноРегламентныхЗаданий, 8);
	//	ДатаНачалоИФ =  Дата(Формат(ДатаНачала,"ДЛФ=D") + " " + СтрокаДаты);
	//	ДатаКонецИФ = КонецЧаса(ДатаНачалоИФ);
	//	ИнтервалДГ = ДиаграммаГанта.ИнтервалыФона.Добавить(ДатаНачалоИФ, ДатаКонецИФ);
	//	Если ТекущееКоличествоСессий <> 0 
	//		И ТекущееКоличествоСессий <> СтрокаОдновременноСессий.ОдновременноРегламентныхЗаданий 
	//		И ИндексЦвета <> 0 Тогда
	//		ИндексЦвета = ИндексЦвета - 1;
	//	КонецЕсли;
	//	ЦветФона = ЦветаФона.Получить(ИндексЦвета);
	//	ИнтервалДГ.Цвет = ЦветФона;
	//	
	//	ТекущееКоличествоСессий = СтрокаОдновременноСессий.ОдновременноРегламентныхЗаданий;
	//КонецЦикла;
КонецПроцедуры

// Процедура формирования шкалы времени диаграммы ганта.
//
// Параметры:
// ДиаграммаГанта - диаграмма ганта, тип - РисунокТабличногоДокумента.
//
Процедура ШкалаВремениДиаграммыГанта(ДиаграммаГанта, ПериодАнализа)
	ЭлементыШкалыВремени = ДиаграммаГанта.ОбластьПостроения.ШкалаВремени.Элементы;
	
	ПервыйЭлемент = ЭлементыШкалыВремени[0];
	Для Индекс = 1 По ЭлементыШкалыВремени.Количество()-1 Цикл
		ЭлементыШкалыВремени.Удалить(ЭлементыШкалыВремени[1]);
	КонецЦикла; 
		
	ПервыйЭлемент.Единица = ТипЕдиницыШкалыВремени.День;
	ПервыйЭлемент.ЛинииДелений = Новый Линия(ТипЛинииДиаграммы.Сплошная, 1);
	ПервыйЭлемент.ФорматДня =  ФорматДняШкалыВремени.ДеньМесяца;
	
	Элемент = ЭлементыШкалыВремени.Добавить();
	Элемент.Единица = ТипЕдиницыШкалыВремени.Час;
	Элемент.ЛинииДелений = Новый Линия(ТипЛинииДиаграммы.Точечная, 1);
	
	Если ПериодАнализа <= 3600 Тогда
		Элемент = ЭлементыШкалыВремени.Добавить();
		Элемент.Единица = ТипЕдиницыШкалыВремени.Минута;
		Элемент.ЛинииДелений = Новый Линия(ТипЛинииДиаграммы.Точечная, 1);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#КонецЕсли